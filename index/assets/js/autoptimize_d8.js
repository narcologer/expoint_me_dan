try { !function (a, b) { "use strict"; function c() { if (!e) { e = !0; var a, c, d, f, g = -1 !== navigator.appVersion.indexOf("MSIE 10"), h = !!navigator.userAgent.match(/Trident.*rv:11\./), i = b.querySelectorAll("iframe.wp-embedded-content"); for (c = 0; c < i.length; c++) { if (d = i[c], !d.getAttribute("data-secret")) f = Math.random().toString(36).substr(2, 10), d.src += "#?secret=" + f, d.setAttribute("data-secret", f); if (g || h) a = d.cloneNode(!0), a.removeAttribute("security"), d.parentNode.replaceChild(a, d) } } } var d = !1, e = !1; if (b.querySelector) if (a.addEventListener) d = !0; if (a.wp = a.wp || {}, !a.wp.receiveEmbedMessage) if (a.wp.receiveEmbedMessage = function (c) { var d = c.data; if (d) if (d.secret || d.message || d.value) if (!/[^a-zA-Z0-9]/.test(d.secret)) { var e, f, g, h, i, j = b.querySelectorAll('iframe[data-secret="' + d.secret + '"]'), k = b.querySelectorAll('blockquote[data-secret="' + d.secret + '"]'); for (e = 0; e < k.length; e++)k[e].style.display = "none"; for (e = 0; e < j.length; e++)if (f = j[e], c.source === f.contentWindow) { if (f.removeAttribute("style"), "height" === d.message) { if (g = parseInt(d.value, 10), g > 1e3) g = 1e3; else if (~~g < 200) g = 200; f.height = g } if ("link" === d.message) if (h = b.createElement("a"), i = b.createElement("a"), h.href = f.getAttribute("src"), i.href = d.value, i.host === h.host) if (b.activeElement === f) a.top.location.href = d.value } else; } }, d) a.addEventListener("message", a.wp.receiveEmbedMessage, !1), b.addEventListener("DOMContentLoaded", c, !1), a.addEventListener("load", c, !1) }(window, document); } catch (e) { }
try {
    var not_utp, passiveSupported; (function ($) {
        function handleButtonOnClick() { console.log("not_utp_block=" + not_utp); if (not_utp !== '1') { not_utp = 1; document.cookie = "not_utp_block=1; path=/; max-age=7776000"; const els = document.getElementsByTagName('body'); if (undefined !== els && not_utp != '') { els[0].classList.add('not-utp'); } } }
        var button = document.querySelector('#utp-block-8 button.close'); (button) ? button.addEventListener("click", handleButtonOnClick, (undefined !== passiveSupported) ? { passive: true } : false) : null;
    })(document);
} catch (e) { }
try {
    var getClientId; var sendSiGa, hasStartPostSiGa; var logger; window.analitikaSiGa = window.analitikaSiGa || []; function startAnalitikaSiGa(w, d, s) {
        const push_script = '/wp-content/plugins/vw-analitika/start-ajax.php'; const postEventSiGa = function (event) { event['cid'] = getClientId(); let jsonEvent = JSON.stringify(event); const query = 'action=ex_send_siga&event=' + jsonEvent; const xhttp = new XMLHttpRequest(); xhttp.onload = function () { (!!logger) && logger.console('postEventSiGa ex_send_siga', this.responseText); }; xhttp.open("POST", push_script, true); xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded"); xhttp.send(query); return; }
        const sendSiGaAll = function () { w[s] = w[s] || []; if (hasStartPostSiGa == true && w[s].length > 0) { var event = w[s].shift(); while (event !== undefined) { (!!logger) && logger.console('sendEventGaAll event', event); postEventSiGa(event); event = w[s].shift(); } } }
        sendSiGa = function (event, ec, ea, el, ev) { w[s] = w[s] || []; w[s].push({ 'event': event, 'ec': ec, 'ea': ea, 'el': el, 'ev': ev, 'time': new Date().getTime(), 'dl': location.pathname, 'ul': navigator.language, 'ni': 1 }); setTimeout(sendSiGaAll, 1); }
        hasStartPostSiGa = true; d.addEventListener("DOMContentLoaded", function () { hasStartPostSiGa = true; setTimeout(sendSiGaAll, 1); });
    }
    startAnalitikaSiGa(window, document, 'analitikaSiGa');
} catch (e) { }
try {
    var logger; (function ($) {
        if (!String.prototype.format) {
            String.prototype.format = function () {
                var args = arguments; if (typeof args[0] === 'object')
                    args = args[0]; return this.replace(/{{([\w\d.]+)}}/g, function (match, index) { return typeof args[index] !== 'undefined' ? args[index] : index; });
            };
        }
        var GO_STORE = 'go_alert_disable'; var COMPONENTS = { title: 'Вы переходите на {{name}}', article: 'Низкая вероятность получения кэшбэк при обмене на <b>{{name}}</b>. ' + 'Рекомендуем выбрать другой обменник.' }; var TEMPLATE = '<form id="exchanger-go-alert" class="exSumo-form" data-exchanger="{{name}}">' + '<input type="checkbox" id="go-alert-switcher" hidden aria-hidden="true" checked tabindex="-1">' + '<div class="modal-container justify-content-center align-items-center switched">' + '<label class="modal-overlays" for="go-alert-switcher"></label>' + '<section class="modal-content flex-column justify-content-between" aria-hidden="true">' + '<h2 class="modal-title mb-24">' + COMPONENTS.title + '</h2>' + '<article class="mb-24">' + COMPONENTS.article + '</article>' + '<input type="checkbox" id="exchanger-go-hide-for-exchanger" {{ignore}} hidden>' + '<label class="flex-row flex-nowrap align-items-center mb-24" for="exchanger-go-hide-for-exchanger">' + '<label class="label-checkbox flex-row_item" for="exchanger-go-hide-for-exchanger"></label>' + '<span class="flex-row_item">Больше не показывать предупреждения для этого обменника</span>' + '</label>' + '<footer class="flex-row justify-content-end">' + '<span class="flex-auto flex-row_item button button-secondary" data-open="{{link}}" data-xname="{{name}}" data-statname="{{statname}}">Перейти в обменник</span>' + '<label class="flex-auto flex-row_item button" for="go-alert-switcher" aria-hidden="true">Выбрать другой</label>' + '</footer>' + '</section>' + '</div>' + '</form>'; function goTo(e) {
            var $this = $(this); var link = $this.data('open'); if (undefined == link) { link = $this.attr('href'); }
            var message = $this.data('alert'); var xv = 0, xvr = 0, params = {}; if ($this.find('[data-xv]').is('[data-xv]')) { window.course_analitica = window.course_analitica || 1; xv = $this.find('[data-xv]').eq(0).data('xv'); xvr = xv / 100 * window.course_analitica; params = { order_price: xvr, currency: "RUB" }; }
            var target = 'exchange_transition'; if (message) { return $this.trigger('go_alert.exSumo', link); }
            switch (location.pathname) {
                case '/': target = 'main_transition'; break; case '/exchanger/': target = 'exlist_transition'
                    break; default:
            }
            if (!$(e.target).is('span.comments-counter')) { try { (!!logger) && logger.console([target, params, window.course_analitica]); ym(50526853, 'reachGoal', target, params); } catch { console.log('no send ym()'); } } else { (!!logger) && logger.console('No Push Y.'); }
            $this.trigger('go_to.exSumo', link); e.stopPropagation(); e.preventDefault(); return false;
        }
        function goToNewWindow(e, link) {
            if (link && link.indexOf('go=') !== -1) {
                var d = Math.floor(Date.now() / 42); if (link.indexOf('&dp=') === -1) { link += '&d=' + d; } else { link = link.replace(/([?&])d=.*?(&|$)/, '$d=' + d + '$2'); }
                $(e.target).attr('data-click', d); $(e.target).trigger('open_link.go_to.exSumo', link);
            }
            (!!logger) && logger.console(link); link && link.length > 3 && window.open(link);
        }
        function alertMessage(e, link) {
            var $target = $(e.target); var $currentTarget = $(e.currentTarget); var $blockAlert = $('#exchanger-go-alert'); var data = { link: link, message: $target.data('alert'), name: $('.name-table', $target).text().trim(), statname: $currentTarget.getAttribute('data-statname') }; data.ignore = isGoAlertEnabled(data.name) ? 'checked' : ''; if (data.ignore) { return $target.trigger('go_to.exSumo', data.link); }
            if ($blockAlert.length) { $('h2', $blockAlert).html(COMPONENTS.title.format(data)); $('article', $blockAlert).html(COMPONENTS.article.format(data)); $blockAlert.data('exchanger', data.name); $('[data-open]', $blockAlert).data('open', data.link); $('#go-alert-switcher').click(); } else { $('body').append(TEMPLATE.format(data)); }
        }
        function toggleGoAlertDisable(e) { var exchanger = $('#exchanger-go-alert').data('exchanger'); isGoAlertEnabled(exchanger) ? removeGoAlertDisable(exchanger) : addGoAlertDisable(exchanger); e.stopPropagation(); }
        function isGoAlertEnabled(exchanger) { var values = localStorage[GO_STORE] || ''; return -1 < values.indexOf(exchanger); }
        function addGoAlertDisable(exchanger) {
            var values = localStorage[GO_STORE] || ''; if (-1 === values.indexOf(exchanger))
                localStorage[GO_STORE] = values + ',' + exchanger;
        }
        function removeGoAlertDisable(exchanger) { var values = localStorage[GO_STORE] || ''; localStorage[GO_STORE] = values.replace(exchanger, '').replace(',,', ','); }
        function removeAlertIntoFirst() { var $rows = $('#exchangesTable > tbody > tr'); var rowsCount = $rows.length; var alertsCount = $rows.filter('.alert-row').length; if (6 > rowsCount && alertsCount === rowsCount) { $rows.filter(':first-child').removeClass('alert-row').data('alert', null); } }
        $(document).on('go_alert.exSumo', alertMessage); $(document).on('go_to.exSumo', goToNewWindow); $(document).on('change', '#exchanger-go-hide-for-exchanger', toggleGoAlertDisable); $(document).on('click', '[data-open]', goTo); $(document).on('exchangetable.exSumo', removeAlertIntoFirst); $(document).trigger('exchangetable.exSumo'); if ($('#exchangesDoubleTable').find('.item-double-info').is('tr')) { $(document).on('click', '#exchangesDoubleTable .item-double-info .double_changer_link', goTo); $(document).on('click', '#exchangesDoubleTable .item-double-info .link_obmen', goTo); }
    })(jQuery);
} catch (e) { }
try {
    var clientId, getClientId, loadClientId; var logger; function startClientId() {
        loadClientId = function () {
            var vwaClient = ''; vwaClient = getCookie('vwa-client'); (!!logger) && logger.console('loadClientId vwa-client', vwaClient); if (undefined !== vwaClient && (vwaClient)) { clientId = vwaClient; localStorage.setItem('sumo-vwa-client', clientId); return; }
            vwaClient = localStorage.getItem('sumo-vwa-client'); (!!logger) && logger.console('loadClientId sumo-vwa-client', vwaClient); if (undefined !== vwaClient && (vwaClient)) { clientId = vwaClient; return; }
            (!!logger) && logger.console('loadClientId no load client id'); return;
        }
        getClientId = function () {
            (!!logger) && logger.console('getClientId', clientId); if (undefined === clientId) { loadClientId(); }
            if (undefined !== clientId) { return clientId; }
            return false;
        }
        function getCookie(name) { let matches = document.cookie.match(new RegExp("(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)")); return (!(undefined == matches)) ? decodeURIComponent(matches[1]) : undefined; }
        setTimeout(loadClientId, 1);
    }
    startClientId();
} catch (e) { }
try {
    var partnerId, getPartnerId, loadPartnerId; const analitika_script = '/wp-content/plugins/vw-analitika/start-ajax.php'; var logger; (function ($) {
        loadPartnerId = function () {
            var vwaRef = ''; vwaRef = getCookie('vwa-ref'); (!!logger) && logger.console('loadPartnerId vwa-ref', vwaRef); if (undefined !== vwaRef && (vwaRef)) { partnerId = vwaRef; return; }
            vwaRef = localStorage.getItem('sumo-vwa-ref'); (!!logger) && logger.console('loadPartnerId sumo-vwa-ref', vwaRef); if (undefined !== vwaRef && (vwaRef)) { partnerId = vwaRef; return; }
            const query = 'action=ex_get_refer'; $.post(analitika_script, query, function (data) { (!!logger) && logger.console('loadPartnerId ex_get_refer', data); partnerId = data.patrnerId; localStorage.setItem('sumo-vwa-ref', partnerId); document.cookie = "vwa-ref=" + encodeURIComponent(partnerId); }, 'json');
        }
        getPartnerId = function () {
            (!!logger) && logger.console(partnerId); if (undefined !== partnerId) { return partnerId; }
            return false;
        }
        function getCookie(name) { let matches = document.cookie.match(new RegExp("(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)")); return (!(undefined == matches)) ? decodeURIComponent(matches[1]) : undefined; }
    })(jQuery);
} catch (e) { }
try { !function (t, e) { "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = t || self).Sweetalert2 = e() }(this, function () { "use strict"; function r(t) { return (r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t })(t) } function a(t, e) { if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function") } function o(t, e) { for (var n = 0; n < e.length; n++) { var o = e[n]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, o.key, o) } } function s(t, e, n) { return e && o(t.prototype, e), n && o(t, n), t } function u() { return (u = Object.assign || function (t) { for (var e = 1; e < arguments.length; e++) { var n, o = arguments[e]; for (n in o) Object.prototype.hasOwnProperty.call(o, n) && (t[n] = o[n]) } return t }).apply(this, arguments) } function c(t) { return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) { return t.__proto__ || Object.getPrototypeOf(t) })(t) } function l(t, e) { return (l = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t })(t, e) } function d() { if ("undefined" == typeof Reflect || !Reflect.construct) return !1; if (Reflect.construct.sham) return !1; if ("function" == typeof Proxy) return !0; try { return Date.prototype.toString.call(Reflect.construct(Date, [], function () { })), !0 } catch (t) { return !1 } } function i(t, e, n) { return (i = d() ? Reflect.construct : function (t, e, n) { var o = [null]; o.push.apply(o, e); o = new (Function.bind.apply(t, o)); return n && l(o, n.prototype), o }).apply(null, arguments) } function p(t, e) { return !e || "object" != typeof e && "function" != typeof e ? function (t) { if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t }(t) : e } function f(t, e, n) { return (f = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function (t, e, n) { t = function (t, e) { for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = c(t));); return t }(t, e); if (t) { e = Object.getOwnPropertyDescriptor(t, e); return e.get ? e.get.call(n) : e.value } })(t, e, n || t) } function m(t) { return t.charAt(0).toUpperCase() + t.slice(1) } function h(e) { return Object.keys(e).map(function (t) { return e[t] }) } function g(t) { return Array.prototype.slice.call(t) } function v(t, e) { e = '"'.concat(t, '" is deprecated and will be removed in the next major release. Please use "').concat(e, '" instead.'), -1 === Y.indexOf(e) && (Y.push(e), W(e)) } function b(t) { return t && "function" == typeof t.toPromise } function y(t) { return b(t) ? t.toPromise() : Promise.resolve(t) } function w(t) { return t && Promise.resolve(t) === t } function C(t) { return t instanceof Element || "object" === r(t = t) && t.jquery } function k() { return document.body.querySelector(".".concat($.container)) } function e(t) { var e = k(); return e ? e.querySelector(t) : null } function t(t) { return e(".".concat(t)) } function A() { return t($.popup) } function x() { return t($.icon) } function B() { return t($.title) } function P() { return t($.content) } function E() { return t($["html-container"]) } function O() { return t($.image) } function n() { return t($["progress-steps"]) } function S() { return t($["validation-message"]) } function T() { return e(".".concat($.actions, " .").concat($.confirm)) } function L() { return e(".".concat($.actions, " .").concat($.deny)) } function D() { return e(".".concat($.loader)) } function q() { return e(".".concat($.actions, " .").concat($.cancel)) } function j() { return t($.actions) } function M() { return t($.header) } function I() { return t($.footer) } function H() { return t($["timer-progress-bar"]) } function V() { return t($.close) } function R() { var t = g(A().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')).sort(function (t, e) { return t = parseInt(t.getAttribute("tabindex")), (e = parseInt(e.getAttribute("tabindex"))) < t ? 1 : t < e ? -1 : 0 }), e = g(A().querySelectorAll('\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex="0"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n')).filter(function (t) { return "-1" !== t.getAttribute("tabindex") }); return function (t) { for (var e = [], n = 0; n < t.length; n++)-1 === e.indexOf(t[n]) && e.push(t[n]); return e }(t.concat(e)).filter(function (t) { return wt(t) }) } function N() { return !G() && !document.body.classList.contains($["no-backdrop"]) } function U(e, t) { e.textContent = "", t && (t = (new DOMParser).parseFromString(t, "text/html"), g(t.querySelector("head").childNodes).forEach(function (t) { e.appendChild(t) }), g(t.querySelector("body").childNodes).forEach(function (t) { e.appendChild(t) })) } function _(t, e) { if (e) { for (var n = e.split(/\s+/), o = 0; o < n.length; o++)if (!t.classList.contains(n[o])) return; return 1 } } function F(t, e, n) { var o, i; if (i = e, g((o = t).classList).forEach(function (t) { -1 === h($).indexOf(t) && -1 === h(X).indexOf(t) && -1 === h(i.showClass).indexOf(t) && o.classList.remove(t) }), e.customClass && e.customClass[n]) { if ("string" != typeof e.customClass[n] && !e.customClass[n].forEach) return W("Invalid type of customClass.".concat(n, '! Expected string or iterable object, got "').concat(r(e.customClass[n]), '"')); vt(t, e.customClass[n]) } } var z = "SweetAlert2:", W = function (t) { console.warn("".concat(z, " ").concat("object" === r(t) ? t.join(" ") : t)) }, K = function (t) { console.error("".concat(z, " ").concat(t)) }, Y = [], Z = function (t) { return "function" == typeof t ? t() : t }, Q = Object.freeze({ cancel: "cancel", backdrop: "backdrop", close: "close", esc: "esc", timer: "timer" }), J = function (t) { var e, n = {}; for (e in t) n[t[e]] = "swal2-" + t[e]; return n }, $ = J(["container", "shown", "height-auto", "iosfix", "popup", "modal", "no-backdrop", "no-transition", "toast", "toast-shown", "toast-column", "show", "hide", "close", "title", "header", "content", "html-container", "actions", "confirm", "deny", "cancel", "footer", "icon", "icon-content", "image", "input", "file", "range", "select", "radio", "checkbox", "label", "textarea", "inputerror", "input-label", "validation-message", "progress-steps", "active-progress-step", "progress-step", "progress-step-line", "loader", "loading", "styled", "top", "top-start", "top-end", "top-left", "top-right", "center", "center-start", "center-end", "center-left", "center-right", "bottom", "bottom-start", "bottom-end", "bottom-left", "bottom-right", "grow-row", "grow-column", "grow-fullscreen", "rtl", "timer-progress-bar", "timer-progress-bar-container", "scrollbar-measure", "icon-success", "icon-warning", "icon-info", "icon-question", "icon-error"]), X = J(["success", "warning", "info", "question", "error"]), G = function () { return document.body.classList.contains($["toast-shown"]) }, tt = { previousBodyPadding: null }; function et(t, e) { if (!e) return null; switch (e) { case "select": case "textarea": case "file": return yt(t, $[e]); case "checkbox": return t.querySelector(".".concat($.checkbox, " input")); case "radio": return t.querySelector(".".concat($.radio, " input:checked")) || t.querySelector(".".concat($.radio, " input:first-child")); case "range": return t.querySelector(".".concat($.range, " input")); default: return yt(t, $.input) } } function nt(t) { var e; t.focus(), "file" !== t.type && (e = t.value, t.value = "", t.value = e) } function ot(t, e, n) { t && e && ("string" == typeof e && (e = e.split(/\s+/).filter(Boolean)), e.forEach(function (e) { t.forEach ? t.forEach(function (t) { n ? t.classList.add(e) : t.classList.remove(e) }) : n ? t.classList.add(e) : t.classList.remove(e) })) } function it(t, e, n) { n === "".concat(parseInt(n)) && (n = parseInt(n)), n || 0 === parseInt(n) ? t.style[e] = "number" == typeof n ? "".concat(n, "px") : n : t.style.removeProperty(e) } function rt(t) { var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "flex"; t.style.display = e } function at(t) { t.style.display = "none" } function st(t, e, n, o) { (e = t.querySelector(e)) && (e.style[n] = o) } function ut(t, e, n) { e ? rt(t, n) : at(t) } function ct(t) { return !!(t.scrollHeight > t.clientHeight) } function lt(t) { var e = window.getComputedStyle(t), t = parseFloat(e.getPropertyValue("animation-duration") || "0"), e = parseFloat(e.getPropertyValue("transition-duration") || "0"); return 0 < t || 0 < e } function dt(t) { var e = 1 < arguments.length && void 0 !== arguments[1] && arguments[1], n = H(); wt(n) && (e && (n.style.transition = "none", n.style.width = "100%"), setTimeout(function () { n.style.transition = "width ".concat(t / 1e3, "s linear"), n.style.width = "0%" }, 10)) } function pt() { return "undefined" == typeof window || "undefined" == typeof document } function ft(t) { Mn.isVisible() && gt !== t.target.value && Mn.resetValidationMessage(), gt = t.target.value } function mt(t, e) { t instanceof HTMLElement ? e.appendChild(t) : "object" === r(t) ? At(t, e) : t && U(e, t) } function ht(t, e) { var n, o, i, r, a = j(), s = D(), u = T(), c = L(), l = q(); e.showConfirmButton || e.showDenyButton || e.showCancelButton || at(a), F(a, e, "actions"), Pt(u, "confirm", e), Pt(c, "deny", e), Pt(l, "cancel", e), n = u, o = c, i = l, (r = e).buttonsStyling ? (vt([n, o, i], $.styled), r.confirmButtonColor && (n.style.backgroundColor = r.confirmButtonColor), r.denyButtonColor && (o.style.backgroundColor = r.denyButtonColor), r.cancelButtonColor && (i.style.backgroundColor = r.cancelButtonColor)) : bt([n, o, i], $.styled), e.reverseButtons && (a.insertBefore(l, s), a.insertBefore(c, s), a.insertBefore(u, s)), U(s, e.loaderHtml), F(s, e, "loader") } var gt, vt = function (t, e) { ot(t, e, !0) }, bt = function (t, e) { ot(t, e, !1) }, yt = function (t, e) { for (var n = 0; n < t.childNodes.length; n++)if (_(t.childNodes[n], e)) return t.childNodes[n] }, wt = function (t) { return !(!t || !(t.offsetWidth || t.offsetHeight || t.getClientRects().length)) }, Ct = '\n <div aria-labelledby="'.concat($.title, '" aria-describedby="').concat($.content, '" class="').concat($.popup, '" tabindex="-1">\n   <div class="').concat($.header, '">\n     <ul class="').concat($["progress-steps"], '"></ul>\n     <div class="').concat($.icon, '"></div>\n     <img class="').concat($.image, '" />\n     <h2 class="').concat($.title, '" id="').concat($.title, '"></h2>\n     <button type="button" class="').concat($.close, '"></button>\n   </div>\n   <div class="').concat($.content, '">\n     <div id="').concat($.content, '" class="').concat($["html-container"], '"></div>\n     <input class="').concat($.input, '" />\n     <input type="file" class="').concat($.file, '" />\n     <div class="').concat($.range, '">\n       <input type="range" />\n       <output></output>\n     </div>\n     <select class="').concat($.select, '"></select>\n     <div class="').concat($.radio, '"></div>\n     <label for="').concat($.checkbox, '" class="').concat($.checkbox, '">\n       <input type="checkbox" />\n       <span class="').concat($.label, '"></span>\n     </label>\n     <textarea class="').concat($.textarea, '"></textarea>\n     <div class="').concat($["validation-message"], '" id="').concat($["validation-message"], '"></div>\n   </div>\n   <div class="').concat($.actions, '">\n     <div class="').concat($.loader, '"></div>\n     <button type="button" class="').concat($.confirm, '"></button>\n     <button type="button" class="').concat($.deny, '"></button>\n     <button type="button" class="').concat($.cancel, '"></button>\n   </div>\n   <div class="').concat($.footer, '"></div>\n   <div class="').concat($["timer-progress-bar-container"], '">\n     <div class="').concat($["timer-progress-bar"], '"></div>\n   </div>\n </div>\n').replace(/(^|\n)\s*/g, ""), kt = function (t) { var e, n, o, i, r, a = !!(i = k()) && (i.parentNode.removeChild(i), bt([document.documentElement, document.body], [$["no-backdrop"], $["toast-shown"], $["has-column"]]), !0); pt() ? K("SweetAlert2 requires document to initialize") : ((r = document.createElement("div")).className = $.container, a && vt(r, $["no-transition"]), U(r, Ct), (i = "string" == typeof (e = t.target) ? document.querySelector(e) : e).appendChild(r), a = t, (e = A()).setAttribute("role", a.toast ? "alert" : "dialog"), e.setAttribute("aria-live", a.toast ? "polite" : "assertive"), a.toast || e.setAttribute("aria-modal", "true"), r = i, "rtl" === window.getComputedStyle(r).direction && vt(k(), $.rtl), t = P(), a = yt(t, $.input), e = yt(t, $.file), n = t.querySelector(".".concat($.range, " input")), o = t.querySelector(".".concat($.range, " output")), i = yt(t, $.select), r = t.querySelector(".".concat($.checkbox, " input")), t = yt(t, $.textarea), a.oninput = ft, e.onchange = ft, i.onchange = ft, r.onchange = ft, t.oninput = ft, n.oninput = function (t) { ft(t), o.value = n.value }, n.onchange = function (t) { ft(t), n.nextSibling.value = n.value }) }, At = function (t, e) { t.jquery ? xt(e, t) : U(e, t.toString()) }, xt = function (t, e) { if (t.textContent = "", 0 in e) for (var n = 0; n in e; n++)t.appendChild(e[n].cloneNode(!0)); else t.appendChild(e.cloneNode(!0)) }, Bt = function () { if (pt()) return !1; var t, e = document.createElement("div"), n = { WebkitAnimation: "webkitAnimationEnd", OAnimation: "oAnimationEnd oanimationend", animation: "animationend" }; for (t in n) if (Object.prototype.hasOwnProperty.call(n, t) && void 0 !== e.style[t]) return n[t]; return !1 }(); function Pt(t, e, n) { ut(t, n["show".concat(m(e), "Button")], "inline-block"), U(t, n["".concat(e, "ButtonText")]), t.setAttribute("aria-label", n["".concat(e, "ButtonAriaLabel")]), t.className = $[e], F(t, n, "".concat(e, "Button")), vt(t, n["".concat(e, "ButtonClass")]) } function Et(t, e) { var n, o, i = k(); i && (o = i, "string" == typeof (n = e.backdrop) ? o.style.background = n : n || vt([document.documentElement, document.body], $["no-backdrop"]), !e.backdrop && e.allowOutsideClick && W('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`'), o = i, (n = e.position) in $ ? vt(o, $[n]) : (W('The "position" parameter is not valid, defaulting to "center"'), vt(o, $.center)), n = i, !(o = e.grow) || "string" != typeof o || (o = "grow-".concat(o)) in $ && vt(n, $[o]), F(i, e, "container"), (e = document.body.getAttribute("data-swal2-queue-step")) && (i.setAttribute("data-queue-step", e), document.body.removeAttribute("data-swal2-queue-step"))) } function Ot(t, e) { t.placeholder && !e.inputPlaceholder || (t.placeholder = e.inputPlaceholder) } function St(t, e, n) { var o, i; n.inputLabel && (t.id = $.input, o = document.createElement("label"), i = $["input-label"], o.setAttribute("for", t.id), o.className = i, vt(o, n.customClass.inputLabel), o.innerText = n.inputLabel, e.insertAdjacentElement("beforebegin", o)) } var Tt = { promise: new WeakMap, innerParams: new WeakMap, domCache: new WeakMap }, Lt = ["input", "file", "range", "select", "radio", "checkbox", "textarea"], Dt = function (t) { if (!It[t.input]) return K('Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(t.input, '"')); var e = Mt(t.input), n = It[t.input](e, t); rt(n), setTimeout(function () { nt(n) }) }, qt = function (t, e) { var n = et(P(), t); if (n) for (var o in !function (t) { for (var e = 0; e < t.attributes.length; e++) { var n = t.attributes[e].name; -1 === ["type", "value", "style"].indexOf(n) && t.removeAttribute(n) } }(n), e) "range" === t && "placeholder" === o || n.setAttribute(o, e[o]) }, jt = function (t) { var e = Mt(t.input); t.customClass && vt(e, t.customClass.input) }, Mt = function (t) { t = $[t] || $.input; return yt(P(), t) }, It = {}; It.text = It.email = It.password = It.number = It.tel = It.url = function (t, e) { return "string" == typeof e.inputValue || "number" == typeof e.inputValue ? t.value = e.inputValue : w(e.inputValue) || W('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(r(e.inputValue), '"')), St(t, t, e), Ot(t, e), t.type = e.input, t }, It.file = function (t, e) { return St(t, t, e), Ot(t, e), t }, It.range = function (t, e) { var n = t.querySelector("input"), o = t.querySelector("output"); return n.value = e.inputValue, n.type = e.input, o.value = e.inputValue, St(n, t, e), t }, It.select = function (t, e) { var n; return t.textContent = "", e.inputPlaceholder && (n = document.createElement("option"), U(n, e.inputPlaceholder), n.value = "", n.disabled = !0, n.selected = !0, t.appendChild(n)), St(t, t, e), t }, It.radio = function (t) { return t.textContent = "", t }, It.checkbox = function (t, e) { var n = et(P(), "checkbox"); n.value = 1, n.id = $.checkbox, n.checked = Boolean(e.inputValue); n = t.querySelector("span"); return U(n, e.inputPlaceholder), t }, It.textarea = function (e, t) { e.value = t.inputValue, Ot(e, t), St(e, e, t); function n(t) { return parseInt(window.getComputedStyle(t).paddingLeft) + parseInt(window.getComputedStyle(t).paddingRight) } var o; return "MutationObserver" in window && (o = parseInt(window.getComputedStyle(A()).width), new MutationObserver(function () { var t = e.offsetWidth + n(A()) + n(P()); A().style.width = o < t ? "".concat(t, "px") : null }).observe(e, { attributes: !0, attributeFilter: ["style"] })), e }; function Ht(t, e) { var o, i, r, n = E(); F(n, e, "htmlContainer"), e.html ? (mt(e.html, n), rt(n, "block")) : e.text ? (n.textContent = e.text, rt(n, "block")) : at(n), t = t, o = e, i = P(), t = Tt.innerParams.get(t), r = !t || o.input !== t.input, Lt.forEach(function (t) { var e = $[t], n = yt(i, e); qt(t, o.inputAttributes), n.className = e, r && at(n) }), o.input && (r && Dt(o), jt(o)), F(P(), e, "content") } function Vt() { return k() && k().getAttribute("data-queue-step") } function Rt(t, o) { var i = n(); if (!o.progressSteps || 0 === o.progressSteps.length) return at(i), 0; rt(i), i.textContent = ""; var r = parseInt(void 0 === o.currentProgressStep ? Vt() : o.currentProgressStep); r >= o.progressSteps.length && W("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"), o.progressSteps.forEach(function (t, e) { var n, t = (n = t, t = document.createElement("li"), vt(t, $["progress-step"]), U(t, n), t); i.appendChild(t), e === r && vt(t, $["active-progress-step"]), e !== o.progressSteps.length - 1 && (t = o, e = document.createElement("li"), vt(e, $["progress-step-line"]), t.progressStepsDistance && (e.style.width = t.progressStepsDistance), e = e, i.appendChild(e)) }) } function Nt(t, e) { var n, o = M(); F(o, e, "header"), Rt(0, e), n = t, o = e, t = Tt.innerParams.get(n), n = x(), t && o.icon === t.icon ? (Wt(n, o), Ft(n, o)) : o.icon || o.iconHtml ? o.icon && -1 === Object.keys(X).indexOf(o.icon) ? (K('Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(o.icon, '"')), at(n)) : (rt(n), Wt(n, o), Ft(n, o), vt(n, o.showClass.icon)) : at(n), function (t) { var e = O(); if (!t.imageUrl) return at(e); rt(e, ""), e.setAttribute("src", t.imageUrl), e.setAttribute("alt", t.imageAlt), it(e, "width", t.imageWidth), it(e, "height", t.imageHeight), e.className = $.image, F(e, t, "image") }(e), o = e, n = B(), ut(n, o.title || o.titleText), o.title && mt(o.title, n), o.titleText && (n.innerText = o.titleText), F(n, o, "title"), o = e, e = V(), U(e, o.closeButtonHtml), F(e, o, "closeButton"), ut(e, o.showCloseButton), e.setAttribute("aria-label", o.closeButtonAriaLabel) } function Ut(t, e) { var n, o, i; i = e, n = k(), o = A(), i.toast ? (it(n, "width", i.width), o.style.width = "100%") : it(o, "width", i.width), it(o, "padding", i.padding), i.background && (o.style.background = i.background), Qt(o, i), Et(0, e), Nt(t, e), Ht(t, e), ht(0, e), i = e, t = I(), ut(t, i.footer), i.footer && mt(i.footer, t), F(t, i, "footer"), "function" == typeof e.didRender ? e.didRender(A()) : "function" == typeof e.onRender && e.onRender(A()) } function _t() { return T() && T().click() } var Ft = function (t, e) { for (var n in X) e.icon !== n && bt(t, X[n]); vt(t, X[e.icon]), Kt(t, e), zt(), F(t, e, "icon") }, zt = function () { for (var t = A(), e = window.getComputedStyle(t).getPropertyValue("background-color"), n = t.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix"), o = 0; o < n.length; o++)n[o].style.backgroundColor = e }, Wt = function (t, e) { t.textContent = "", e.iconHtml ? U(t, Yt(e.iconHtml)) : "success" === e.icon ? U(t, '\n      <div class="swal2-success-circular-line-left"></div>\n      <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n      <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n      <div class="swal2-success-circular-line-right"></div>\n    ') : "error" === e.icon ? U(t, '\n      <span class="swal2-x-mark">\n        <span class="swal2-x-mark-line-left"></span>\n        <span class="swal2-x-mark-line-right"></span>\n      </span>\n    ') : U(t, Yt({ question: "?", warning: "!", info: "i" }[e.icon])) }, Kt = function (t, e) { if (e.iconColor) { t.style.color = e.iconColor, t.style.borderColor = e.iconColor; for (var n = 0, o = [".swal2-success-line-tip", ".swal2-success-line-long", ".swal2-x-mark-line-left", ".swal2-x-mark-line-right"]; n < o.length; n++)st(t, o[n], "backgroundColor", e.iconColor); st(t, ".swal2-success-ring", "borderColor", e.iconColor) } }, Yt = function (t) { return '<div class="'.concat($["icon-content"], '">').concat(t, "</div>") }, Zt = [], Qt = function (t, e) { t.className = "".concat($.popup, " ").concat(wt(t) ? e.showClass.popup : ""), e.toast ? (vt([document.documentElement, document.body], $["toast-shown"]), vt(t, $.toast)) : vt(t, $.modal), F(t, e, "popup"), "string" == typeof e.customClass && vt(t, e.customClass), e.icon && vt(t, $["icon-".concat(e.icon)]) }; function Jt(t) { var e = A(); e || Mn.fire(), e = A(); var n = j(), o = D(); !t && wt(T()) && (t = T()), rt(n), t && (at(t), o.setAttribute("data-button-to-replace", t.className)), o.parentNode.insertBefore(o, t), vt([e, n], $.loading), rt(o), e.setAttribute("data-loading", !0), e.setAttribute("aria-busy", !0), e.focus() } function $t() { return new Promise(function (t) { var e = window.scrollX, n = window.scrollY; te.restoreFocusTimeout = setTimeout(function () { te.previousActiveElement && te.previousActiveElement.focus ? (te.previousActiveElement.focus(), te.previousActiveElement = null) : document.body && document.body.focus(), t() }, 100), void 0 !== e && void 0 !== n && window.scrollTo(e, n) }) } function Xt() { if (te.timeout) return function () { var t = H(), e = parseInt(window.getComputedStyle(t).width); t.style.removeProperty("transition"), t.style.width = "100%"; var n = parseInt(window.getComputedStyle(t).width), n = parseInt(e / n * 100); t.style.removeProperty("transition"), t.style.width = "".concat(n, "%") }(), te.timeout.stop() } function Gt() { if (te.timeout) { var t = te.timeout.start(); return dt(t), t } } var te = {}, ee = !1, ne = {}; function oe(t) { for (var e = t.target; e && e !== document; e = e.parentNode)for (var n in ne) { var o = e.getAttribute(n); if (o) return void ne[n].fire({ template: o }) } } function ie(t) { return Object.prototype.hasOwnProperty.call(se, t) } function re(t) { return ce[t] } function ae(t) { for (var e in t) ie(o = e) || W('Unknown parameter "'.concat(o, '"')), t.toast && (n = e, -1 !== le.indexOf(n) && W('The parameter "'.concat(n, '" is incompatible with toasts'))), re(n = e) && v(n, re(n)); var n, o } var se = { title: "", titleText: "", text: "", html: "", footer: "", icon: void 0, iconColor: void 0, iconHtml: void 0, template: void 0, toast: !1, animation: !0, showClass: { popup: "swal2-show", backdrop: "swal2-backdrop-show", icon: "swal2-icon-show" }, hideClass: { popup: "swal2-hide", backdrop: "swal2-backdrop-hide", icon: "swal2-icon-hide" }, customClass: {}, target: "body", backdrop: !0, heightAuto: !0, allowOutsideClick: !0, allowEscapeKey: !0, allowEnterKey: !0, stopKeydownPropagation: !0, keydownListenerCapture: !1, showConfirmButton: !0, showDenyButton: !1, showCancelButton: !1, preConfirm: void 0, preDeny: void 0, confirmButtonText: "OK", confirmButtonAriaLabel: "", confirmButtonColor: void 0, denyButtonText: "No", denyButtonAriaLabel: "", denyButtonColor: void 0, cancelButtonText: "Cancel", cancelButtonAriaLabel: "", cancelButtonColor: void 0, buttonsStyling: !0, reverseButtons: !1, focusConfirm: !0, focusDeny: !1, focusCancel: !1, showCloseButton: !1, closeButtonHtml: "&times;", closeButtonAriaLabel: "Close this dialog", loaderHtml: "", showLoaderOnConfirm: !1, showLoaderOnDeny: !1, imageUrl: void 0, imageWidth: void 0, imageHeight: void 0, imageAlt: "", timer: void 0, timerProgressBar: !1, width: void 0, padding: void 0, background: void 0, input: void 0, inputPlaceholder: "", inputLabel: "", inputValue: "", inputOptions: {}, inputAutoTrim: !0, inputAttributes: {}, inputValidator: void 0, returnInputValueOnDeny: !1, validationMessage: void 0, grow: !1, position: "center", progressSteps: [], currentProgressStep: void 0, progressStepsDistance: void 0, onBeforeOpen: void 0, onOpen: void 0, willOpen: void 0, didOpen: void 0, onRender: void 0, didRender: void 0, onClose: void 0, onAfterClose: void 0, willClose: void 0, didClose: void 0, onDestroy: void 0, didDestroy: void 0, scrollbarPadding: !0 }, ue = ["allowEscapeKey", "allowOutsideClick", "background", "buttonsStyling", "cancelButtonAriaLabel", "cancelButtonColor", "cancelButtonText", "closeButtonAriaLabel", "closeButtonHtml", "confirmButtonAriaLabel", "confirmButtonColor", "confirmButtonText", "currentProgressStep", "customClass", "denyButtonAriaLabel", "denyButtonColor", "denyButtonText", "didClose", "didDestroy", "footer", "hideClass", "html", "icon", "iconColor", "iconHtml", "imageAlt", "imageHeight", "imageUrl", "imageWidth", "onAfterClose", "onClose", "onDestroy", "progressSteps", "reverseButtons", "showCancelButton", "showCloseButton", "showConfirmButton", "showDenyButton", "text", "title", "titleText", "willClose"], ce = { animation: 'showClass" and "hideClass', onBeforeOpen: "willOpen", onOpen: "didOpen", onRender: "didRender", onClose: "willClose", onAfterClose: "didClose", onDestroy: "didDestroy" }, le = ["allowOutsideClick", "allowEnterKey", "backdrop", "focusConfirm", "focusDeny", "focusCancel", "heightAuto", "keydownListenerCapture"], de = Object.freeze({ isValidParameter: ie, isUpdatableParameter: function (t) { return -1 !== ue.indexOf(t) }, isDeprecatedParameter: re, argsToParams: function (n) { var o = {}; return "object" !== r(n[0]) || C(n[0]) ? ["title", "html", "icon"].forEach(function (t, e) { e = n[e]; "string" == typeof e || C(e) ? o[t] = e : void 0 !== e && K("Unexpected type of ".concat(t, '! Expected "string" or "Element", got ').concat(r(e))) }) : u(o, n[0]), o }, isVisible: function () { return wt(A()) }, clickConfirm: _t, clickDeny: function () { return L() && L().click() }, clickCancel: function () { return q() && q().click() }, getContainer: k, getPopup: A, getTitle: B, getContent: P, getHtmlContainer: E, getImage: O, getIcon: x, getInputLabel: function () { return t($["input-label"]) }, getCloseButton: V, getActions: j, getConfirmButton: T, getDenyButton: L, getCancelButton: q, getLoader: D, getHeader: M, getFooter: I, getTimerProgressBar: H, getFocusableElements: R, getValidationMessage: S, isLoading: function () { return A().hasAttribute("data-loading") }, fire: function () { for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)e[n] = arguments[n]; return i(this, e) }, mixin: function (r) { return function (t) { !function (t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), e && l(t, e) }(i, t); var n, o, e = (n = i, o = d(), function () { var t, e = c(n); return p(this, o ? (t = c(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments)) }); function i() { return a(this, i), e.apply(this, arguments) } return s(i, [{ key: "_main", value: function (t, e) { return f(c(i.prototype), "_main", this).call(this, t, u({}, r, e)) } }]), i }(this) }, queue: function (t) { var r = this; Zt = t; function a(t, e) { Zt = [], t(e) } var s = []; return new Promise(function (i) { !function e(n, o) { n < Zt.length ? (document.body.setAttribute("data-swal2-queue-step", n), r.fire(Zt[n]).then(function (t) { void 0 !== t.value ? (s.push(t.value), e(n + 1, o)) : a(i, { dismiss: t.dismiss }) })) : a(i, { value: s }) }(0) }) }, getQueueStep: Vt, insertQueueStep: function (t, e) { return e && e < Zt.length ? Zt.splice(e, 0, t) : Zt.push(t) }, deleteQueueStep: function (t) { void 0 !== Zt[t] && Zt.splice(t, 1) }, showLoading: Jt, enableLoading: Jt, getTimerLeft: function () { return te.timeout && te.timeout.getTimerLeft() }, stopTimer: Xt, resumeTimer: Gt, toggleTimer: function () { var t = te.timeout; return t && (t.running ? Xt : Gt)() }, increaseTimer: function (t) { if (te.timeout) { t = te.timeout.increase(t); return dt(t, !0), t } }, isTimerRunning: function () { return te.timeout && te.timeout.isRunning() }, bindClickHandler: function () { ne[0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "data-swal-template"] = this, ee || (document.body.addEventListener("click", oe), ee = !0) } }); function pe() { var t, e; Tt.innerParams.get(this) && (t = Tt.domCache.get(this), at(t.loader), (e = t.popup.getElementsByClassName(t.loader.getAttribute("data-button-to-replace"))).length ? rt(e[0], "inline-block") : wt(T()) || wt(L()) || wt(q()) || at(t.actions), bt([t.popup, t.actions], $.loading), t.popup.removeAttribute("aria-busy"), t.popup.removeAttribute("data-loading"), t.confirmButton.disabled = !1, t.denyButton.disabled = !1, t.cancelButton.disabled = !1) } function fe() { null === tt.previousBodyPadding && document.body.scrollHeight > window.innerHeight && (tt.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")), document.body.style.paddingRight = "".concat(tt.previousBodyPadding + function () { var t = document.createElement("div"); t.className = $["scrollbar-measure"], document.body.appendChild(t); var e = t.getBoundingClientRect().width - t.clientWidth; return document.body.removeChild(t), e }(), "px")) } function me() { return !!window.MSInputMethodContext && !!document.documentMode } function he() { var t = k(), e = A(); t.style.removeProperty("align-items"), e.offsetTop < 0 && (t.style.alignItems = "flex-start") } var ge = function () { navigator.userAgent.match(/(CriOS|FxiOS|EdgiOS|YaBrowser|UCBrowser)/i) || A().scrollHeight > window.innerHeight - 44 && (k().style.paddingBottom = "".concat(44, "px")) }, ve = function () { var e, t = k(); t.ontouchstart = function (t) { e = be(t) }, t.ontouchmove = function (t) { e && (t.preventDefault(), t.stopPropagation()) } }, be = function (t) { var e = t.target, n = k(); return !ye(t) && !we(t) && (e === n || !(ct(n) || "INPUT" === e.tagName || ct(P()) && P().contains(e))) }, ye = function (t) { return t.touches && t.touches.length && "stylus" === t.touches[0].touchType }, we = function (t) { return t.touches && 1 < t.touches.length }, Ce = { swalPromiseResolve: new WeakMap }; function ke(t, e, n, o) { n ? Oe(t, o) : ($t().then(function () { return Oe(t, o) }), te.keydownTarget.removeEventListener("keydown", te.keydownHandler, { capture: te.keydownListenerCapture }), te.keydownHandlerAdded = !1), e.parentNode && !document.body.getAttribute("data-swal2-queue-step") && e.parentNode.removeChild(e), N() && (null !== tt.previousBodyPadding && (document.body.style.paddingRight = "".concat(tt.previousBodyPadding, "px"), tt.previousBodyPadding = null), _(document.body, $.iosfix) && (e = parseInt(document.body.style.top, 10), bt(document.body, $.iosfix), document.body.style.top = "", document.body.scrollTop = -1 * e), "undefined" != typeof window && me() && window.removeEventListener("resize", he), g(document.body.children).forEach(function (t) { t.hasAttribute("data-previous-aria-hidden") ? (t.setAttribute("aria-hidden", t.getAttribute("data-previous-aria-hidden")), t.removeAttribute("data-previous-aria-hidden")) : t.removeAttribute("aria-hidden") })), bt([document.documentElement, document.body], [$.shown, $["height-auto"], $["no-backdrop"], $["toast-shown"], $["toast-column"]]) } function Ae(t) { var e, n, o, i = A(); i && (t = xe(t), (e = Tt.innerParams.get(this)) && !_(i, e.hideClass.popup) && (n = Ce.swalPromiseResolve.get(this), bt(i, e.showClass.popup), vt(i, e.hideClass.popup), o = k(), bt(o, e.showClass.backdrop), vt(o, e.hideClass.backdrop), Be(this, i, e), n(t))) } function xe(t) { return void 0 === t ? { isConfirmed: !1, isDenied: !1, isDismissed: !0 } : u({ isConfirmed: !1, isDenied: !1, isDismissed: !1 }, t) } function Be(t, e, n) { var o = k(), i = Bt && lt(e), r = n.onClose, a = n.onAfterClose, s = n.willClose, n = n.didClose; Pe(e, s, r), i ? Ee(t, e, o, n || a) : ke(t, o, G(), n || a) } var Pe = function (t, e, n) { null !== e && "function" == typeof e ? e(t) : null !== n && "function" == typeof n && n(t) }, Ee = function (t, e, n, o) { te.swalCloseEventFinishedCallback = ke.bind(null, t, n, G(), o), e.addEventListener(Bt, function (t) { t.target === e && (te.swalCloseEventFinishedCallback(), delete te.swalCloseEventFinishedCallback) }) }, Oe = function (t, e) { setTimeout(function () { "function" == typeof e && e(), t._destroy() }) }; function Se(t, e, n) { var o = Tt.domCache.get(t); e.forEach(function (t) { o[t].disabled = n }) } function Te(t, e) { if (!t) return !1; if ("radio" === t.type) for (var n = t.parentNode.parentNode.querySelectorAll("input"), o = 0; o < n.length; o++)n[o].disabled = e; else t.disabled = e } var Le = function () { function n(t, e) { a(this, n), this.callback = t, this.remaining = e, this.running = !1, this.start() } return s(n, [{ key: "start", value: function () { return this.running || (this.running = !0, this.started = new Date, this.id = setTimeout(this.callback, this.remaining)), this.remaining } }, { key: "stop", value: function () { return this.running && (this.running = !1, clearTimeout(this.id), this.remaining -= new Date - this.started), this.remaining } }, { key: "increase", value: function (t) { var e = this.running; return e && this.stop(), this.remaining += t, e && this.start(), this.remaining } }, { key: "getTimerLeft", value: function () { return this.running && (this.stop(), this.start()), this.remaining } }, { key: "isRunning", value: function () { return this.running } }]), n }(), De = { email: function (t, e) { return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(t) ? Promise.resolve() : Promise.resolve(e || "Invalid email address") }, url: function (t, e) { return /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(t) ? Promise.resolve() : Promise.resolve(e || "Invalid URL") } }; function qe(t) { var e, n; (e = t).inputValidator || Object.keys(De).forEach(function (t) { e.input === t && (e.inputValidator = De[t]) }), t.showLoaderOnConfirm && !t.preConfirm && W("showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://sweetalert2.github.io/#ajax-request"), t.animation = Z(t.animation), (n = t).target && ("string" != typeof n.target || document.querySelector(n.target)) && ("string" == typeof n.target || n.target.appendChild) || (W('Target parameter is not valid, defaulting to "body"'), n.target = "body"), "string" == typeof t.title && (t.title = t.title.split("\n").join("<br />")), kt(t) } function je(t) { var e = k(), n = A(); "function" == typeof t.willOpen ? t.willOpen(n) : "function" == typeof t.onBeforeOpen && t.onBeforeOpen(n); var o = window.getComputedStyle(document.body).overflowY; Je(e, n, t), setTimeout(function () { Ze(e, n) }, 10), N() && (Qe(e, t.scrollbarPadding, o), g(document.body.children).forEach(function (t) { t === k() || function (t, e) { if ("function" == typeof t.contains) return t.contains(e) }(t, k()) || (t.hasAttribute("aria-hidden") && t.setAttribute("data-previous-aria-hidden", t.getAttribute("aria-hidden")), t.setAttribute("aria-hidden", "true")) })), G() || te.previousActiveElement || (te.previousActiveElement = document.activeElement), Ye(n, t), bt(e, $["no-transition"]) } function Me(t) { var e = A(); t.target === e && (t = k(), e.removeEventListener(Bt, Me), t.style.overflowY = "auto") } function Ie(t, e) { t.closePopup({ isConfirmed: !0, value: e }) } function He(t, e, n) { var o = R(); if (o.length) return (e += n) === o.length ? e = 0 : -1 === e && (e = o.length - 1), o[e].focus(); A().focus() } var Ve = ["swal-title", "swal-html", "swal-footer"], Re = function (t) { var n = {}; return g(t.querySelectorAll("swal-param")).forEach(function (t) { Ke(t, ["name", "value"]); var e = t.getAttribute("name"), t = t.getAttribute("value"); "boolean" == typeof se[e] && "false" === t && (t = !1), "object" === r(se[e]) && (t = JSON.parse(t)), n[e] = t }), n }, Ne = function (t) { var n = {}; return g(t.querySelectorAll("swal-button")).forEach(function (t) { Ke(t, ["type", "color", "aria-label"]); var e = t.getAttribute("type"); n["".concat(e, "ButtonText")] = t.innerHTML, n["show".concat(m(e), "Button")] = !0, t.hasAttribute("color") && (n["".concat(e, "ButtonColor")] = t.getAttribute("color")), t.hasAttribute("aria-label") && (n["".concat(e, "ButtonAriaLabel")] = t.getAttribute("aria-label")) }), n }, Ue = function (t) { var e = {}, t = t.querySelector("swal-image"); return t && (Ke(t, ["src", "width", "height", "alt"]), t.hasAttribute("src") && (e.imageUrl = t.getAttribute("src")), t.hasAttribute("width") && (e.imageWidth = t.getAttribute("width")), t.hasAttribute("height") && (e.imageHeight = t.getAttribute("height")), t.hasAttribute("alt") && (e.imageAlt = t.getAttribute("alt"))), e }, _e = function (t) { var e = {}, t = t.querySelector("swal-icon"); return t && (Ke(t, ["type", "color"]), t.hasAttribute("type") && (e.icon = t.getAttribute("type")), t.hasAttribute("color") && (e.iconColor = t.getAttribute("color")), e.iconHtml = t.innerHTML), e }, Fe = function (t) { var n = {}, e = t.querySelector("swal-input"); e && (Ke(e, ["type", "label", "placeholder", "value"]), n.input = e.getAttribute("type") || "text", e.hasAttribute("label") && (n.inputLabel = e.getAttribute("label")), e.hasAttribute("placeholder") && (n.inputPlaceholder = e.getAttribute("placeholder")), e.hasAttribute("value") && (n.inputValue = e.getAttribute("value"))); t = t.querySelectorAll("swal-input-option"); return t.length && (n.inputOptions = {}, g(t).forEach(function (t) { Ke(t, ["value"]); var e = t.getAttribute("value"), t = t.innerHTML; n.inputOptions[e] = t })), n }, ze = function (t, e) { var n, o = {}; for (n in e) { var i = e[n], r = t.querySelector(i); r && (Ke(r, []), o[i.replace(/^swal-/, "")] = r.innerHTML) } return o }, We = function (e) { var n = Ve.concat(["swal-param", "swal-button", "swal-image", "swal-icon", "swal-input", "swal-input-option"]); g(e.querySelectorAll("*")).forEach(function (t) { t.parentNode === e && (t = t.tagName.toLowerCase(), -1 === n.indexOf(t) && W("Unrecognized element <".concat(t, ">"))) }) }, Ke = function (e, n) { g(e.attributes).forEach(function (t) { -1 === n.indexOf(t.name) && W(['Unrecognized attribute "'.concat(t.name, '" on <').concat(e.tagName.toLowerCase(), ">."), "".concat(n.length ? "Allowed attributes are: ".concat(n.join(", ")) : "To set the value, use HTML within the element.")]) }) }, Ye = function (t, e) { "function" == typeof e.didOpen ? setTimeout(function () { return e.didOpen(t) }) : "function" == typeof e.onOpen && setTimeout(function () { return e.onOpen(t) }) }, Ze = function (t, e) { Bt && lt(e) ? (t.style.overflowY = "hidden", e.addEventListener(Bt, Me)) : t.style.overflowY = "auto" }, Qe = function (t, e, n) { var o; (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || "MacIntel" === navigator.platform && 1 < navigator.maxTouchPoints) && !_(document.body, $.iosfix) && (o = document.body.scrollTop, document.body.style.top = "".concat(-1 * o, "px"), vt(document.body, $.iosfix), ve(), ge()), "undefined" != typeof window && me() && (he(), window.addEventListener("resize", he)), e && "hidden" !== n && fe(), setTimeout(function () { t.scrollTop = 0 }) }, Je = function (t, e, n) { vt(t, n.showClass.backdrop), e.style.setProperty("opacity", "0", "important"), rt(e), setTimeout(function () { vt(e, n.showClass.popup), e.style.removeProperty("opacity") }, 10), vt([document.documentElement, document.body], $.shown), n.heightAuto && n.backdrop && !n.toast && vt([document.documentElement, document.body], $["height-auto"]) }, $e = function (t) { return t.checked ? 1 : 0 }, Xe = function (t) { return t.checked ? t.value : null }, Ge = function (t) { return t.files.length ? null !== t.getAttribute("multiple") ? t.files : t.files[0] : null }, tn = function (e, n) { function o(t) { return nn[n.input](i, on(t), n) } var i = P(); b(n.inputOptions) || w(n.inputOptions) ? (Jt(T()), y(n.inputOptions).then(function (t) { e.hideLoading(), o(t) })) : "object" === r(n.inputOptions) ? o(n.inputOptions) : K("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(r(n.inputOptions))) }, en = function (e, n) { var o = e.getInput(); at(o), y(n.inputValue).then(function (t) { o.value = "number" === n.input ? parseFloat(t) || 0 : "".concat(t), rt(o), o.focus(), e.hideLoading() }).catch(function (t) { K("Error in inputValue promise: ".concat(t)), o.value = "", rt(o), o.focus(), e.hideLoading() }) }, nn = { select: function (t, e, i) { function o(t, e, n) { var o = document.createElement("option"); o.value = n, U(o, e), o.selected = rn(n, i.inputValue), t.appendChild(o) } var r = yt(t, $.select); e.forEach(function (t) { var e, n = t[0], t = t[1]; Array.isArray(t) ? ((e = document.createElement("optgroup")).label = n, e.disabled = !1, r.appendChild(e), t.forEach(function (t) { return o(e, t[1], t[0]) })) : o(r, t, n) }), r.focus() }, radio: function (t, e, i) { var r = yt(t, $.radio); e.forEach(function (t) { var e = t[0], n = t[1], o = document.createElement("input"), t = document.createElement("label"); o.type = "radio", o.name = $.radio, o.value = e, rn(e, i.inputValue) && (o.checked = !0); e = document.createElement("span"); U(e, n), e.className = $.label, t.appendChild(o), t.appendChild(e), r.appendChild(t) }); e = r.querySelectorAll("input"); e.length && e[0].focus() } }, on = function n(o) { var i = []; return "undefined" != typeof Map && o instanceof Map ? o.forEach(function (t, e) { "object" === r(t) && (t = n(t)), i.push([e, t]) }) : Object.keys(o).forEach(function (t) { var e = o[t]; "object" === r(e) && (e = n(e)), i.push([t, e]) }), i }, rn = function (t, e) { return e && e.toString() === t.toString() }, an = function (t, e, n) { var o = function (t, e) { var n = t.getInput(); if (!n) return null; switch (e.input) { case "checkbox": return $e(n); case "radio": return Xe(n); case "file": return Ge(n); default: return e.inputAutoTrim ? n.value.trim() : n.value } }(t, e); e.inputValidator ? sn(t, e, o) : t.getInput().checkValidity() ? ("deny" === n ? un : cn)(t, e, o) : (t.enableButtons(), t.showValidationMessage(e.validationMessage)) }, sn = function (e, n, o) { e.disableInput(), Promise.resolve().then(function () { return y(n.inputValidator(o, n.validationMessage)) }).then(function (t) { e.enableButtons(), e.enableInput(), t ? e.showValidationMessage(t) : cn(e, n, o) }) }, un = function (e, t, n) { t.showLoaderOnDeny && Jt(L()), t.preDeny ? Promise.resolve().then(function () { return y(t.preDeny(n, t.validationMessage)) }).then(function (t) { !1 === t ? e.hideLoading() : e.closePopup({ isDenied: !0, value: void 0 === t ? n : t }) }) : e.closePopup({ isDenied: !0, value: n }) }, cn = function (e, t, n) { t.showLoaderOnConfirm && Jt(), t.preConfirm ? (e.resetValidationMessage(), Promise.resolve().then(function () { return y(t.preConfirm(n, t.validationMessage)) }).then(function (t) { wt(S()) || !1 === t ? e.hideLoading() : Ie(e, void 0 === t ? n : t) })) : Ie(e, n) }, ln = ["ArrowRight", "ArrowDown", "Right", "Down"], dn = ["ArrowLeft", "ArrowUp", "Left", "Up"], pn = ["Escape", "Esc"], fn = function (t, e, n) { var o = Tt.innerParams.get(t); o.stopKeydownPropagation && e.stopPropagation(), "Enter" === e.key ? mn(t, e, o) : "Tab" === e.key ? hn(e, o) : -1 !== [].concat(ln, dn).indexOf(e.key) ? gn(e.key) : -1 !== pn.indexOf(e.key) && vn(e, o, n) }, mn = function (t, e, n) { e.isComposing || e.target && t.getInput() && e.target.outerHTML === t.getInput().outerHTML && -1 === ["textarea", "file"].indexOf(n.input) && (_t(), e.preventDefault()) }, hn = function (t, e) { for (var n = t.target, o = R(), i = -1, r = 0; r < o.length; r++)if (n === o[r]) { i = r; break } t.shiftKey ? He(0, i, -1) : He(0, i, 1), t.stopPropagation(), t.preventDefault() }, gn = function (t) { -1 !== [T(), L(), q()].indexOf(document.activeElement) && (t = -1 !== ln.indexOf(t) ? "nextElementSibling" : "previousElementSibling", (t = document.activeElement[t]) && t.focus()) }, vn = function (t, e, n) { Z(e.allowEscapeKey) && (t.preventDefault(), n(Q.esc)) }, bn = function (e, t, n) { t.popup.onclick = function () { var t = Tt.innerParams.get(e); t.showConfirmButton || t.showDenyButton || t.showCancelButton || t.showCloseButton || t.timer || t.input || n(Q.close) } }, yn = !1, wn = function (e) { e.popup.onmousedown = function () { e.container.onmouseup = function (t) { e.container.onmouseup = void 0, t.target === e.container && (yn = !0) } } }, Cn = function (e) { e.container.onmousedown = function () { e.popup.onmouseup = function (t) { e.popup.onmouseup = void 0, t.target !== e.popup && !e.popup.contains(t.target) || (yn = !0) } } }, kn = function (n, o, i) { o.container.onclick = function (t) { var e = Tt.innerParams.get(n); yn ? yn = !1 : t.target === o.container && Z(e.allowOutsideClick) && i(Q.backdrop) } }; function An(t, e) { var n = function (t) { t = "string" == typeof t.template ? document.querySelector(t.template) : t.template; if (!t) return {}; t = t.content || t; return We(t), u(Re(t), Ne(t), Ue(t), _e(t), Fe(t), ze(t, Ve)) }(t), o = u({}, se.showClass, e.showClass, n.showClass, t.showClass), i = u({}, se.hideClass, e.hideClass, n.hideClass, t.hideClass); return (n = u({}, se, e, n, t)).showClass = o, n.hideClass = i, !1 === t.animation && (n.showClass = { popup: "swal2-noanimation", backdrop: "swal2-noanimation" }, n.hideClass = {}), n } function xn(a, s, u) { return new Promise(function (t) { function e(t) { a.closePopup({ isDismissed: !0, dismiss: t }) } var n, o, i, r; Ce.swalPromiseResolve.set(a, t), s.confirmButton.onclick = function () { return e = u, (t = a).disableButtons(), void (e.input ? an(t, e, "confirm") : cn(t, e, !0)); var t, e }, s.denyButton.onclick = function () { return e = u, (t = a).disableButtons(), void (e.returnInputValueOnDeny ? an(t, e, "deny") : un(t, e, !1)); var t, e }, s.cancelButton.onclick = function () { return t = e, a.disableButtons(), void t(Q.cancel); var t }, s.closeButton.onclick = function () { return e(Q.close) }, n = a, r = s, t = e, Tt.innerParams.get(n).toast ? bn(n, r, t) : (wn(r), Cn(r), kn(n, r, t)), o = a, r = u, i = e, (t = te).keydownTarget && t.keydownHandlerAdded && (t.keydownTarget.removeEventListener("keydown", t.keydownHandler, { capture: t.keydownListenerCapture }), t.keydownHandlerAdded = !1), r.toast || (t.keydownHandler = function (t) { return fn(o, t, i) }, t.keydownTarget = r.keydownListenerCapture ? window : A(), t.keydownListenerCapture = r.keydownListenerCapture, t.keydownTarget.addEventListener("keydown", t.keydownHandler, { capture: t.keydownListenerCapture }), t.keydownHandlerAdded = !0), (u.toast && (u.input || u.footer || u.showCloseButton) ? vt : bt)(document.body, $["toast-column"]), r = a, "select" === (t = u).input || "radio" === t.input ? tn(r, t) : -1 !== ["text", "email", "number", "tel", "textarea"].indexOf(t.input) && (b(t.inputValue) || w(t.inputValue)) && en(r, t), je(u), Pn(te, u, e), En(s, u), setTimeout(function () { s.container.scrollTop = 0 }) }) } function Bn(t) { var e = { popup: A(), container: k(), content: P(), actions: j(), confirmButton: T(), denyButton: L(), cancelButton: q(), loader: D(), closeButton: V(), validationMessage: S(), progressSteps: n() }; return Tt.domCache.set(t, e), e } var Pn = function (t, e, n) { var o = H(); at(o), e.timer && (t.timeout = new Le(function () { n("timer"), delete t.timeout }, e.timer), e.timerProgressBar && (rt(o), setTimeout(function () { t.timeout && t.timeout.running && dt(e.timer) }))) }, En = function (t, e) { if (!e.toast) return Z(e.allowEnterKey) ? void (On(t, e) || He(0, -1, 1)) : Sn() }, On = function (t, e) { return e.focusDeny && wt(t.denyButton) ? (t.denyButton.focus(), !0) : e.focusCancel && wt(t.cancelButton) ? (t.cancelButton.focus(), !0) : !(!e.focusConfirm || !wt(t.confirmButton)) && (t.confirmButton.focus(), !0) }, Sn = function () { document.activeElement && "function" == typeof document.activeElement.blur && document.activeElement.blur() }; function Tn(t) { "function" == typeof t.didDestroy ? t.didDestroy() : "function" == typeof t.onDestroy && t.onDestroy() } function Ln(t) { delete t.params, delete te.keydownHandler, delete te.keydownTarget, qn(Tt), qn(Ce) } var Dn, qn = function (t) { for (var e in t) t[e] = new WeakMap }, J = Object.freeze({ hideLoading: pe, disableLoading: pe, getInput: function (t) { var e = Tt.innerParams.get(t || this); return (t = Tt.domCache.get(t || this)) ? et(t.content, e.input) : null }, close: Ae, closePopup: Ae, closeModal: Ae, closeToast: Ae, enableButtons: function () { Se(this, ["confirmButton", "denyButton", "cancelButton"], !1) }, disableButtons: function () { Se(this, ["confirmButton", "denyButton", "cancelButton"], !0) }, enableInput: function () { return Te(this.getInput(), !1) }, disableInput: function () { return Te(this.getInput(), !0) }, showValidationMessage: function (t) { var e = Tt.domCache.get(this), n = Tt.innerParams.get(this); U(e.validationMessage, t), e.validationMessage.className = $["validation-message"], n.customClass && n.customClass.validationMessage && vt(e.validationMessage, n.customClass.validationMessage), rt(e.validationMessage), (e = this.getInput()) && (e.setAttribute("aria-invalid", !0), e.setAttribute("aria-describedBy", $["validation-message"]), nt(e), vt(e, $.inputerror)) }, resetValidationMessage: function () { var t = Tt.domCache.get(this); t.validationMessage && at(t.validationMessage), (t = this.getInput()) && (t.removeAttribute("aria-invalid"), t.removeAttribute("aria-describedBy"), bt(t, $.inputerror)) }, getProgressSteps: function () { return Tt.domCache.get(this).progressSteps }, _main: function (t) { var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}; return ae(u({}, e, t)), te.currentInstance && te.currentInstance._destroy(), te.currentInstance = this, qe(t = An(t, e)), Object.freeze(t), te.timeout && (te.timeout.stop(), delete te.timeout), clearTimeout(te.restoreFocusTimeout), e = Bn(this), Ut(this, t), Tt.innerParams.set(this, t), xn(this, e, t) }, update: function (e) { var t = A(), n = Tt.innerParams.get(this); if (!t || _(t, n.hideClass.popup)) return W("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup."); var o = {}; Object.keys(e).forEach(function (t) { Mn.isUpdatableParameter(t) ? o[t] = e[t] : W('Invalid parameter to update: "'.concat(t, '". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js\n\nIf you think this parameter should be updatable, request it here: https://github.com/sweetalert2/sweetalert2/issues/new?template=02_feature_request.md')) }), n = u({}, n, o), Ut(this, n), Tt.innerParams.set(this, n), Object.defineProperties(this, { params: { value: u({}, this.params, e), writable: !1, enumerable: !0 } }) }, _destroy: function () { var t = Tt.domCache.get(this), e = Tt.innerParams.get(this); e && (t.popup && te.swalCloseEventFinishedCallback && (te.swalCloseEventFinishedCallback(), delete te.swalCloseEventFinishedCallback), te.deferDisposalTimer && (clearTimeout(te.deferDisposalTimer), delete te.deferDisposalTimer), Tn(e), Ln(this)) } }), jn = function () { function i() { if (a(this, i), "undefined" != typeof window) { "undefined" == typeof Promise && K("This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)"), Dn = this; for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)e[n] = arguments[n]; var o = Object.freeze(this.constructor.argsToParams(e)); Object.defineProperties(this, { params: { value: o, writable: !1, enumerable: !0, configurable: !0 } }); o = this._main(this.params); Tt.promise.set(this, o) } } return s(i, [{ key: "then", value: function (t) { return Tt.promise.get(this).then(t) } }, { key: "finally", value: function (t) { return Tt.promise.get(this).finally(t) } }]), i }(); u(jn.prototype, J), u(jn, de), Object.keys(J).forEach(function (t) { jn[t] = function () { if (Dn) return Dn[t].apply(Dn, arguments) } }), jn.DismissReason = Q, jn.version = "10.15.5"; var Mn = jn; return Mn.default = Mn }), void 0 !== this && this.Sweetalert2 && (this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2); } catch (e) { }
try {
    (function ($) {
        function ajaxLoadTooltipInfo(container) {
            if (undefined !== $(container).attr('data-load') && (true === $(container).attr('data-load'))) { return false; }
            if (undefined === $(container).attr('data-xobmen')) { return false; }
            var xobmen = $(container).attr('data-xobmen'); var emetalx = $(container).attr('data-emetalx'); var emetaly = $(container).attr('data-emetaly'); var preloader = '<span class="icon-preloader"></span>'; $(container).attr({ 'data-load': true }); $('.btn-info', container).html(preloader); var data = { 'xobmen': xobmen, 'emetalx': emetalx, 'emetaly': emetaly, 'pagename': $(location).attr('href'), 'action': 'ex_info_xobmen_action', 't': ((new Date()).getTime() / 10000 << 1) * 5000 }; $.ajax({ type: 'POST', url: '/wp-content/plugins/vw-obmen/obmen-ajax.php', data: data, beforeSend: function () { $(container).addClass('update'); }, success: function (data) { if (data && data.indexOf('No change') && data.indexOf('0')) { $('.btn-info', container).after(data); $(container).trigger('restartTooltipster.Obmen'); addXobmenCache(xobmen, data); } }, error: function (data) { $(container).removeClass('update'); console.error('error ajax load url'); } }).done(function (data) { $(container).attr({ 'data-load': false }); $(container).removeClass('update'); $('.btn-info', container).html(''); }); return false;
        }
        function addXobmenCache(xobmen, data) {
            if (hasXobmenCache(xobmen)) { return; }
            var html_base = $('#exchange_info_cache .base-tooltip-info#xobmen-0')[0]?.outerHTML; if (undefined === html_base) { return; }
            var block = $(html_base).attr('id', 'xobmen-' + xobmen); $('.tooltip', block).replaceWith(data); $('#exchange_info_cache .base-tooltip-info#xobmen-0').after(block);
        }
        function hasXobmenCache(xobmen) {
            if ($('#exchange_info_cache .base-tooltip-info#xobmen-' + xobmen).is('.base-tooltip-info')) { return true; }
            return false;
        }
        function getXobmenCache(xobmen) { return $('#exchange_info_cache .base-tooltip-info#xobmen-' + xobmen).html(); }
        function callTooltipInfo() {
            if ($('#exchangesTable').is('#exchangesTable')) {
                var $tooltip = $('#exchangesTable .wrap-tooltip'); $tooltip.mouseenter(function () {
                    if ($('.tooltip', this).is('.tooltip')) { $('.tooltip', this).show(); return; }
                    var xobmen = $(this).attr('data-xobmen'); if (hasXobmenCache(xobmen)) { $('.btn-info', this).after(getXobmenCache(xobmen)); $(this).trigger('restartTooltipster.Obmen'); } else { ajaxLoadTooltipInfo(this); }
                }); $tooltip.mouseleave(function () { if ($('.tooltip', this).is('.tooltip') && !$('.tooltip', this).is(':hidden')) { $('.tooltip', this).hide(); } });
            }
            if ($('#exchangersTable').is('#exchangersTable')) {
                var $tooltip = $('#exchangersTable .wrap-tooltip'); $tooltip.mouseenter(function () {
                    if ($('.tooltip', this).is('.tooltip')) { $('.tooltip', this).show(); return; }
                    var xobmen = $(this).attr('data-xobmen'); if (hasXobmenCache(xobmen)) { $('.btn-info', this).after(getXobmenCache(xobmen)); $(this).trigger('restartTooltipster.Obmen'); } else { ajaxLoadTooltipInfo(this); }
                }); $tooltip.mouseleave(function () { if ($('.tooltip', this).is('.tooltip') && !$('.tooltip', this).is(':hidden')) { $('.tooltip', this).hide(); } });
            }
        }
        $(document).on('reinitialize.TooltipInfo', callTooltipInfo); $(document).trigger('reinitialize.TooltipInfo'); $(document).on('exchangetable.exSumo', callTooltipInfo);
    })(jQuery);
} catch (e) { }
try {
    (function ($) {
        function callTooltipsterNew(event) {
            var container; if (event.target) { container = event.target; }
            if (undefined === container) { container = this; }
            if (isMobile() && $(".tooltip-small:not(.stop-propagation-on)", container).length) { $(".tooltip-small:not(.stop-propagation-on)", container).addClass('stop-propagation-on').click(function (e) { e.stopPropagation(); }); }
            var tools = $('.tooltip-small:not(.tooltipstered)', container); if (!($(tools).length > 0)) { return; }
            let paramsToolTipster = { debug: false, theme: 'tooltipster-light', maxWidth: 330, contentAsHTML: true, trigger: isMobile() ? 'click' : 'hover', functionBefore: function (instance, helper) { var content = $(helper.origin).attr('title'); instance.content(content); } }; if (isMobile()) { paramsToolTipster.trigger = 'custom'; paramsToolTipster.triggerOpen = { click: true, tap: true }; paramsToolTipster.triggerClose = { click: true, tap: true }; }
            $(tools).tooltipster(paramsToolTipster);
        }
        $(document).on('restartTooltipster.Obmen', callTooltipsterNew);
    })(jQuery); jQuery(function () {
        if (!window.isOtherExotherPagesScript) return false; var ajaxUrl = '/wp-content/plugins/vw-obmen/obmen-ajax.php'; var ajax_loader = []; var ajax_blocks = ['#obmen-list-block',].join(','); function initAjax(container) {
            container = $(container).get(0); container.ajaxLoader = container.ajaxLoader || ajaxLoader; if (undefined === container.autoReload) { container.autoReload = autoReload; container.timeout_id = false; }
            return container;
        }
        function autoReload(start) {
            var container = this; var url = $(container).attr('data-href'); var waitTime = $(container).attr('data-timeout'); if (!!start) {
                if (container.timeout_id) { clearTimeout(container.timeout_id); container.timeout_id = false; }
                container.ajaxLoader();
            }
            if (container.timeout_id || undefined === waitTime) { return; }
            container.timeout_id = setTimeout(function () { container.autoReload(true); }, waitTime);
        }
        function ajaxLoader() {
            var container = this; if (undefined !== $(container).attr('data-load') && (true == $(container).attr('data-load'))) { return; }
            if (undefined === $(container).attr('data-href')) { return; }
            var url = $(container).attr('data-href'); var ex_obmen_action = $(container).attr('data-action'); var ex_obmen_status = $(container).find('[data-status]').attr('data-status'); ajax_loader[url] = container; $(container).addClass('update'); $(container).attr({ 'data-load': true }); var data = { 'pagename': url, 'action': 'ex_obmen_action', 'obmen_action': ex_obmen_action, 'obmen_status': ex_obmen_status, 't': ((new Date()).getTime() / 10000 << 1) * 5000 }; $.ajax({
                type: 'POST', url: ajaxUrl, data: data, beforeSend: function () { if ($('.titles', container).find('.icon-preloader').is('.icon-preloader')) { $('.titles', container).find('.icon-preloader').show(); } else if (!$('#tab-table').is('.data-empty')) { $(container).html('Загрузка...'); } }, success: function (data) {
                    if (data && data.indexOf('No change')) { $(container).html(data); $(document).trigger('reinitialize.exSumo'); $(document).trigger('restartstickyTableHeaders.exSumo'); $(document).trigger('addBanner.Obmen'); $(container).trigger('restartTooltipster.Obmen'); }
                    if ($('.titles', container).find('.icon-preloader').is('.icon-preloader')) { $('.titles', container).find('.icon-preloader').hide(); }
                }, error: function (data) { console.error('error ajax load url'); }
            }).done(function (data) { $(container).attr({ 'data-load': false }); $(container).removeClass('update'); container.ajaxDone(); $(document).trigger('exchangetable.exSumo'); }); return false;
        }
        function startLoadExchange($container_id, start) {
            $container_id.find('.titles .icon-preloader').hide(); $container_id.each(function (i, el) {
                if (!$(this).is('[data-href]')) { return; }
                initAjax(this); this.ajaxDone = function () { }; this.autoReload(start);
            });
        }
        startLoadExchange($(ajax_blocks), false);
    }); (function ($) { if (!window.isOtherExotherPagesScript) return false; (undefined !== localStorage.legend) && $('#legend-arrow-check').prop('checked', !!+localStorage.legend ? null : true); $('#legend-arrow_check').on('change', function () { var date = new Date(new Date().getTime() + 6 * 30 * 24 * 60 * 60 * 1000); setCookie('tooltip-legend', localStorage.legend = $('#legend-arrow_check:checked').length, date.toUTCString(), "/"); }); })(jQuery); function calcCommissionTableOne2(give, get, tableItem, isGive) {
        tableItem.fromfee = tableItem.fromfee.replace('%', ' %').replace('  ', ' '); tableItem.tofee = tableItem.tofee.replace('%', ' %').replace('  ', ' '); var fromfee = tableItem.fromfee.split(' '); var tofee = tableItem.tofee.split(' '); var sysFee = ((tableItem.commission) ? 1 + tableItem.commission / 100 : 1); var koef = +tableItem.koef; var giveVal = +give; var getVal = +get; var fromCom = 0; var toCom = 0; var sysCom = 0; if (fromfee[0]) { fromCom = (fromfee[1] && '%' === fromfee[1]) ? +fromfee[0] * giveVal / 100 : +fromfee[0]; giveVal = +giveVal + fromCom; }
        if (sysFee !== 1) { sysCom = (giveVal * sysFee) - giveVal; giveVal = giveVal + sysCom; }
        if (tofee[0]) { toCom = (tofee[1] && '%' === tofee[1]) ? +tofee[0] * getVal / 100 : +tofee[0]; getVal = getVal - toCom; getVal = getVal < 0 ? 0 : getVal; }
        if (!(fromCom || toCom || sysCom)) { }
        var newKoef = getVal / giveVal; if (+give == 1 && tableItem.give == 1) { giveVal = 1; getVal = 1 * newKoef; } else if (+get == 1 && tableItem.get == 1) { getVal = 1; giveVal = (newKoef != 0) ? 1 / newKoef : 0; } else { if (isGive) { giveVal = +give; getVal = give * newKoef; } else { getVal = +get; giveVal = (newKoef != 0) ? getVal / newKoef : 0; } }
        return [giveVal < 0 ? 0 : giveVal, getVal < 0 ? 0 : getVal];
    }
    function prepareNumberTableOne2(num, roundUpNum) { var fixed = parseFloat(num); roundUpNum = roundUpNum || 0; var isFixed = (Math.round(fixed) === fixed); fixed = isFixed ? +parseInt(fixed) : +fixed; var maf = (fixed == 1) ? 0 : (1000 >= fixed ? roundUpNum : (100000 >= fixed ? 2 : 0)); var mif = (maf > 2 && fixed > (1 / (10 * maf / 2))) ? +maf : maf; return fixed.toLocaleString('ru-RU', { maximumFractionDigits: maf, minimumFractionDigits: mif }).replace(',', '.'); }
    function setValuesTableOne2(give, get, isGive) {
        var commissions = +$('#calcCommissions').prop('checked'); var topCommissions = +$('#calcTopCommissions').prop('checked'); var visibleCount = 0; var $singleRows = jQuery('table#exchangesTable tr:not(.titles)'); var isInputSet = true; var giveRoundUpNum = (undefined !== firstRoundUpNum) ? firstRoundUpNum : precision; var getRoundUpNum = (undefined !== changeRoundUpNum) ? changeRoundUpNum : precision; var hasCalculatorVisible = $('#tab02').hasClass('visible'); $singleRows.each(function (idx, r) {
            if ($(r).is('.titles')) { return; }
            if ($('.banner-cell', r).is('.banner-cell')) { return; }
            var isTopRow = idx === 0; var row = jQuery(r); idx = +$(r).attr('data-open').match(/go=\d+/gi)[0].replace(/go=/g, ''); var tableItem = tableData[idx]; var cells = row.children(); var koef = tableItem.get / tableItem.give; var giveVal = 0; var getVal = 0; var sysFee = commissions ? 1 - tableItem.commission / 100 : 1; var minGiveGetVal = 0; if (isTopRow) { jQuery('input#giveVal').attr('placeholder', 1 === +tableItem.give ? 1 : ''); jQuery('input#getVal').attr('placeholder', 1 === +tableItem.get ? 1 : ''); }
            if (isGive ? give > 0 : get > 0) { isInputSet = true; if (isGive) { giveVal = +give; getVal = giveVal * koef; } else { getVal = +get; giveVal = getVal / (koef); } } else { isInputSet = false; getVal = +tableItem.get; giveVal = +tableItem.give; }
            if (topCommissions || commissions && hasCalculatorVisible) { var coms = calcCommissionTableOne2(giveVal, getVal, tableItem, isGive); giveVal = coms[0]; getVal = coms[1]; }
            if (!hasCalculatorVisible) { giveVal = +tableItem.feeEGive; getVal = +tableItem.feeEGet; }
            $('var', cells[1]).html(prepareNumberTableOne2(giveVal, giveRoundUpNum)); $('var', cells[2]).html(prepareNumberTableOne2(getVal, getRoundUpNum)); row.removeClass('disabled').removeClass('maxamount').removeClass('minamount').removeClass('rezerv'); if (hasCalculatorVisible && isInputSet && tableItem) {
                if (tableItem.minamount && +giveVal < +prepareNumberTableOne2(tableItem.minamount, giveRoundUpNum)) { row.addClass('disabled').addClass('minamount'); }
                if (tableItem.maxamount && +giveVal > +prepareNumberTableOne2(tableItem.maxamount, giveRoundUpNum)) { row.addClass('disabled').addClass('maxamount'); }
                if (+tableItem.rezerv < +getVal) { row.addClass('disabled').addClass('rezerv'); }
            }
            visibleCount++;
        }); if ($singleRows.length > 1) { $(document).trigger('tableSort'); }
        if ($singleRows.length > 0) { jQuery('#exchangesTableValueToBig').remove(); if (jQuery('table#exchangesTable tbody tr:not(.disabled)').length < 1) { jQuery('table#exchangesTable').after('<div id="exchangesTableValueToBig" style="text-align: center; padding: 10px;">К сожалению вы не можете сразу обменять такую сумму, но вы можете сделать это дробно, попробуйте уменьшить сумму</div>'); } } else { jQuery('#exchangesTableValueToBig').remove(); }
    }
    (function ($) {
        if (!window.isOtherPages) return false; if (!window.isOtherExotherPagesScript) return false; function giveGet2() { var isVisible = $(this).is('#giveRadio:checked'), methods = ['hide', 'show']; $('#getBlock')[methods[+!isVisible]](); $('#giveBlock')[methods[+isVisible]](); }
        function callRefresh2() { setValuesTableOne2(jQuery('input#giveVal').val().replace(',', '.'), jQuery('input#getVal').val().replace(',', '.'), jQuery('#giveBlock').css('display') !== 'none'); }
        $(document).on('reinitialize.exSumo', callRefresh2); $('#giveRadio,#getRadio').on('change', giveGet2).on('change', callRefresh2); $('#giveVal,#getVal').on('blur input change', callRefresh2); $('#updateTableButton').on('click', callRefresh2); $('#calcCommissions').on('change', callRefresh2); if ($(location).attr('href').indexOf('calc') !== -1) { $("#exchange-table-block [data-tab*='#tab02']").click(); }
        callRefresh2();
    })(jQuery); (function ($) {
        if (!window.isOtherExotherPagesScript) return false; function addNotification2(e) {
            var isValid = $('#action-notification input[required]').toArray().every(function (i) { return i.checkValidity(); }); e.preventDefault(); e.stopPropagation(); if (!isValid) { alert("Не все поля заполнены"); return false; }
            $.post(notificationsUrl, { 'q': 'step2', 'z': 'complete', 'first': $('#nFormFirst').val(), 'change': $('#nFormChange').val(), 'need': $('#nFormNeed').val(), 'rezerv': $('#nFormRezerv').val(), 'method': $('input[name=method]').val(), 'srok': $('#nFormSrok').val(), 'pin': $('#nFormPin').val(), 'account': $('#nFormAccount').val(), 'px': $('#nFormPX').val(), 'type': 'ajax' }).done(function (data) { $('#successfullNotification img')[['show', 'hide'][+data.err]](); $('#successfullNotification').show().find('span').text(data.mess); setTimeout(function () { $('#successfullNotification').hide(); }, 10000); });
        }
        if ($('#addNotificationButton').is('#addNotificationButton')) { $('#addNotificationButton').on('click', addNotification2); }
    })(jQuery); (function ($) {
        var trNode = { xname: '', cashback: 0 }; var onTimeout = false; function showPopup() { var h = "Обменник " + trNode.xname + " поддерживает кэшбек. <a href='/chto-takoe-keshbjek/#login_popup'>Зарегистрируйтесь</a> или <a href='/chto-takoe-keshbjek/#login_popup'>авторизуйтесь</a>, чтобы получить " + trNode.cashback + " от нашей прибыли. Оставьте отзыв об обменнике и мы удвоим ваш кэшбек."; var h2 = "Обменник " + trNode.xname + " поддерживает кэшбек. <a href='/cashback/#login_popup'>Оставьте заявку</a>, чтобы получить " + trNode.cashback + " от нашей прибыли. Оставьте отзыв об обменнике и мы удвоим ваш кэшбек."; var isAuth = getCookie('isAuth'); var ht = (+isAuth === 1) ? h2 : h; (!!logger) && logger.trace('showPopup', isAuth, ht); Swal.fire({ titleText: 'Не забудьте получить кэшбек', html: ht, showCloseButton: true, showConfirmButton: false, footer: '<a href="/chto-takoe-keshbjek/">Что такое кэшбек?</a>' }); dataLayer.push({ 'event': 'Cashback Popup' }); }; function startTimeoutPopub() { if (trNode.cashback !== 0) { stopTimeoutPopub(); onTimeout = setTimeout(showPopup, 30000); (!!logger) && logger.trace('startTimeoutPopub-Start', onTimeout); }; }; function stopTimeoutPopub() { if (onTimeout) { (!!logger) && logger.trace('stopTimeoutPopub', onTimeout); clearTimeout(onTimeout); onTimeout = false; } }
        function clickExchangeForPopub(e) {
            trNode.xname = $(this).find('.name-table').text(); if ($(this).find('.data-badge_have_cashback').is('.data-badge_const-1')) { trNode.cashback = '25%'; } else if ($(this).find('.data-badge_have_cashback').is('.data-badge_const-2')) { trNode.cashback = '35%'; }
            startTimeoutPopub(); return false;
        }; if ($('table [data-open]').is('tr')) { checkSingleExchange(); $(document).on('click', '[data-open]', clickExchangeForPopub); $(document).on('mousemove keydown scroll', stopTimeoutPopub); }
        function checkSingleExchange() { const trElement = document.querySelector('table#exchangesTable tr[data-open]:first-child'); const nameTable = document.querySelector('table#exchangesTable'); if (trElement) { const dataOpenValue = trElement.getAttribute('data-open'); const parameters = dataOpenValue.split('&'); for (let i = 0; i < parameters.length; i++) { let keyValue = parameters[i].split('='); if (keyValue[0] === 'first' || keyValue[0] === 'change') { parseInt(keyValue[1]) === 0 ? nameTable.classList.add('singleExchange') : nameTable.classList.remove('singleExchange'); const match = window.location.pathname?.match(/\/to\/([^\/]+)/); nameTable.classList.toggle('toSingle', match); nameTable.classList.toggle('fromSingle', !match); } } } }
    })(jQuery);
} catch (e) { }
try {
    ; (function ($) {
        function hasOnlyMob() {
            if ($('#mobile_top_header .mob').is('.mob')) { return ($('#mobile_top_header .mob').is(':visible')); }
            return false;
        }; if (!hasOnlyMob()) { return false; }; if ($('#exchange-table-block-top').is('#exchange-table-block-top')) {
            var $target = $("#sidebar .aside-tabs"), $block = $("#sidebar"), h = $target.offset().top; function onScroll(evt) {
                evt.preventDefault = function () { return false; }; if (!h) { h = $target.offset().top; }
                var scrollTop = window.pageYOffset || document.documentElement.scrollTop; if (scrollTop > h) { $target.addClass("screen_fixed"); $block.css({ 'height': $target.outerHeight() }); } else { $target.removeClass("screen_fixed"); $block.attr('style', ''); }
                return false;
            }
            document.addEventListener('scroll', onScroll, { passive: false });
        }
        if ($('#exchangesTable').is('#exchangesTable') && $('.tabset li[data-tabset]').is('li')) {
            $('.tabset li[data-tabset]').on('click', function () {
                var $target = $(this).attr('data-tabset'); if ($($target).is('li')) { $($target).click(); } else { console.log('Not target ' + $target); }
                return true;
            }); $('.tabset li[data-tabset] a').on('click', function () { $(this).parent().click(); history.pushState(null, '', $(this).attr('href')); return false; });
        }
        if ($('#exchangesTable').is('#exchangesTable')) { setTimeout(function () { var first = $('.first icon').attr('class'); var change = $('.change icon').attr('class'); $('#mobile_top_header .first icon').attr({ 'class': first }); $('#mobile_top_header .change icon').attr({ 'class': change }); }, 3); }
        if ($('#mobile_top_header').is('#mobile_top_header')) { $('#mobile_top_header .icon_edit').on('click', function () { if ($('#mobile_top_header .container-exchange').is('.vlt_not_edit')) { $('#mobile_top_header .container-exchange').removeClass("vlt_not_edit"); } else { $('#mobile_top_header .container-exchange').addClass("vlt_not_edit"); } }); }
    })(jQuery);
} catch (e) { }
try {
    var logger; window.vw_rm_12 = window.vw_rm_12 || false; $(document).ready(function () {
        if (!window.vw_rm_12) return; console.log("window.vw_rm_12: ", window.vw_rm_12); if (isMobile()) {
            (!!logger) && logger.trace('isMobile vw_rm_12'); $(document).ready(function () { $("#sidebar .mob .exchange-btn").on('click', newStartAddVltList); }); $("#sidebar .mob .exchange-btn").on('click', function () {
                const type = $(this).is('.first') ? 'first' : ($(this).is('.change') ? 'change' : false); if (false !== type) { const in_this = $("#sidebar .desc .exchange-btn." + type + " input").eq(0); $('.container-exchange.desc').css('display', 'block'); in_this.parent().addClass('fixed'); in_this.parent().find('.min_close').addClass('active'); $('#sidebar .bar-data-table>li.' + type + '-valute').addClass('active_ib'); $('html, body').animate({ scrollTop: 0 }, 300); $('html, body').addClass('stopscroll'); }
                addBlockHeaderSearchVlt();
            }); document.addEventListener('click', function (e) {
                if (e.target.classList.contains('clickMoveAllCategory')) { const allValute = document.querySelector('.item-filter-vlt:first-child'); allValute.click(); }
                if (e.target.classList.contains('min_close')) { setTimeout(() => { document.querySelector('.item-filter-vlt:first-child').click(); }, 0); }
            });
        }
        function addBlockHeaderSearchVlt() {
            const checkElementHeader = document.getElementsByClassName('block_mob_header')[0]; const checkElementTabs = document.getElementsByClassName('block_mob_tabs')[0]; if (checkElementHeader && checkElementTabs) return; const exchangeBtnFirst = document.querySelector('.exchange-btn'); const parentExchangeBtnFirst = document.querySelector('.container-exchange'); const blockTab = document.createElement('div'); blockTab.classList.add('block_mob_header'); blockTab.innerHTML = '<h3 class="text-center">Валюту отдадите</h3><div style="margin-left: 5px">Найдите валюту через строку поиска</div>'; parentExchangeBtnFirst.insertBefore(blockTab, exchangeBtnFirst); changePlaceholderInput('.first'); changePlaceholderInput('.change'); function changePlaceholderInput(typeInput) { const selectInput = document.querySelector(typeInput + '.fixed input'); selectInput?.setAttribute('placeholder', 'Поиск по названию валюты'); }
            createItemsTabsVlt();
        }
        function createItemsTabsVlt() {
            const allListTabs = [[10, 'Все валюты'], [5, 'Крипта'], [3, 'Банки'], [4, 'Переводы'], [1, 'Эл.валюты'], [2, 'Наличные'], [6, 'Коды криптобирж']]; const tabsBlock = document.createElement('div'), blockHeader = document.getElementsByClassName('block_mob_header')[0]; tabsBlock.classList.add('block_mob_tabs', 'checkScrollRight'); allListTabs.forEach((item, index) => { let status = index ? '' : 'active'; tabsBlock.innerHTML += `<div class="item-filter-vlt ${status}" data-vlt="${item[0]}">${item[1]}</div>`; }); blockHeader.insertAdjacentElement('afterend', tabsBlock); tabsBlock.onscroll = function () { let allBlock = this.scrollWidth, scrollBlock = (this.scrollLeft + this.offsetWidth) * 1.05; scrollBlock >= allBlock ? this.classList.remove('checkScrollRight') : this.classList.add('checkScrollRight'); this.scrollLeft <= 5 ? this.classList.remove('checkScrollLeft') : this.classList.add('checkScrollLeft'); }; const itemFilterVlt = document.querySelector('.block_mob_tabs'); const itemAllFilterVlt = document.querySelectorAll('.item-filter-vlt'); const inputSelectDirect = document.querySelector('#mobile_top_header'); inputSelectDirect.onclick = function () { document.querySelector('.item-filter-vlt:first-child').click(); }
            itemFilterVlt.onclick = function (e) {
                if (!e.target.classList.contains('active')) { itemAllFilterVlt.forEach((item) => item.classList.remove('active')); e.target.classList.add('active'); const checkTabActive = document.getElementsByClassName('item-filter-vlt')[0].classList.contains('active'); if (checkTabActive) { const scrollToStart = document.querySelector('.block_mob_tabs'); scrollToStart.scrollLeft !== 0 ? scrollToStart.scrollLeft = 0 : null; } }
                showActiveTab(1, document.querySelectorAll('.block-first-valute'), '.first-valute'); showActiveTab(2, document.querySelectorAll('.block-change-valute'), '.change-valute'); function showActiveTab(idx, typeInput, classInput) { searchVltBlcFirstChange(idx); typeInput.forEach((input) => { if (Number(e.target.dataset['vlt']) !== allListTabs[0][0]) { input.classList.add('d-none'); let nameClassBlock = classInput + ' .group_' + e.target.dataset['vlt']; const blockSearchTab = document.querySelector(nameClassBlock); blockSearchTab.classList.remove('d-none'); } else { input.classList.remove('d-none'); } }); }
            };
        }
        $(document).ready(function () { const changeVltInputTabFirst = $('.exchange-btn.first input')[0]; const changeVltInputTabChange = $('.exchange-btn.change input')[0]; changeVltInputTabFirst.addEventListener('input', function () { searchVltBlcFirstChange(1); }); changeVltInputTabChange.addEventListener('input', function () { searchVltBlcFirstChange(2); }); }); function searchVltBlcFirstChange(idx) { const itemActive = Array.from(document.querySelectorAll('.item-filter-vlt')).filter((item) => item.classList.contains('active')); setTimeout(() => { let selectTabIndex = itemActive[0].dataset.vlt; let searchValuteThisTab = $('.valute' + idx + ' .group_' + selectTabIndex + ' ul li.search:first').hasClass('search'); let selectNotValute = document.querySelector('.notValute' + idx).classList.contains('d-none'); const paramInput = idx === 1 ? 'first' : 'change'; let textInput = document.querySelector('.exchange-btn.' + paramInput + ' input').value; if (searchValuteThisTab || textInput.length === 0 || !Number(selectTabIndex) || !selectNotValute || Number(selectTabIndex) === 10) { $('.notValuteTab' + idx).addClass('d-none'); } else { $('.notValuteTab' + idx).removeClass('d-none'); } }, 300); }
        function newStartAddVltList() { let start = Date.now(); const deb = false; var conteiner = document.querySelector('#tab-nav01'); (deb) && console.log('startAddVltList-start', start); if (undefined === conteiner['data-full'] && conteiner['data-update'] !== 'update') { conteiner['data-update'] = 'update'; conteiner.classList.add('update'); conteiner = addAllVltList(conteiner); (deb) && console.log('fullValuteClick-structure', Date.now() - start); conteiner['data-update'] = ''; conteiner['data-full'] = 'full'; (deb) && console.log('startAddVltList-end', Date.now() - start); } }
    });
} catch (e) { }
try {
    var logger; window.vw_rm_13 = window.vw_rm_13 || false; window.vw_rm_13_2 = window.vw_rm_13_2 || false; $(document).ready(function () {
        if (!window.vw_rm_13 || !window.vw_rm_13) return; const searchAddReviewsBtn = document.querySelector('#add_review_btn'); searchAddReviewsBtn.innerText = searchAddReviewsBtn.outerText.endsWith('+') ? searchAddReviewsBtn.outerText.slice(0, -1) : ''; searchAddReviewsBtn.classList.remove('add_review'); searchAddReviewsBtn.classList.add('ui-button-orange'); const linkCashback = document.querySelector('.block-mob-cashback a.ui-button-orange.only_mob'); linkCashback.onclick = function () { setCookie('lastExchanger', linkCashback.dataset.xobmen); }
        moveBtnFilterReview(); changeBackgroundSearchVlt(); $('#add_review_btn').click(function () { $('#add_review_form').toggle(); if ($('#filter_reviews').is(':visible')) { $('#filter_reviews').hide(); } }); $('#filter_reviews_btn').click(function () {
            if ($('#filter_reviews').is(':visible')) { $('#filter_reviews').show(); } else { $('#add_review_form').is(':visible') ? $('#add_review_form').hide() : null; }
            $('#add_review_form').is(':visible') ? $('#add_review_form').hide() : null;
        }); const searchFilterReviewsBtn = document.querySelector('#filter_reviews_btn'); if (true && searchFilterReviewsBtn) { searchFilterReviewsBtn.classList.remove('btn', 'btn-green'); searchFilterReviewsBtn.classList.add('ui-button-head'); searchFilterReviewsBtn.style.display = 'inline'; }
        const reviewName = document.querySelector('.review_name'); function moveBtnFilterReview() { if (true && document.querySelector('#exchanger-reviews div.review_name')) { const cloneAddReview = document.querySelector('#create-reviews').cloneNode(true); document.querySelector('#create-reviews').remove(); document.querySelector('#exchanger-reviews div.review_name').appendChild(cloneAddReview); document.querySelector('#create-reviews').style.display = 'contents'; document.querySelector('#create-reviews').style.width = 'auto'; } }
        function showFormForError() { if (true && document.querySelector('#create-reviews div.messages-error')) { $('#create-reviews #add_review_form').show(); } }
        showFormForError(); function changeBackgroundSearchVlt() { const checkBlockSelectVlt = document.querySelector('body.exchanger-template #mobile_top_header .container-exchange.mob'); if (checkBlockSelectVlt.classList.contains('vlt_has_edit')) { document.querySelector('#mobile_top_header').style.background = '#325cf0'; const mobileTopHeaderName = document.querySelector('body.exchanger-template #mobile_top_header .subtitle.mob'); mobileTopHeaderName.style.color = 'white'; } }
        const exchangerTabs = document.querySelector('.exchanger_tabs'); exchangerTabs.addEventListener('click', () => { document.querySelector('#create-reviews').style.display = 'contents'; });
    });
} catch (e) { }
try { jQuery(function (a) { let t = function (a) { return null !== window.sessionStorage.getItem("rating-" + a) }; a(document).on("click", ".bimsha-rating > div > div", function (e) { e.preventDefault(); let n = a(this), i = n.parent(), s = parseInt(n.data("value")); if (t(i.data("page"))) return !0; window.sessionStorage.setItem("rating-" + i.data("page"), n.data("value")), a.ajax({ type: "post", url: "/wp-content/plugins/bimsha-rating/handle.php", data: { page: i.data("page"), rating: s }, success: function (a) { if (void 0 !== a.data) { for (let t = 1; t <= 5; t++) { let e = i.find('> div[data-value="' + t + '"]'); t <= parseInt(a.data.rating) ? e.addClass("_active") : e.removeClass("_active") } let t = i.parent(); t.find("[data-rating]").text(a.data.rating), t.find("[data-count]").text(a.data.votes_count) } } }) }).on("mouseenter", ".bimsha-rating > .bimsha-rating-stars > div", function (e) { let n = a(this), i = n.parent(), s = parseInt(n.data("value")); if (t(i.data("page"))) return !0; for (let a = 1; a <= 5; a++) { let t = i.find('> div[data-value="' + a + '"]'); a <= s ? t.addClass("_active") : t.removeClass("_active") } }).on("mouseleave", ".bimsha-rating > .bimsha-rating-stars", function () { let e = a(this), n = parseInt(e.data("current")); if (t(e.data("page"))) return !0; for (let a = 1; a <= 5; a++) { let t = e.find('> div[data-value="' + a + '"]'); a <= n ? t.addClass("_active") : t.removeClass("_active") } }) }); } catch (e) { }
try {
    jQuery(document).ready(function () {
        function openDialog() {
            var url_id = window.location.href; need_id = url_id.split('#')[1]; if (need_id) {
                need_id_par = need_id.split('-')[3]; if (undefined == need_id_par) { return; }
                need_id_answer = "#" + need_id; need_parent_id = "#review-parent-" + need_id_par; ident = "#" + need_id; if ($(need_parent_id).is(need_parent_id)) { $(need_parent_id).addClass('open'); $(need_parent_id).find(".box-open").css('display', 'block'); }
                if ($(ident).is(ident)) { $(ident).css('display', 'block'); }
                if ($(need_id_answer).is(need_id_answer)) { $(need_id_answer).parent().parent().css('display', 'block'); $('a [href=' + need_id_answer + ']').click(); setTimeout(function () { if (need_id_answer) { height = $(need_id_answer).offset().top - 150; $('body,html').animate({ scrollTop: height }, 1500); } }, 500); }
            }
        }
        openDialog(); $("#create-reviews .select-box_label").on('click', function () { $(this).parent().find(".select-box_item-box").slideToggle(); }); $("#create-reviews .select-box_item-box_item").on('click', function () { var element = $(this); element.parent().slideToggle(); var text_option = element.text(); element.parent().parent().find(".select-box_label").text(text_option); var val_select = element.data('val'); element.parent().parent().find(".need-hidden").val(val_select); }); $("#create-reviews .star").on('mouseenter mouseleave', function () { var index = $(this).index(); $('#create-reviews .star').each(function (i, elem) { if ($(this).index() <= index) { $(this).addClass('active'); } else { $(this).removeClass('active'); } }); }); $("#create-reviews .not-check").on('mouseout', function () { $('#create-reviews .star').removeClass('active'); }); $("#create-reviews .star").on('click', function () { var index = $(this).index(); $('#create-reviews .star').each(function (i, elem) { if ($(this).index() <= index) { $(this).addClass('check'); } else { $(this).removeClass('check'); } }); var val_select = $(this).data('val'); $(this).parent().parent().find(".need-hidden").val(val_select); }); $("#create-reviews .aside-hold input").on('click', function () { if ($(this).parent().parent().find("#radio-bad:checked").is('#radio-bad')) { $('#create-reviews .reviews_number_order').parent().show(); $('#create-reviews .reviews_number_order').attr('required', ''); } else { $('#create-reviews .reviews_number_order').parent().hide(); $('#create-reviews .reviews_number_order').removeAttr('required'); } }); $('.review-item').on('click', '.link-delete', async function (ev) {
            var element = this; var text_button = $(element).html(); var password = false; if ('1' == $(element).attr('data-moderator')) { if (confirm('Вы точно хотите удалить этот ответ?')) { password = 'moderator'; } else { return; } } else { const { value: pass } = await Swal.fire({ title: 'Удалить комментарий', html: '<input style="position: absolute; left: -9999px;" autocomplete="on" value=""/>', input: 'password', inputLabel: 'Введите пароль для удаления отзыва. Вы можете найти его на Вашей почте в письме об активации отзыва', inputPlaceholder: 'Пароль отзыва', inputAttributes: { maxlength: 16, autocapitalize: 'off', autocorrect: 'off' }, confirmButtonText: 'Отправить', showCloseButton: true, customClass: { confirmButton: 'button-remove-review', inputLabel: 'text-left' } }); password = pass; }
            if (!password) { return false; }
            try { $.ajax({ url: '/wp-content/plugins/vw-reviews/vw-reviews-ajax.php', type: 'POST', data: $(element).attr('data-query') + '&password=' + encodeURIComponent(password) + '&action=reviews_action' + '&_delete_wpnonce=' + encodeURIComponent($('#_delete_wpnonce').val()) + '&time=' + Date.now(), beforeSend: function (xhr) { $(element).html('<span class="icon-preloader"></span>' + text_button); }, success: function (data, textStatus, jqXHR) { $(element).html(text_button); Swal.fire({ text: data, showCloseButton: true }); console.log('success', data, jqXHR); if (password == 'moderator') { window.location.reload(); } }, error: function (xhr) { $(element).html(text_button); Swal.fire({ text: 'Ошибка получения ответа сервера.', showCloseButton: true }); console.log(xhr); } }); } catch (err) { $(element).html(text_button); console.log(err); Swal.fire({ text: 'Ошибка отправки запроса на сервер.', showCloseButton: true }); }
            return false;
        }); if ($('.cashback-form-review').is('.cashback-form-review')) {
            var send_form = false; $('.cashback-form-review').on('submit', '#cashback_add_review_form', function (ev) {
                if (send_form) { Swal.fire({ text: 'Дождитесь окончания обработки формы.', showCloseButton: true }); return false; }
                send_form = true; var element = this; var button = $(element).find('.btn'); var text_button = button.html(); var container = $('.cashback-form-review'); try { $.ajax({ url: '/wp-content/plugins/vw-reviews/vw-reviews-ajax.php', type: 'POST', data: $(element).serialize() + '&time=' + Date.now(), beforeSend: function (xhr) { $(button).html('<span class="icon-preloader"></span>' + text_button); }, success: function (data, textStatus, jqXHR) { $(button).html(text_button); send_form = false; if ($(data).is('.cashback-form-review')) { var code = $(data).html(); $(container).html(code); } else { $(container).html(data); } }, error: function (xhr) { $(button).html(text_button); send_form = false; Swal.fire({ text: 'Ошибка получения ответа сервера.', showCloseButton: true }); console.log(xhr); } }); } catch (err) { $(button).html(text_button); console.log(err); send_form = false; Swal.fire({ text: 'Ошибка отправки запроса на сервер.', showCloseButton: true }); }
                return false;
            });
        }
        $('#filter_reviews_btn').on('click', function () { $('#filter_reviews').fadeToggle(300); }); $('input[name="selectReviews"]').on('click', function () { $('#reviewsFilter').submit(); });
    });
} catch (e) { }
try {/*! tooltipster v4.2.6 */!function (a, b) { "function" == typeof define && define.amd ? define(["jquery"], function (a) { return b(a) }) : "object" == typeof exports ? module.exports = b(require("jquery")) : b(jQuery) }(this, function (a) {
    function b(a) { this.$container, this.constraints = null, this.__$tooltip, this.__init(a) } function c(b, c) { var d = !0; return a.each(b, function (a, e) { return void 0 === c[a] || b[a] !== c[a] ? (d = !1, !1) : void 0 }), d } function d(b) { var c = b.attr("id"), d = c ? h.window.document.getElementById(c) : null; return d ? d === b[0] : a.contains(h.window.document.body, b[0]) } function e() { if (!g) return !1; var a = g.document.body || g.document.documentElement, b = a.style, c = "transition", d = ["Moz", "Webkit", "Khtml", "O", "ms"]; if ("string" == typeof b[c]) return !0; c = c.charAt(0).toUpperCase() + c.substr(1); for (var e = 0; e < d.length; e++)if ("string" == typeof b[d[e] + c]) return !0; return !1 } var f = { animation: "fade", animationDuration: 350, content: null, contentAsHTML: !1, contentCloning: !1, debug: !0, delay: 300, delayTouch: [300, 500], functionInit: null, functionBefore: null, functionReady: null, functionAfter: null, functionFormat: null, IEmin: 6, interactive: !1, multiple: !1, parent: null, plugins: ["sideTip"], repositionOnScroll: !1, restoration: "none", selfDestruction: !0, theme: [], timer: 0, trackerInterval: 500, trackOrigin: !1, trackTooltip: !1, trigger: "hover", triggerClose: { click: !1, mouseleave: !1, originClick: !1, scroll: !1, tap: !1, touchleave: !1 }, triggerOpen: { click: !1, mouseenter: !1, tap: !1, touchstart: !1 }, updateAnimation: "rotate", zIndex: 9999999 }, g = "undefined" != typeof window ? window : null, h = { hasTouchCapability: !(!g || !("ontouchstart" in g || g.DocumentTouch && g.document instanceof g.DocumentTouch || g.navigator.maxTouchPoints)), hasTransitions: e(), IE: !1, semVer: "4.2.6", window: g }, i = function () { this.__$emitterPrivate = a({}), this.__$emitterPublic = a({}), this.__instancesLatestArr = [], this.__plugins = {}, this._env = h }; i.prototype = { __bridge: function (b, c, d) { if (!c[d]) { var e = function () { }; e.prototype = b; var g = new e; g.__init && g.__init(c), a.each(b, function (a, b) { 0 != a.indexOf("__") && (c[a] ? f.debug && console.log("The " + a + " method of the " + d + " plugin conflicts with another plugin or native methods") : (c[a] = function () { return g[a].apply(g, Array.prototype.slice.apply(arguments)) }, c[a].bridged = g)) }), c[d] = g } return this }, __setWindow: function (a) { return h.window = a, this }, _getRuler: function (a) { return new b(a) }, _off: function () { return this.__$emitterPrivate.off.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments)), this }, _on: function () { return this.__$emitterPrivate.on.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments)), this }, _one: function () { return this.__$emitterPrivate.one.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments)), this }, _plugin: function (b) { var c = this; if ("string" == typeof b) { var d = b, e = null; return d.indexOf(".") > 0 ? e = c.__plugins[d] : a.each(c.__plugins, function (a, b) { return b.name.substring(b.name.length - d.length - 1) == "." + d ? (e = b, !1) : void 0 }), e } if (b.name.indexOf(".") < 0) throw new Error("Plugins must be namespaced"); return c.__plugins[b.name] = b, b.core && c.__bridge(b.core, c, b.name), this }, _trigger: function () { var a = Array.prototype.slice.apply(arguments); return "string" == typeof a[0] && (a[0] = { type: a[0] }), this.__$emitterPrivate.trigger.apply(this.__$emitterPrivate, a), this.__$emitterPublic.trigger.apply(this.__$emitterPublic, a), this }, instances: function (b) { var c = [], d = b || ".tooltipstered"; return a(d).each(function () { var b = a(this), d = b.data("tooltipster-ns"); d && a.each(d, function (a, d) { c.push(b.data(d)) }) }), c }, instancesLatest: function () { return this.__instancesLatestArr }, off: function () { return this.__$emitterPublic.off.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this }, on: function () { return this.__$emitterPublic.on.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this }, one: function () { return this.__$emitterPublic.one.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this }, origins: function (b) { var c = b ? b + " " : ""; return a(c + ".tooltipstered").toArray() }, setDefaults: function (b) { return a.extend(f, b), this }, triggerHandler: function () { return this.__$emitterPublic.triggerHandler.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this } }, a.tooltipster = new i, a.Tooltipster = function (b, c) { this.__callbacks = { close: [], open: [] }, this.__closingTime, this.__Content, this.__contentBcr, this.__destroyed = !1, this.__$emitterPrivate = a({}), this.__$emitterPublic = a({}), this.__enabled = !0, this.__garbageCollector, this.__Geometry, this.__lastPosition, this.__namespace = "tooltipster-" + Math.round(1e6 * Math.random()), this.__options, this.__$originParents, this.__pointerIsOverOrigin = !1, this.__previousThemes = [], this.__state = "closed", this.__timeouts = { close: [], open: null }, this.__touchEvents = [], this.__tracker = null, this._$origin, this._$tooltip, this.__init(b, c) }, a.Tooltipster.prototype = { __init: function (b, c) { var d = this; if (d._$origin = a(b), d.__options = a.extend(!0, {}, f, c), d.__optionsFormat(), !h.IE || h.IE >= d.__options.IEmin) { var e = null; if (void 0 === d._$origin.data("tooltipster-initialTitle") && (e = d._$origin.attr("title"), void 0 === e && (e = null), d._$origin.data("tooltipster-initialTitle", e)), null !== d.__options.content) d.__contentSet(d.__options.content); else { var g, i = d._$origin.attr("data-tooltip-content"); i && (g = a(i)), g && g[0] ? d.__contentSet(g.first()) : d.__contentSet(e) } d._$origin.removeAttr("title").addClass("tooltipstered"), d.__prepareOrigin(), d.__prepareGC(), a.each(d.__options.plugins, function (a, b) { d._plug(b) }), h.hasTouchCapability && a(h.window.document.body).on("touchmove." + d.__namespace + "-triggerOpen", function (a) { d._touchRecordEvent(a) }), d._on("created", function () { d.__prepareTooltip() })._on("repositioned", function (a) { d.__lastPosition = a.position }) } else d.__options.disabled = !0 }, __contentInsert: function () { var a = this, b = a._$tooltip.find(".tooltipster-content"), c = a.__Content, d = function (a) { c = a }; return a._trigger({ type: "format", content: a.__Content, format: d }), a.__options.functionFormat && (c = a.__options.functionFormat.call(a, a, { origin: a._$origin[0] }, a.__Content)), "string" != typeof c || a.__options.contentAsHTML ? b.empty().append(c) : b.text(c), a }, __contentSet: function (b) { return b instanceof a && this.__options.contentCloning && (b = b.clone(!0)), this.__Content = b, this._trigger({ type: "updated", content: b }), this }, __destroyError: function () { throw new Error("This tooltip has been destroyed and cannot execute your method call.") }, __geometry: function () { var b = this, c = b._$origin, d = b._$origin.is("area"); if (d) { var e = b._$origin.parent().attr("name"); c = a('img[usemap="#' + e + '"]') } var f = c[0].getBoundingClientRect(), g = a(h.window.document), i = a(h.window), j = c, k = { available: { document: null, window: null }, document: { size: { height: g.height(), width: g.width() } }, window: { scroll: { left: h.window.scrollX || h.window.document.documentElement.scrollLeft, top: h.window.scrollY || h.window.document.documentElement.scrollTop }, size: { height: i.height(), width: i.width() } }, origin: { fixedLineage: !1, offset: {}, size: { height: f.bottom - f.top, width: f.right - f.left }, usemapImage: d ? c[0] : null, windowOffset: { bottom: f.bottom, left: f.left, right: f.right, top: f.top } } }; if (d) { var l = b._$origin.attr("shape"), m = b._$origin.attr("coords"); if (m && (m = m.split(","), a.map(m, function (a, b) { m[b] = parseInt(a) })), "default" != l) switch (l) { case "circle": var n = m[0], o = m[1], p = m[2], q = o - p, r = n - p; k.origin.size.height = 2 * p, k.origin.size.width = k.origin.size.height, k.origin.windowOffset.left += r, k.origin.windowOffset.top += q; break; case "rect": var s = m[0], t = m[1], u = m[2], v = m[3]; k.origin.size.height = v - t, k.origin.size.width = u - s, k.origin.windowOffset.left += s, k.origin.windowOffset.top += t; break; case "poly": for (var w = 0, x = 0, y = 0, z = 0, A = "even", B = 0; B < m.length; B++) { var C = m[B]; "even" == A ? (C > y && (y = C, 0 === B && (w = y)), w > C && (w = C), A = "odd") : (C > z && (z = C, 1 == B && (x = z)), x > C && (x = C), A = "even") } k.origin.size.height = z - x, k.origin.size.width = y - w, k.origin.windowOffset.left += w, k.origin.windowOffset.top += x } } var D = function (a) { k.origin.size.height = a.height, k.origin.windowOffset.left = a.left, k.origin.windowOffset.top = a.top, k.origin.size.width = a.width }; for (b._trigger({ type: "geometry", edit: D, geometry: { height: k.origin.size.height, left: k.origin.windowOffset.left, top: k.origin.windowOffset.top, width: k.origin.size.width } }), k.origin.windowOffset.right = k.origin.windowOffset.left + k.origin.size.width, k.origin.windowOffset.bottom = k.origin.windowOffset.top + k.origin.size.height, k.origin.offset.left = k.origin.windowOffset.left + k.window.scroll.left, k.origin.offset.top = k.origin.windowOffset.top + k.window.scroll.top, k.origin.offset.bottom = k.origin.offset.top + k.origin.size.height, k.origin.offset.right = k.origin.offset.left + k.origin.size.width, k.available.document = { bottom: { height: k.document.size.height - k.origin.offset.bottom, width: k.document.size.width }, left: { height: k.document.size.height, width: k.origin.offset.left }, right: { height: k.document.size.height, width: k.document.size.width - k.origin.offset.right }, top: { height: k.origin.offset.top, width: k.document.size.width } }, k.available.window = { bottom: { height: Math.max(k.window.size.height - Math.max(k.origin.windowOffset.bottom, 0), 0), width: k.window.size.width }, left: { height: k.window.size.height, width: Math.max(k.origin.windowOffset.left, 0) }, right: { height: k.window.size.height, width: Math.max(k.window.size.width - Math.max(k.origin.windowOffset.right, 0), 0) }, top: { height: Math.max(k.origin.windowOffset.top, 0), width: k.window.size.width } }; "html" != j[0].tagName.toLowerCase();) { if ("fixed" == j.css("position")) { k.origin.fixedLineage = !0; break } j = j.parent() } return k }, __optionsFormat: function () { return "number" == typeof this.__options.animationDuration && (this.__options.animationDuration = [this.__options.animationDuration, this.__options.animationDuration]), "number" == typeof this.__options.delay && (this.__options.delay = [this.__options.delay, this.__options.delay]), "number" == typeof this.__options.delayTouch && (this.__options.delayTouch = [this.__options.delayTouch, this.__options.delayTouch]), "string" == typeof this.__options.theme && (this.__options.theme = [this.__options.theme]), null === this.__options.parent ? this.__options.parent = a(h.window.document.body) : "string" == typeof this.__options.parent && (this.__options.parent = a(this.__options.parent)), "hover" == this.__options.trigger ? (this.__options.triggerOpen = { mouseenter: !0, touchstart: !0 }, this.__options.triggerClose = { mouseleave: !0, originClick: !0, touchleave: !0 }) : "click" == this.__options.trigger && (this.__options.triggerOpen = { click: !0, tap: !0 }, this.__options.triggerClose = { click: !0, tap: !0 }), this._trigger("options"), this }, __prepareGC: function () { var b = this; return b.__options.selfDestruction ? b.__garbageCollector = setInterval(function () { var c = (new Date).getTime(); b.__touchEvents = a.grep(b.__touchEvents, function (a, b) { return c - a.time > 6e4 }), d(b._$origin) || b.close(function () { b.destroy() }) }, 2e4) : clearInterval(b.__garbageCollector), b }, __prepareOrigin: function () { var a = this; if (a._$origin.off("." + a.__namespace + "-triggerOpen"), h.hasTouchCapability && a._$origin.on("touchstart." + a.__namespace + "-triggerOpen touchend." + a.__namespace + "-triggerOpen touchcancel." + a.__namespace + "-triggerOpen", function (b) { a._touchRecordEvent(b) }), a.__options.triggerOpen.click || a.__options.triggerOpen.tap && h.hasTouchCapability) { var b = ""; a.__options.triggerOpen.click && (b += "click." + a.__namespace + "-triggerOpen "), a.__options.triggerOpen.tap && h.hasTouchCapability && (b += "touchend." + a.__namespace + "-triggerOpen"), a._$origin.on(b, function (b) { a._touchIsMeaningfulEvent(b) && a._open(b) }) } if (a.__options.triggerOpen.mouseenter || a.__options.triggerOpen.touchstart && h.hasTouchCapability) { var b = ""; a.__options.triggerOpen.mouseenter && (b += "mouseenter." + a.__namespace + "-triggerOpen "), a.__options.triggerOpen.touchstart && h.hasTouchCapability && (b += "touchstart." + a.__namespace + "-triggerOpen"), a._$origin.on(b, function (b) { !a._touchIsTouchEvent(b) && a._touchIsEmulatedEvent(b) || (a.__pointerIsOverOrigin = !0, a._openShortly(b)) }) } if (a.__options.triggerClose.mouseleave || a.__options.triggerClose.touchleave && h.hasTouchCapability) { var b = ""; a.__options.triggerClose.mouseleave && (b += "mouseleave." + a.__namespace + "-triggerOpen "), a.__options.triggerClose.touchleave && h.hasTouchCapability && (b += "touchend." + a.__namespace + "-triggerOpen touchcancel." + a.__namespace + "-triggerOpen"), a._$origin.on(b, function (b) { a._touchIsMeaningfulEvent(b) && (a.__pointerIsOverOrigin = !1) }) } return a }, __prepareTooltip: function () { var b = this, c = b.__options.interactive ? "auto" : ""; return b._$tooltip.attr("id", b.__namespace).css({ "pointer-events": c, zIndex: b.__options.zIndex }), a.each(b.__previousThemes, function (a, c) { b._$tooltip.removeClass(c) }), a.each(b.__options.theme, function (a, c) { b._$tooltip.addClass(c) }), b.__previousThemes = a.merge([], b.__options.theme), b }, __scrollHandler: function (b) { var c = this; if (c.__options.triggerClose.scroll) c._close(b); else if (d(c._$origin) && d(c._$tooltip)) { var e = null; if (b.target === h.window.document) c.__Geometry.origin.fixedLineage || c.__options.repositionOnScroll && c.reposition(b); else { e = c.__geometry(); var f = !1; if ("fixed" != c._$origin.css("position") && c.__$originParents.each(function (b, c) { var d = a(c), g = d.css("overflow-x"), h = d.css("overflow-y"); if ("visible" != g || "visible" != h) { var i = c.getBoundingClientRect(); if ("visible" != g && (e.origin.windowOffset.left < i.left || e.origin.windowOffset.right > i.right)) return f = !0, !1; if ("visible" != h && (e.origin.windowOffset.top < i.top || e.origin.windowOffset.bottom > i.bottom)) return f = !0, !1 } return "fixed" == d.css("position") ? !1 : void 0 }), f) c._$tooltip.css("visibility", "hidden"); else if (c._$tooltip.css("visibility", "visible"), c.__options.repositionOnScroll) c.reposition(b); else { var g = e.origin.offset.left - c.__Geometry.origin.offset.left, i = e.origin.offset.top - c.__Geometry.origin.offset.top; c._$tooltip.css({ left: c.__lastPosition.coord.left + g, top: c.__lastPosition.coord.top + i }) } } c._trigger({ type: "scroll", event: b, geo: e }) } return c }, __stateSet: function (a) { return this.__state = a, this._trigger({ type: "state", state: a }), this }, __timeoutsClear: function () { return clearTimeout(this.__timeouts.open), this.__timeouts.open = null, a.each(this.__timeouts.close, function (a, b) { clearTimeout(b) }), this.__timeouts.close = [], this }, __trackerStart: function () { var a = this, b = a._$tooltip.find(".tooltipster-content"); return a.__options.trackTooltip && (a.__contentBcr = b[0].getBoundingClientRect()), a.__tracker = setInterval(function () { if (d(a._$origin) && d(a._$tooltip)) { if (a.__options.trackOrigin) { var e = a.__geometry(), f = !1; c(e.origin.size, a.__Geometry.origin.size) && (a.__Geometry.origin.fixedLineage ? c(e.origin.windowOffset, a.__Geometry.origin.windowOffset) && (f = !0) : c(e.origin.offset, a.__Geometry.origin.offset) && (f = !0)), f || (a.__options.triggerClose.mouseleave ? a._close() : a.reposition()) } if (a.__options.trackTooltip) { var g = b[0].getBoundingClientRect(); g.height === a.__contentBcr.height && g.width === a.__contentBcr.width || (a.reposition(), a.__contentBcr = g) } } else a._close() }, a.__options.trackerInterval), a }, _close: function (b, c, d) { var e = this, f = !0; if (e._trigger({ type: "close", event: b, stop: function () { f = !1 } }), f || d) { c && e.__callbacks.close.push(c), e.__callbacks.open = [], e.__timeoutsClear(); var g = function () { a.each(e.__callbacks.close, function (a, c) { c.call(e, e, { event: b, origin: e._$origin[0] }) }), e.__callbacks.close = [] }; if ("closed" != e.__state) { var i = !0, j = new Date, k = j.getTime(), l = k + e.__options.animationDuration[1]; if ("disappearing" == e.__state && l > e.__closingTime && e.__options.animationDuration[1] > 0 && (i = !1), i) { e.__closingTime = l, "disappearing" != e.__state && e.__stateSet("disappearing"); var m = function () { clearInterval(e.__tracker), e._trigger({ type: "closing", event: b }), e._$tooltip.off("." + e.__namespace + "-triggerClose").removeClass("tooltipster-dying"), a(h.window).off("." + e.__namespace + "-triggerClose"), e.__$originParents.each(function (b, c) { a(c).off("scroll." + e.__namespace + "-triggerClose") }), e.__$originParents = null, a(h.window.document.body).off("." + e.__namespace + "-triggerClose"), e._$origin.off("." + e.__namespace + "-triggerClose"), e._off("dismissable"), e.__stateSet("closed"), e._trigger({ type: "after", event: b }), e.__options.functionAfter && e.__options.functionAfter.call(e, e, { event: b, origin: e._$origin[0] }), g() }; h.hasTransitions ? (e._$tooltip.css({ "-moz-animation-duration": e.__options.animationDuration[1] + "ms", "-ms-animation-duration": e.__options.animationDuration[1] + "ms", "-o-animation-duration": e.__options.animationDuration[1] + "ms", "-webkit-animation-duration": e.__options.animationDuration[1] + "ms", "animation-duration": e.__options.animationDuration[1] + "ms", "transition-duration": e.__options.animationDuration[1] + "ms" }), e._$tooltip.clearQueue().removeClass("tooltipster-show").addClass("tooltipster-dying"), e.__options.animationDuration[1] > 0 && e._$tooltip.delay(e.__options.animationDuration[1]), e._$tooltip.queue(m)) : e._$tooltip.stop().fadeOut(e.__options.animationDuration[1], m) } } else g() } return e }, _off: function () { return this.__$emitterPrivate.off.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments)), this }, _on: function () { return this.__$emitterPrivate.on.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments)), this }, _one: function () { return this.__$emitterPrivate.one.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments)), this }, _open: function (b, c) { var e = this; if (!e.__destroying && d(e._$origin) && e.__enabled) { var f = !0; if ("closed" == e.__state && (e._trigger({ type: "before", event: b, stop: function () { f = !1 } }), f && e.__options.functionBefore && (f = e.__options.functionBefore.call(e, e, { event: b, origin: e._$origin[0] }))), f !== !1 && null !== e.__Content) { c && e.__callbacks.open.push(c), e.__callbacks.close = [], e.__timeoutsClear(); var g, i = function () { "stable" != e.__state && e.__stateSet("stable"), a.each(e.__callbacks.open, function (a, b) { b.call(e, e, { origin: e._$origin[0], tooltip: e._$tooltip[0] }) }), e.__callbacks.open = [] }; if ("closed" !== e.__state) g = 0, "disappearing" === e.__state ? (e.__stateSet("appearing"), h.hasTransitions ? (e._$tooltip.clearQueue().removeClass("tooltipster-dying").addClass("tooltipster-show"), e.__options.animationDuration[0] > 0 && e._$tooltip.delay(e.__options.animationDuration[0]), e._$tooltip.queue(i)) : e._$tooltip.stop().fadeIn(i)) : "stable" == e.__state && i(); else { if (e.__stateSet("appearing"), g = e.__options.animationDuration[0], e.__contentInsert(), e.reposition(b, !0), h.hasTransitions ? (e._$tooltip.addClass("tooltipster-" + e.__options.animation).addClass("tooltipster-initial").css({ "-moz-animation-duration": e.__options.animationDuration[0] + "ms", "-ms-animation-duration": e.__options.animationDuration[0] + "ms", "-o-animation-duration": e.__options.animationDuration[0] + "ms", "-webkit-animation-duration": e.__options.animationDuration[0] + "ms", "animation-duration": e.__options.animationDuration[0] + "ms", "transition-duration": e.__options.animationDuration[0] + "ms" }), setTimeout(function () { "closed" != e.__state && (e._$tooltip.addClass("tooltipster-show").removeClass("tooltipster-initial"), e.__options.animationDuration[0] > 0 && e._$tooltip.delay(e.__options.animationDuration[0]), e._$tooltip.queue(i)) }, 0)) : e._$tooltip.css("display", "none").fadeIn(e.__options.animationDuration[0], i), e.__trackerStart(), a(h.window).on("resize." + e.__namespace + "-triggerClose", function (b) { var c = a(document.activeElement); (c.is("input") || c.is("textarea")) && a.contains(e._$tooltip[0], c[0]) || e.reposition(b) }).on("scroll." + e.__namespace + "-triggerClose", function (a) { e.__scrollHandler(a) }), e.__$originParents = e._$origin.parents(), e.__$originParents.each(function (b, c) { a(c).on("scroll." + e.__namespace + "-triggerClose", function (a) { e.__scrollHandler(a) }) }), e.__options.triggerClose.mouseleave || e.__options.triggerClose.touchleave && h.hasTouchCapability) { e._on("dismissable", function (a) { a.dismissable ? a.delay ? (m = setTimeout(function () { e._close(a.event) }, a.delay), e.__timeouts.close.push(m)) : e._close(a) : clearTimeout(m) }); var j = e._$origin, k = "", l = "", m = null; e.__options.interactive && (j = j.add(e._$tooltip)), e.__options.triggerClose.mouseleave && (k += "mouseenter." + e.__namespace + "-triggerClose ", l += "mouseleave." + e.__namespace + "-triggerClose "), e.__options.triggerClose.touchleave && h.hasTouchCapability && (k += "touchstart." + e.__namespace + "-triggerClose", l += "touchend." + e.__namespace + "-triggerClose touchcancel." + e.__namespace + "-triggerClose"), j.on(l, function (a) { if (e._touchIsTouchEvent(a) || !e._touchIsEmulatedEvent(a)) { var b = "mouseleave" == a.type ? e.__options.delay : e.__options.delayTouch; e._trigger({ delay: b[1], dismissable: !0, event: a, type: "dismissable" }) } }).on(k, function (a) { !e._touchIsTouchEvent(a) && e._touchIsEmulatedEvent(a) || e._trigger({ dismissable: !1, event: a, type: "dismissable" }) }) } e.__options.triggerClose.originClick && e._$origin.on("click." + e.__namespace + "-triggerClose", function (a) { e._touchIsTouchEvent(a) || e._touchIsEmulatedEvent(a) || e._close(a) }), (e.__options.triggerClose.click || e.__options.triggerClose.tap && h.hasTouchCapability) && setTimeout(function () { if ("closed" != e.__state) { var b = "", c = a(h.window.document.body); e.__options.triggerClose.click && (b += "click." + e.__namespace + "-triggerClose "), e.__options.triggerClose.tap && h.hasTouchCapability && (b += "touchend." + e.__namespace + "-triggerClose"), c.on(b, function (b) { e._touchIsMeaningfulEvent(b) && (e._touchRecordEvent(b), e.__options.interactive && a.contains(e._$tooltip[0], b.target) || e._close(b)) }), e.__options.triggerClose.tap && h.hasTouchCapability && c.on("touchstart." + e.__namespace + "-triggerClose", function (a) { e._touchRecordEvent(a) }) } }, 0), e._trigger("ready"), e.__options.functionReady && e.__options.functionReady.call(e, e, { origin: e._$origin[0], tooltip: e._$tooltip[0] }) } if (e.__options.timer > 0) { var m = setTimeout(function () { e._close() }, e.__options.timer + g); e.__timeouts.close.push(m) } } } return e }, _openShortly: function (a) { var b = this, c = !0; if ("stable" != b.__state && "appearing" != b.__state && !b.__timeouts.open && (b._trigger({ type: "start", event: a, stop: function () { c = !1 } }), c)) { var d = 0 == a.type.indexOf("touch") ? b.__options.delayTouch : b.__options.delay; d[0] ? b.__timeouts.open = setTimeout(function () { b.__timeouts.open = null, b.__pointerIsOverOrigin && b._touchIsMeaningfulEvent(a) ? (b._trigger("startend"), b._open(a)) : b._trigger("startcancel") }, d[0]) : (b._trigger("startend"), b._open(a)) } return b }, _optionsExtract: function (b, c) { var d = this, e = a.extend(!0, {}, c), f = d.__options[b]; return f || (f = {}, a.each(c, function (a, b) { var c = d.__options[a]; void 0 !== c && (f[a] = c) })), a.each(e, function (b, c) { void 0 !== f[b] && ("object" != typeof c || c instanceof Array || null == c || "object" != typeof f[b] || f[b] instanceof Array || null == f[b] ? e[b] = f[b] : a.extend(e[b], f[b])) }), e }, _plug: function (b) { var c = a.tooltipster._plugin(b); if (!c) throw new Error('The "' + b + '" plugin is not defined'); return c.instance && a.tooltipster.__bridge(c.instance, this, c.name), this }, _touchIsEmulatedEvent: function (a) { for (var b = !1, c = (new Date).getTime(), d = this.__touchEvents.length - 1; d >= 0; d--) { var e = this.__touchEvents[d]; if (!(c - e.time < 500)) break; e.target === a.target && (b = !0) } return b }, _touchIsMeaningfulEvent: function (a) { return this._touchIsTouchEvent(a) && !this._touchSwiped(a.target) || !this._touchIsTouchEvent(a) && !this._touchIsEmulatedEvent(a) }, _touchIsTouchEvent: function (a) { return 0 == a.type.indexOf("touch") }, _touchRecordEvent: function (a) { return this._touchIsTouchEvent(a) && (a.time = (new Date).getTime(), this.__touchEvents.push(a)), this }, _touchSwiped: function (a) { for (var b = !1, c = this.__touchEvents.length - 1; c >= 0; c--) { var d = this.__touchEvents[c]; if ("touchmove" == d.type) { b = !0; break } if ("touchstart" == d.type && a === d.target) break } return b }, _trigger: function () { var b = Array.prototype.slice.apply(arguments); return "string" == typeof b[0] && (b[0] = { type: b[0] }), b[0].instance = this, b[0].origin = this._$origin ? this._$origin[0] : null, b[0].tooltip = this._$tooltip ? this._$tooltip[0] : null, this.__$emitterPrivate.trigger.apply(this.__$emitterPrivate, b), a.tooltipster._trigger.apply(a.tooltipster, b), this.__$emitterPublic.trigger.apply(this.__$emitterPublic, b), this }, _unplug: function (b) { var c = this; if (c[b]) { var d = a.tooltipster._plugin(b); d.instance && a.each(d.instance, function (a, d) { c[a] && c[a].bridged === c[b] && delete c[a] }), c[b].__destroy && c[b].__destroy(), delete c[b] } return c }, close: function (a) { return this.__destroyed ? this.__destroyError() : this._close(null, a), this }, content: function (a) { var b = this; if (void 0 === a) return b.__Content; if (b.__destroyed) b.__destroyError(); else if (b.__contentSet(a), null !== b.__Content) { if ("closed" !== b.__state && (b.__contentInsert(), b.reposition(), b.__options.updateAnimation)) if (h.hasTransitions) { var c = b.__options.updateAnimation; b._$tooltip.addClass("tooltipster-update-" + c), setTimeout(function () { "closed" != b.__state && b._$tooltip.removeClass("tooltipster-update-" + c) }, 1e3) } else b._$tooltip.fadeTo(200, .5, function () { "closed" != b.__state && b._$tooltip.fadeTo(200, 1) }) } else b._close(); return b }, destroy: function () { var b = this; if (b.__destroyed) b.__destroyError(); else { "closed" != b.__state ? b.option("animationDuration", 0)._close(null, null, !0) : b.__timeoutsClear(), b._trigger("destroy"), b.__destroyed = !0, b._$origin.removeData(b.__namespace).off("." + b.__namespace + "-triggerOpen"), a(h.window.document.body).off("." + b.__namespace + "-triggerOpen"); var c = b._$origin.data("tooltipster-ns"); if (c) if (1 === c.length) { var d = null; "previous" == b.__options.restoration ? d = b._$origin.data("tooltipster-initialTitle") : "current" == b.__options.restoration && (d = "string" == typeof b.__Content ? b.__Content : a("<div></div>").append(b.__Content).html()), d && b._$origin.attr("title", d), b._$origin.removeClass("tooltipstered"), b._$origin.removeData("tooltipster-ns").removeData("tooltipster-initialTitle") } else c = a.grep(c, function (a, c) { return a !== b.__namespace }), b._$origin.data("tooltipster-ns", c); b._trigger("destroyed"), b._off(), b.off(), b.__Content = null, b.__$emitterPrivate = null, b.__$emitterPublic = null, b.__options.parent = null, b._$origin = null, b._$tooltip = null, a.tooltipster.__instancesLatestArr = a.grep(a.tooltipster.__instancesLatestArr, function (a, c) { return b !== a }), clearInterval(b.__garbageCollector) } return b }, disable: function () { return this.__destroyed ? (this.__destroyError(), this) : (this._close(), this.__enabled = !1, this) }, elementOrigin: function () { return this.__destroyed ? void this.__destroyError() : this._$origin[0] }, elementTooltip: function () { return this._$tooltip ? this._$tooltip[0] : null }, enable: function () { return this.__enabled = !0, this }, hide: function (a) { return this.close(a) }, instance: function () { return this }, off: function () { return this.__destroyed || this.__$emitterPublic.off.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this }, on: function () { return this.__destroyed ? this.__destroyError() : this.__$emitterPublic.on.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this }, one: function () { return this.__destroyed ? this.__destroyError() : this.__$emitterPublic.one.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this }, open: function (a) { return this.__destroyed ? this.__destroyError() : this._open(null, a), this }, option: function (b, c) { return void 0 === c ? this.__options[b] : (this.__destroyed ? this.__destroyError() : (this.__options[b] = c, this.__optionsFormat(), a.inArray(b, ["trigger", "triggerClose", "triggerOpen"]) >= 0 && this.__prepareOrigin(), "selfDestruction" === b && this.__prepareGC()), this) }, reposition: function (a, b) { var c = this; return c.__destroyed ? c.__destroyError() : "closed" != c.__state && d(c._$origin) && (b || d(c._$tooltip)) && (b || c._$tooltip.detach(), c.__Geometry = c.__geometry(), c._trigger({ type: "reposition", event: a, helper: { geo: c.__Geometry } })), c }, show: function (a) { return this.open(a) }, status: function () { return { destroyed: this.__destroyed, enabled: this.__enabled, open: "closed" !== this.__state, state: this.__state } }, triggerHandler: function () { return this.__destroyed ? this.__destroyError() : this.__$emitterPublic.triggerHandler.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this } }, a.fn.tooltipster = function () { var b = Array.prototype.slice.apply(arguments), c = "You are using a single HTML element as content for several tooltips. You probably want to set the contentCloning option to TRUE."; if (0 === this.length) return this; if ("string" == typeof b[0]) { var d = "#*$~&"; return this.each(function () { var e = a(this).data("tooltipster-ns"), f = e ? a(this).data(e[0]) : null; if (!f) throw new Error("You called Tooltipster's \"" + b[0] + '" method on an uninitialized element'); if ("function" != typeof f[b[0]]) throw new Error('Unknown method "' + b[0] + '"'); this.length > 1 && "content" == b[0] && (b[1] instanceof a || "object" == typeof b[1] && null != b[1] && b[1].tagName) && !f.__options.contentCloning && f.__options.debug && console.log(c); var g = f[b[0]](b[1], b[2]); return g !== f || "instance" === b[0] ? (d = g, !1) : void 0 }), "#*$~&" !== d ? d : this } a.tooltipster.__instancesLatestArr = []; var e = b[0] && void 0 !== b[0].multiple, g = e && b[0].multiple || !e && f.multiple, h = b[0] && void 0 !== b[0].content, i = h && b[0].content || !h && f.content, j = b[0] && void 0 !== b[0].contentCloning, k = j && b[0].contentCloning || !j && f.contentCloning, l = b[0] && void 0 !== b[0].debug, m = l && b[0].debug || !l && f.debug; return this.length > 1 && (i instanceof a || "object" == typeof i && null != i && i.tagName) && !k && m && console.log(c), this.each(function () { var c = !1, d = a(this), e = d.data("tooltipster-ns"), f = null; e ? g ? c = !0 : m && (console.log("Tooltipster: one or more tooltips are already attached to the element below. Ignoring."), console.log(this)) : c = !0, c && (f = new a.Tooltipster(this, b[0]), e || (e = []), e.push(f.__namespace), d.data("tooltipster-ns", e), d.data(f.__namespace, f), f.__options.functionInit && f.__options.functionInit.call(f, f, { origin: this }), f._trigger("init")), a.tooltipster.__instancesLatestArr.push(f) }), this }, b.prototype = { __init: function (b) { this.__$tooltip = b, this.__$tooltip.css({ left: 0, overflow: "hidden", position: "absolute", top: 0 }).find(".tooltipster-content").css("overflow", "auto"), this.$container = a('<div class="tooltipster-ruler"></div>').append(this.__$tooltip).appendTo(h.window.document.body) }, __forceRedraw: function () { var a = this.__$tooltip.parent(); this.__$tooltip.detach(), this.__$tooltip.appendTo(a) }, constrain: function (a, b) { return this.constraints = { width: a, height: b }, this.__$tooltip.css({ display: "block", height: "", overflow: "auto", width: a }), this }, destroy: function () { this.__$tooltip.detach().find(".tooltipster-content").css({ display: "", overflow: "" }), this.$container.remove() }, free: function () { return this.constraints = null, this.__$tooltip.css({ display: "", height: "", overflow: "visible", width: "" }), this }, measure: function () { this.__forceRedraw(); var a = this.__$tooltip[0].getBoundingClientRect(), b = { size: { height: a.height || a.bottom - a.top, width: a.width || a.right - a.left } }; if (this.constraints) { var c = this.__$tooltip.find(".tooltipster-content"), d = this.__$tooltip.outerHeight(), e = c[0].getBoundingClientRect(), f = { height: d <= this.constraints.height, width: a.width <= this.constraints.width && e.width >= c[0].scrollWidth - 1 }; b.fits = f.height && f.width } return h.IE && h.IE <= 11 && b.size.width !== h.window.document.documentElement.clientWidth && (b.size.width = Math.ceil(b.size.width) + 1), b } }; var j = navigator.userAgent.toLowerCase(); -1 != j.indexOf("msie") ? h.IE = parseInt(j.split("msie")[1]) : -1 !== j.toLowerCase().indexOf("trident") && -1 !== j.indexOf(" rv:11") ? h.IE = 11 : -1 != j.toLowerCase().indexOf("edge/") && (h.IE = parseInt(j.toLowerCase().split("edge/")[1])); var k = "tooltipster.sideTip"; return a.tooltipster._plugin({
        name: k, instance: {
            __defaults: function () { return { arrow: !0, distance: 6, functionPosition: null, maxWidth: null, minIntersection: 16, minWidth: 0, position: null, side: "top", viewportAware: !0 } }, __init: function (a) { var b = this; b.__instance = a, b.__namespace = "tooltipster-sideTip-" + Math.round(1e6 * Math.random()), b.__previousState = "closed", b.__options, b.__optionsFormat(), b.__instance._on("state." + b.__namespace, function (a) { "closed" == a.state ? b.__close() : "appearing" == a.state && "closed" == b.__previousState && b.__create(), b.__previousState = a.state }), b.__instance._on("options." + b.__namespace, function () { b.__optionsFormat() }), b.__instance._on("reposition." + b.__namespace, function (a) { b.__reposition(a.event, a.helper) }) }, __close: function () { this.__instance.content() instanceof a && this.__instance.content().detach(), this.__instance._$tooltip.remove(), this.__instance._$tooltip = null }, __create: function () {
                var b = a('<div class="tooltipster-base tooltipster-sidetip"><div class="tooltipster-box"><div class="tooltipster-content"></div></div><div class="tooltipster-arrow"><div class="tooltipster-arrow-uncropped"><div class="tooltipster-arrow-border"></div><div class="tooltipster-arrow-background"></div></div></div></div>'); this.__options.arrow || b.find(".tooltipster-box").css("margin", 0).end().find(".tooltipster-arrow").hide(), this.__options.minWidth && b.css("min-width", this.__options.minWidth + "px"), this.__options.maxWidth && b.css("max-width", this.__options.maxWidth + "px"),
                    this.__instance._$tooltip = b, this.__instance._trigger("created")
            }, __destroy: function () { this.__instance._off("." + self.__namespace) }, __optionsFormat: function () { var b = this; if (b.__options = b.__instance._optionsExtract(k, b.__defaults()), b.__options.position && (b.__options.side = b.__options.position), "object" != typeof b.__options.distance && (b.__options.distance = [b.__options.distance]), b.__options.distance.length < 4 && (void 0 === b.__options.distance[1] && (b.__options.distance[1] = b.__options.distance[0]), void 0 === b.__options.distance[2] && (b.__options.distance[2] = b.__options.distance[0]), void 0 === b.__options.distance[3] && (b.__options.distance[3] = b.__options.distance[1]), b.__options.distance = { top: b.__options.distance[0], right: b.__options.distance[1], bottom: b.__options.distance[2], left: b.__options.distance[3] }), "string" == typeof b.__options.side) { var c = { top: "bottom", right: "left", bottom: "top", left: "right" }; b.__options.side = [b.__options.side, c[b.__options.side]], "left" == b.__options.side[0] || "right" == b.__options.side[0] ? b.__options.side.push("top", "bottom") : b.__options.side.push("right", "left") } 6 === a.tooltipster._env.IE && b.__options.arrow !== !0 && (b.__options.arrow = !1) }, __reposition: function (b, c) { var d, e = this, f = e.__targetFind(c), g = []; e.__instance._$tooltip.detach(); var h = e.__instance._$tooltip.clone(), i = a.tooltipster._getRuler(h), j = !1, k = e.__instance.option("animation"); switch (k && h.removeClass("tooltipster-" + k), a.each(["window", "document"], function (d, k) { var l = null; if (e.__instance._trigger({ container: k, helper: c, satisfied: j, takeTest: function (a) { l = a }, results: g, type: "positionTest" }), 1 == l || 0 != l && 0 == j && ("window" != k || e.__options.viewportAware)) for (var d = 0; d < e.__options.side.length; d++) { var m = { horizontal: 0, vertical: 0 }, n = e.__options.side[d]; "top" == n || "bottom" == n ? m.vertical = e.__options.distance[n] : m.horizontal = e.__options.distance[n], e.__sideChange(h, n), a.each(["natural", "constrained"], function (a, d) { if (l = null, e.__instance._trigger({ container: k, event: b, helper: c, mode: d, results: g, satisfied: j, side: n, takeTest: function (a) { l = a }, type: "positionTest" }), 1 == l || 0 != l && 0 == j) { var h = { container: k, distance: m, fits: null, mode: d, outerSize: null, side: n, size: null, target: f[n], whole: null }, o = "natural" == d ? i.free() : i.constrain(c.geo.available[k][n].width - m.horizontal, c.geo.available[k][n].height - m.vertical), p = o.measure(); if (h.size = p.size, h.outerSize = { height: p.size.height + m.vertical, width: p.size.width + m.horizontal }, "natural" == d ? c.geo.available[k][n].width >= h.outerSize.width && c.geo.available[k][n].height >= h.outerSize.height ? h.fits = !0 : h.fits = !1 : h.fits = p.fits, "window" == k && (h.fits ? "top" == n || "bottom" == n ? h.whole = c.geo.origin.windowOffset.right >= e.__options.minIntersection && c.geo.window.size.width - c.geo.origin.windowOffset.left >= e.__options.minIntersection : h.whole = c.geo.origin.windowOffset.bottom >= e.__options.minIntersection && c.geo.window.size.height - c.geo.origin.windowOffset.top >= e.__options.minIntersection : h.whole = !1), g.push(h), h.whole) j = !0; else if ("natural" == h.mode && (h.fits || h.size.width <= c.geo.available[k][n].width)) return !1 } }) } }), e.__instance._trigger({ edit: function (a) { g = a }, event: b, helper: c, results: g, type: "positionTested" }), g.sort(function (a, b) { if (a.whole && !b.whole) return -1; if (!a.whole && b.whole) return 1; if (a.whole && b.whole) { var c = e.__options.side.indexOf(a.side), d = e.__options.side.indexOf(b.side); return d > c ? -1 : c > d ? 1 : "natural" == a.mode ? -1 : 1 } if (a.fits && !b.fits) return -1; if (!a.fits && b.fits) return 1; if (a.fits && b.fits) { var c = e.__options.side.indexOf(a.side), d = e.__options.side.indexOf(b.side); return d > c ? -1 : c > d ? 1 : "natural" == a.mode ? -1 : 1 } return "document" == a.container && "bottom" == a.side && "natural" == a.mode ? -1 : 1 }), d = g[0], d.coord = {}, d.side) { case "left": case "right": d.coord.top = Math.floor(d.target - d.size.height / 2); break; case "bottom": case "top": d.coord.left = Math.floor(d.target - d.size.width / 2) }switch (d.side) { case "left": d.coord.left = c.geo.origin.windowOffset.left - d.outerSize.width; break; case "right": d.coord.left = c.geo.origin.windowOffset.right + d.distance.horizontal; break; case "top": d.coord.top = c.geo.origin.windowOffset.top - d.outerSize.height; break; case "bottom": d.coord.top = c.geo.origin.windowOffset.bottom + d.distance.vertical }"window" == d.container ? "top" == d.side || "bottom" == d.side ? d.coord.left < 0 ? c.geo.origin.windowOffset.right - this.__options.minIntersection >= 0 ? d.coord.left = 0 : d.coord.left = c.geo.origin.windowOffset.right - this.__options.minIntersection - 1 : d.coord.left > c.geo.window.size.width - d.size.width && (c.geo.origin.windowOffset.left + this.__options.minIntersection <= c.geo.window.size.width ? d.coord.left = c.geo.window.size.width - d.size.width : d.coord.left = c.geo.origin.windowOffset.left + this.__options.minIntersection + 1 - d.size.width) : d.coord.top < 0 ? c.geo.origin.windowOffset.bottom - this.__options.minIntersection >= 0 ? d.coord.top = 0 : d.coord.top = c.geo.origin.windowOffset.bottom - this.__options.minIntersection - 1 : d.coord.top > c.geo.window.size.height - d.size.height && (c.geo.origin.windowOffset.top + this.__options.minIntersection <= c.geo.window.size.height ? d.coord.top = c.geo.window.size.height - d.size.height : d.coord.top = c.geo.origin.windowOffset.top + this.__options.minIntersection + 1 - d.size.height) : (d.coord.left > c.geo.window.size.width - d.size.width && (d.coord.left = c.geo.window.size.width - d.size.width), d.coord.left < 0 && (d.coord.left = 0)), e.__sideChange(h, d.side), c.tooltipClone = h[0], c.tooltipParent = e.__instance.option("parent").parent[0], c.mode = d.mode, c.whole = d.whole, c.origin = e.__instance._$origin[0], c.tooltip = e.__instance._$tooltip[0], delete d.container, delete d.fits, delete d.mode, delete d.outerSize, delete d.whole, d.distance = d.distance.horizontal || d.distance.vertical; var l = a.extend(!0, {}, d); if (e.__instance._trigger({ edit: function (a) { d = a }, event: b, helper: c, position: l, type: "position" }), e.__options.functionPosition) { var m = e.__options.functionPosition.call(e, e.__instance, c, l); m && (d = m) } i.destroy(); var n, o; "top" == d.side || "bottom" == d.side ? (n = { prop: "left", val: d.target - d.coord.left }, o = d.size.width - this.__options.minIntersection) : (n = { prop: "top", val: d.target - d.coord.top }, o = d.size.height - this.__options.minIntersection), n.val < this.__options.minIntersection ? n.val = this.__options.minIntersection : n.val > o && (n.val = o); var p; p = c.geo.origin.fixedLineage ? c.geo.origin.windowOffset : { left: c.geo.origin.windowOffset.left + c.geo.window.scroll.left, top: c.geo.origin.windowOffset.top + c.geo.window.scroll.top }, d.coord = { left: p.left + (d.coord.left - c.geo.origin.windowOffset.left), top: p.top + (d.coord.top - c.geo.origin.windowOffset.top) }, e.__sideChange(e.__instance._$tooltip, d.side), c.geo.origin.fixedLineage ? e.__instance._$tooltip.css("position", "fixed") : e.__instance._$tooltip.css("position", ""), e.__instance._$tooltip.css({ left: d.coord.left, top: d.coord.top, height: d.size.height, width: d.size.width }).find(".tooltipster-arrow").css({ left: "", top: "" }).css(n.prop, n.val), e.__instance._$tooltip.appendTo(e.__instance.option("parent")), e.__instance._trigger({ type: "repositioned", event: b, position: d }) }, __sideChange: function (a, b) { a.removeClass("tooltipster-bottom").removeClass("tooltipster-left").removeClass("tooltipster-right").removeClass("tooltipster-top").addClass("tooltipster-" + b) }, __targetFind: function (a) { var b = {}, c = this.__instance._$origin[0].getClientRects(); if (c.length > 1) { var d = this.__instance._$origin.css("opacity"); 1 == d && (this.__instance._$origin.css("opacity", .99), c = this.__instance._$origin[0].getClientRects(), this.__instance._$origin.css("opacity", 1)) } if (c.length < 2) b.top = Math.floor(a.geo.origin.windowOffset.left + a.geo.origin.size.width / 2), b.bottom = b.top, b.left = Math.floor(a.geo.origin.windowOffset.top + a.geo.origin.size.height / 2), b.right = b.left; else { var e = c[0]; b.top = Math.floor(e.left + (e.right - e.left) / 2), e = c.length > 2 ? c[Math.ceil(c.length / 2) - 1] : c[0], b.right = Math.floor(e.top + (e.bottom - e.top) / 2), e = c[c.length - 1], b.bottom = Math.floor(e.left + (e.right - e.left) / 2), e = c.length > 2 ? c[Math.ceil((c.length + 1) / 2) - 1] : c[c.length - 1], b.left = Math.floor(e.top + (e.bottom - e.top) / 2) } return b }
        }
    }), a
});
} catch (e) { }
try {
    ; (function ($) {
        var _error = function (text) { if (typeof console == "object") console.warn(text); }, _setTab = function (data, tab) {
            data.links.removeClass(data.activeTab).filter('[data-tab="' + tab + '"]').addClass(data.activeTab); data.boxes.removeClass(data.visibleClass + " " + data.hiddenClass).addClass(data.hiddenClass).filter(tab).addClass(data.visibleClass).removeClass(data.hiddenClass); if (data.steps) { if (data.maxStep < data.steps.index(data.steps.filter("." + data.activeTab))) data.maxStep = data.steps.index(data.steps.filter("." + data.activeTab)); data.steps.removeClass(data.disabledTab); for (var i = data.maxStep + 1; i <= data.steps.length; i++)data.steps.eq(i).addClass(data.disabledTab) }
            data.onChange(); $(window).trigger("resize")
        }, _initEvents = function (data) { data.links.on("click.tabs", function () { if (!$(this).hasClass(data.disabledTab)) _setTab(data, $(this).data("tab")); return false }) }, methods = {
            init: function (options) {
                return this.each(function () {
                    var $this = $(this); $this.data("tabs", jQuery.extend({}, defaults, options)); var data = $this.data("tabs"); data.context = $this; data.links = $this.find("[data-tab]").not(".detected").addClass("detected"); data.boxes = $(); if (data.steps) { data.steps = $this.find(data.steps).eq(0).find("[data-tab]"); data.maxStep = data.steps.index(data.steps.filter("." + data.activeTab)) }
                    data.links.each(function () { data.boxes = data.boxes.add($($(this).data("tab"))) }); _setTab(data, data.links.filter("." + data.activeTab).eq(0).data("tab")); _initEvents(data)
                })
            }, setTab: function (tab) { return this.each(function () { var $this = $(this), data = $this.data("tabs"); if (data && typeof tab == "string") _setTab(data, tab); else _error("Second param need to be String") }) }, option: function (name, set) { if (set) return this.each(function () { var data = $(this).data("tabs"); if (data) data[name] = set }); else { var ar = []; this.each(function () { var data = $(this).data("tabs"); if (data) ar.push(data[name]) }); return ar.length > 1 ? ar : ar[0] } }, destroy: function () { return this.each(function () { var $this = $(this), data = $this.data("tabs"); if (data) { data.context.find("*").off(".tabs").removeClass(data.hiddenClass + " " + data.visibleClass); $(window).off(".tabs"); $this.removeData("tabs") } }) }
        }, defaults = { hiddenClass: "hidden", visibleClass: "visible", activeTab: "active", disabledTab: "disabled", steps: false, onChange: function () { } }; $.fn.tabs = function (method) { if (methods[method]) return methods[method].apply(this, Array.prototype.slice.call(arguments, 1)); else if (typeof method === "object" || !method) return methods.init.apply(this, arguments); else _error("Method " + method + " does not exist on jQuery.tabs") }
    })(jQuery);; (function ($) {
        var _installDirections = function (data) {
            data.holdWidth = data.list.parent().outerWidth(); data.woh = data.elements.outerWidth(true); if (!data.direction) data.parentSize = data.holdWidth; else { data.woh = data.elements.outerHeight(true); data.parentSize = data.list.parent().height() }
            data.wrapHolderW = Math.ceil(data.parentSize / data.woh); if ((data.wrapHolderW - 1) * data.woh + data.woh / 2 > data.parentSize) data.wrapHolderW--; if (data.wrapHolderW == 0) data.wrapHolderW = 1
        }, _dirAnimate = function (data) { if (!data.direction) return { left: -(data.woh * data.active) }; else return { top: -(data.woh * data.active) } }, _initDisableBtn = function (data) { data.prevBtn.removeClass(data.disableBtn); data.nextBtn.removeClass(data.disableBtn); if (data.active == 0 || data.count + 1 == data.wrapHolderW - 1) data.prevBtn.addClass(data.disableBtn); if (data.active == 0 && data.count + 1 == 1 || data.count + 1 <= data.wrapHolderW - 1) data.nextBtn.addClass(data.disableBtn); if (data.active == data.rew) data.nextBtn.addClass(data.disableBtn) }, _initEvent = function (data, btn, side) {
            btn.on(data.event + ".gallery" +
                data.timeStamp, function () {
                    if (data.flag) { if (data.infinite) data.flag = false; if (data._t) clearTimeout(data._t); _toPrepare(data, side); if (data.autoRotation) _runTimer(data); if (typeof data.onChange == "function") data.onChange({ data: data }) }
                    if (data.event == "click") return false
                })
        }, _initEventSwitcher = function (data) {
            data.switcher.on(data.event + ".gallery" + data.timeStamp, function () {
                if (data.flag && !$(this).hasClass(data.activeClass)) { if (data.infinite) data.flag = false; data.active = data.switcher.index(jQuery(this)) * data.slideElement; if (data.infinite) data.active = data.switcher.index(jQuery(this)) + data.count; if (data._t) clearTimeout(data._t); if (data.disableBtn) _initDisableBtn(data); if (!data.effect) _scrollElement(data); else _fadeElement(data); if (data.autoRotation) _runTimer(data); if (typeof data.onChange == "function") data.onChange({ data: data }) }
                if (data.event == "click") return false
            })
        }, _toPrepare = function (data, side) {
            if (!data.infinite) { if (data.active == data.rew && data.circle && side) data.active = -data.slideElement; if (data.active == 0 && data.circle && !side) data.active = data.rew + data.slideElement; for (var i = 0; i < data.slideElement; i++)if (side) { if (data.active + 1 <= data.rew) data.active++ } else if (data.active - 1 >= 0) data.active-- } else { if (data.active >= data.count + data.count && side) data.active -= data.count; if (data.active <= data.count - 1 && !side) data.active += data.count; data.list.css(_dirAnimate(data)); if (side) data.active += data.slideElement; else data.active -= data.slideElement }
            if (data.disableBtn) _initDisableBtn(data); if (!data.effect) _scrollElement(data); else _fadeElement(data)
        }, _fadeElement = function (data) { data.list.removeClass(data.activeClass).css({ zIndex: 1 }); data.list.eq(data.last).stop().css({ zIndex: 2, opacity: 1 }); if (data.effect == "transparent") data.list.eq(data.last).animate({ opacity: 0 }, { queue: false, duration: data.duration }); data.list.eq(data.active).addClass(data.activeClass).css({ opacity: 0, zIndex: 3 }).animate({ opacity: 1 }, { queue: false, duration: data.duration, complete: function () { jQuery(this).css("opacity", "auto") } }); if (data.autoHeight) data.list.parent().animate({ height: data.list.eq(data.active).outerHeight() }, { queue: false, duration: data.duration }); if (data.switcher) data.switcher.removeClass(data.activeClass).eq(data.active).addClass(data.activeClass); data.last = data.active }, _scrollElement = function (data) {
            data.elements.removeClass("active").eq(data.active).addClass(data.activeClass); if (!data.infinite) data.list.animate(_dirAnimate(data), { queue: false, duration: data.duration }); else { data.list.animate(_dirAnimate(data), data.duration, function () { if (data.active >= data.count + data.count) data.active -= data.count; if (data.active <= data.count - 1) data.active += data.count; data.list.css(_dirAnimate(data)); data.flag = true }); data.elements.eq(data.active - data.count).addClass(data.activeClass); data.elements.eq(data.active + data.count).addClass(data.activeClass) }
            if (data.autoHeight) data.list.parent().animate({ height: data.list.children().eq(data.active).outerHeight() }, { queue: false, duration: data.duration }); if (data.switcher) if (!data.infinite) data.switcher.removeClass(data.activeClass).eq(Math.ceil(data.active / data.slideElement)).addClass(data.activeClass); else { data.switcher.removeClass(data.activeClass).eq(data.active - data.count).addClass(data.activeClass); data.switcher.removeClass(data.activeClass).eq(data.active - data.count - data.count).addClass(data.activeClass); data.switcher.eq(data.active).addClass(data.activeClass) }
        }, _runTimer = function (data) { if (data._t) clearTimeout(data._t); data._t = setInterval(function () { if (data.infinite) data.flag = false; _toPrepare(data, true); if (typeof data.onChange == "function") data.onChange({ data: data }) }, data.autoRotation) }, _rePosition = function (data) {
            if (data.flexible && !data.direction) {
                _installDirections(data); if (data.oneSlide) data.elements.css({ width: data.holdWidth }); else if (data.elements.length * data.minWidth > data.holdWidth) {
                    data.elements.css({ width: Math.floor(data.holdWidth / Math.floor(data.holdWidth / data.minWidth)) }); if (data.elements.outerWidth(true) > Math.floor(data.holdWidth / Math.floor(data.holdWidth / data.minWidth))) data.elements.css({
                        width: Math.floor(data.holdWidth / Math.floor(data.holdWidth / data.minWidth)) - (data.elements.outerWidth(true) -
                            Math.floor(data.holdWidth / Math.floor(data.holdWidth / data.minWidth)))
                    })
                } else { data.active = 0; data.elements.css({ width: Math.floor(data.holdWidth / data.elements.length) }) }
            }
            _installDirections(data); if (!data.effect) { data.rew = data.count - data.wrapHolderW + 1; if (data.active > data.rew && !data.infinite) data.active = data.rew; if (data.active - data.count > data.rew && data.infinite) data.active = data.rew; data.list.css({ position: "relative" }).css(_dirAnimate(data)); if (data.autoHeight) data.list.parent().css({ height: data.list.children().eq(data.active).outerHeight() }) } else { data.rew = data.count; data.list.css({ opacity: 0 }).removeClass(data.activeClass).eq(data.active).addClass(data.activeClass).css({ opacity: 1 }).css("opacity", "auto"); if (data.autoHeight) data.list.parent().css({ height: data.list.eq(data.active).outerHeight() }) }
            if (data.switcher) if (!data.infinite) data.switcher.removeClass(data.activeClass).eq(Math.ceil(data.active / data.slideElement)).addClass(data.activeClass); else {
                data.switcher.removeClass(data.activeClass).eq(data.active - data.count).addClass(data.activeClass); data.switcher.removeClass(data.activeClass).eq(data.active -
                    data.count - data.count).addClass(data.activeClass); data.switcher.eq(data.active).addClass(data.activeClass)
            }
            if (data.disableBtn) _initDisableBtn(data); if (data.rew <= 0 && !data.effect) data.list.css({ left: 0 })
        }, _initTouchEvent = function (data) {
            var touchOnGallery = false; var startTouchPos, listPosNow, side, start; var span = data.list.parent().find("span.gallery-touch-holder"); if (span.length == 0) { span = $("<span></span>"); span.css({ position: "absolute", left: 0, top: 0, width: 9999, height: 9999, cursor: "pointer", zIndex: 9999, display: "none" }).addClass("gallery-touch-holder"); data.list.parent().append(span) }
            data.list.parent().css({ position: "relative" }); data.list.on("mousedown.gallery" + data.timeStamp + " touchstart.gallery" + data.timeStamp, function (e) { touchOnGallery = true; startTouchPos = e.originalEvent.touches ? e.originalEvent.touches[0].pageX : e.pageX; data.list.stop(); start = 0; listPosNow = data.list.position().left; if (e.type == "mousedown") e.preventDefault() }); $(document).on("mousemove.gallery" + data.timeStamp + " touchmove.gallery" + data.timeStamp, function (e) { if (touchOnGallery && Math.abs(startTouchPos - (e.originalEvent.touches ? e.originalEvent.touches[0].pageX : e.pageX)) > 10) { span.css({ display: "block" }); start = (e.originalEvent.touches ? e.originalEvent.touches[0].pageX : e.pageX) - startTouchPos; if (!data.effect) data.list.css({ left: listPosNow + start }); return false } }).on("mouseup.gallery" + data.timeStamp + " touchend.gallery" + data.timeStamp, function (e) {
                if (touchOnGallery && span.is(":visible")) {
                    span.css({ display: "none" }); if (!data.infinite) if (!data.effect) if (data.list.position().left > 0) { data.active = 0; _scrollElement(data) } else if (data.list.position().left < -data.woh * data.rew) { data.active = data.rew; _scrollElement(data) } else { data.active = Math.floor(data.list.position().left / -data.woh); if (start < 0) data.active += 1; _scrollElement(data) } else { if (start < 0) _toPrepare(data, true); if (start > 0) _toPrepare(data, false) } else {
                        if (data.list.position().left > -data.woh * data.count) data.list.css({ left: data.list.position().left - data.woh * data.count }); if (data.list.position().left < -data.woh * data.count * 2) data.list.css({
                            left: data.list.position().left +
                                data.woh * data.count
                        }); data.active = Math.floor(data.list.position().left / -data.woh); if (start < 0) data.active += 1; _scrollElement(data)
                    }
                    if (data.disableBtn) _initDisableBtn(data); if (typeof data.onChange == "function") data.onChange({ data: data }); if (data.autoRotation) _runTimer(data); touchOnGallery = false
                } else touchOnGallery = false
            })
        }, methods = {
            init: function (options) {
                return this.each(function (i) {
                    var $this = $(this); $this.data("gallery", jQuery.extend({}, defaults, options)); var data = $this.data("gallery"); data.aR = data.autoRotation; data.context = $this; data.timeStamp = (new Date).getTime() + i; data.list = data.context.find(data.elements); data.elements = data.list; if (data.elements.css("position") == "absolute" && data.autoDetect && !data.effect) data.effect = true; data.count = data.list.index(data.list.filter(":last")); if (!data.effect) data.list = data.list.parent(); data.switcher = data.context.find(data.switcher); if (data.switcher.length == 0) data.switcher = false; if (data.nextBtn) data.nextBtn = data.context.find(data.nextBtn); if (data.prevBtn) data.prevBtn = data.context.find(data.prevBtn); if (data.switcher) data.active = data.switcher.index(data.switcher.filter("." + data.activeClass + ":eq(0)")); else data.active = data.elements.index(data.elements.filter("." + data.activeClass + ":eq(0)")); if (data.active < 0) data.active = 0; data.last = data.active; if (data.oneSlide) data.flexible = true; if (data.flexible && !data.direction) data.minWidth = data.elements.outerWidth(true); _rePosition(data); if (data.flexible && !data.direction) $(window).on("resize.gallery" + data.timeStamp, function () { _rePosition(data) }); data.flag = true; if (data.infinite) { data.count++; data.active += data.count; data.list.append(data.elements.clone().addClass("gallery-clone")); data.list.append(data.elements.clone().addClass("gallery-clone")); data.list.css(_dirAnimate(data)); data.elements = data.list.children() }
                    if (data.rew <= 0 && !data.effect) data.list.css({ left: 0 }); else { if (data.list.length <= 1 && data.effect) return $this; if (data.nextBtn) _initEvent(data, data.nextBtn, true); if (data.prevBtn) _initEvent(data, data.prevBtn, false); if (data.switcher) _initEventSwitcher(data); if (data.autoRotation) _runTimer(data); if (data.touch) _initTouchEvent(data); if (typeof data.onChange == "function") data.onChange({ data: data }) }
                })
            }, option: function (name, set) { if (set) return this.each(function () { var data = $(this).data("gallery"); if (data) data[name] = set }); else { var ar = []; this.each(function () { var data = $(this).data("gallery"); if (data) ar.push(data[name]) }); if (ar.length > 1) return ar; else return ar[0] } }, destroy: function () { return this.each(function () { var $this = $(this), data = $this.data("gallery"); if (data) { if (data._t) clearTimeout(data._t); data.context.find("*").off(".gallery" + data.timeStamp); $(window).off(".gallery" + data.timeStamp); $(document).off(".gallery" + data.timeStamp); data.elements.removeAttr("style"); if (data.infinite) data.elements.filter(".gallery-clone").remove(); data.list.removeAttr("style"); $this.removeData("gallery") } }) }, rePosition: function () { return this.each(function () { var $this = $(this), data = $this.data("gallery"); _rePosition(data) }) }, stop: function () { return this.each(function () { var $this = $(this), data = $this.data("gallery"); data.aR = data.autoRotation; data.autoRotation = false; if (data._t) clearTimeout(data._t) }) }, play: function (time) { return this.each(function () { var $this = $(this), data = $this.data("gallery"); if (data._t) clearTimeout(data._t); data.autoRotation = time ? time : data.aR; if (data.autoRotation) _runTimer(data) }) }, next: function (element) { return this.each(function () { var $this = $(this), data = $this.data("gallery"); if (element != "undefined" && element > -1) { data.active = element; if (data.disableBtn) _initDisableBtn(data); if (!data.effect) _scrollElement(data); else _fadeElement(data) } else if (data.flag) { if (data.infinite) data.flag = false; if (data._t) clearTimeout(data._t); _toPrepare(data, true); if (data.autoRotation) _runTimer(data); if (typeof data.onChange == "function") data.onChange({ data: data }) } }) }, prev: function () { return this.each(function () { var $this = $(this), data = $this.data("gallery"); if (data.flag) { if (data.infinite) data.flag = false; if (data._t) clearTimeout(data._t); _toPrepare(data, false); if (data.autoRotation) _runTimer(data); if (typeof data.onChange == "function") data.onChange({ data: data }) } }) }
        }, defaults = { infinite: false, activeClass: "active", duration: 300, slideElement: 1, autoRotation: false, effect: false, elements: "ul:eq(0) > li", switcher: ".switcher > li", disableBtn: false, nextBtn: "a.link-next, a.btn-next, .next", prevBtn: "a.link-prev, a.btn-prev, .prev", circle: true, direction: false, event: "click", autoHeight: false, flexible: false, oneSlide: false, autoDetect: true, touch: true, onChange: null }; $.fn.gallery = function (method) { if (methods[method]) return methods[method].apply(this, Array.prototype.slice.call(arguments, 1)); else if (typeof method === "object" || !method) return methods.init.apply(this, arguments); else $.error("Method " + method + " does not exist on jQuery.gallery") }
    })(jQuery);
    /*!
     * jQuery Cookie Plugin v1.4.1
     * https://github.com/carhartl/jquery-cookie
     *
     * Copyright 2006, 2014 Klaus Hartl
     * Released under the MIT license
     */
    (function (factory) { if (typeof define === 'function' && define.amd) { define(['jquery'], factory); } else if (typeof exports === 'object') { module.exports = factory(require('jquery')); } else { factory(jQuery); } }(function ($) {
        var pluses = /\+/g; function encode(s) { return config.raw ? s : encodeURIComponent(s); }
        function decode(s) { return config.raw ? s : decodeURIComponent(s); }
        function stringifyCookieValue(value) { return encode(config.json ? JSON.stringify(value) : String(value)); }
        function parseCookieValue(s) {
            if (s.indexOf('"') === 0) { s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\'); }
            try { s = decodeURIComponent(s.replace(pluses, ' ')); return config.json ? JSON.parse(s) : s; } catch (e) { }
        }
        function read(s, converter) { var value = config.raw ? s : parseCookieValue(s); return $.isFunction(converter) ? converter(value) : value; }
        var config = $.cookie = function (key, value, options) {
            if (arguments.length > 1 && !$.isFunction(value)) {
                options = $.extend({}, config.defaults, options); if (typeof options.expires === 'number') { var days = options.expires, t = options.expires = new Date(); t.setMilliseconds(t.getMilliseconds() + days * 864e+5); }
                return (document.cookie = [encode(key), '=', stringifyCookieValue(value), options.expires ? '; expires=' + options.expires.toUTCString() : '', options.path ? '; path=' + options.path : '', options.domain ? '; domain=' + options.domain : '', options.secure ? '; secure' : ''].join(''));
            }
            var result = key ? undefined : {}, cookies = document.cookie ? document.cookie.split('; ') : [], i = 0, l = cookies.length; for (; i < l; i++) {
                var parts = cookies[i].split('='), name = decode(parts.shift()), cookie = parts.join('='); if (key === name) { result = read(cookie, value); break; }
                if (!key && (cookie = read(cookie)) !== undefined) { result[name] = cookie; }
            }
            return result;
        }; config.defaults = {}; $.removeCookie = function (key, options) { $.cookie(key, '', $.extend({}, options, { expires: -1 })); return !$.cookie(key); };
    })); jQuery.fn.customForm = jQuery.customForm = function (_options) {
        var _this = this; var methods = { destroy: function () { var elements; if (typeof this === "function") elements = $("select, input:radio, input:checkbox"); else elements = this.add(this.find("select, input:radio, input:checkbox")); elements.each(function () { var data = $(this).data("customForm"); if (data) { $(this).removeClass("outtaHere"); if (data["events"]) data["events"].off(".customForm"); if (data["create"]) data["create"].remove(); if (data["resizeElement"]) data.resizeElement = false; $(this).off(".customForm") } }) }, refresh: function () { if (typeof this === "function") $("select, input:radio, input:checkbox").trigger("refresh"); else this.trigger("refresh") } }; if (typeof _options === "object" || !_options) { if (typeof _this == "function") _this = $(document); var options = jQuery.extend(true, { select: { elements: "select.customSelect", structure: '<div class="selectArea"><a tabindex="-1" href="#" class="selectButton"><span></span><span class="right">&nbsp;</span></a><div class="disabled"></div></div>', text: "span:first", btn: ".selectButton", optStructure: '<div class="selectOptions"><ul></ul></div>', maxHeight: false, topClass: "position-top", optList: "ul", nativeDrop: false }, radio: { elements: "input.customRadio", structure: "<div></div>", defaultArea: "radioArea", checked: "radioAreaChecked" }, checkbox: { elements: "input.customCheckbox", structure: "<div></div>", defaultArea: "checkboxArea", checked: "checkboxAreaChecked" }, mobile: /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od|ad)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent || navigator.vendor || window.opera) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test((navigator.userAgent || navigator.vendor || window.opera).substr(0, 4)), disabled: "disabled", hoverClass: "hover" }, _options); return _this.each(function () { var hold = jQuery(this); var reset = jQuery(); if (this !== document) reset = hold.find("input:reset, button[type=reset]"); initSelect(hold.find(options.select.elements), hold, reset); initRadio(hold.find(options.radio.elements), hold, reset); initCheckbox(hold.find(options.checkbox.elements), hold, reset) }) } else if (methods[_options]) methods[_options].apply(this); function initSelect(elements, form, reset) {
            elements.not(".outtaHere").each(function () {
                var select = $(this); var replaced = jQuery(options.select.structure); var selectText = replaced.find(options.select.text); var selectBtn = replaced.find(options.select.btn); var selectDisabled = replaced.find("." + options.disabled).hide(); var optHolder = jQuery(options.select.optStructure); var optList = optHolder.find(options.select.optList); var html = ""; var optTimer, time; if (options.mobile) select.addClass("mobile"); function createStructure() {
                    if (select.prop("disabled")) { replaced.addClass(options.disabled); selectDisabled.show() } else { replaced.removeClass(options.disabled); selectDisabled.hide() }
                    html = ""; select.find("option").each(function () { var selOpt = jQuery(this); if (selOpt.prop("selected") && !select.data("placeholder")) selectText.html(selOpt.html()).addClass(selOpt.attr("class")); html += '<li data-value="' + selOpt.val() + '" class="' + (selOpt.attr("class") ? selOpt.attr("class") : "") + " " + (selOpt.prop("selected") ? "selected" : "") + '">' + (selOpt.prop("disabled") ? "<span>" : '<a href="#">') + selOpt.html() + (selOpt.prop("disabled") ? "</span>" : "</a>") + "</li>" }); if (select.data("placeholder")) { selectText.html(select.data("placeholder")); replaced.addClass("placeholder"); select.val("-") }
                    optList.append(html).find("a").on('click', function () { replaced.removeClass("placeholder"); select.val(jQuery(this).parent().data("value").toString()); select.change(); replaced.removeClass(options.hoverClass); optHolder.css({ left: -9999, top: -9999 }); return false }); if (select.data("customForm") !== undefined && select.data("customForm")["resizeElement"]) select.data("customForm").resizeElement()
                }
                createStructure(); replaced.width(select.outerWidth()); replaced.insertBefore(select); replaced.addClass(select.attr("class")); optHolder.css({ width: select.outerWidth(), position: "absolute", left: -9999, top: -9999 }); optHolder.addClass(select.attr("class")); jQuery(document.body).append(optHolder); select.on("refresh", function () { optList.empty(); createStructure() }); replaced.hover(function () { if (optTimer) clearTimeout(optTimer) }, function () { optTimer = setTimeout(function () { replaced.removeClass(options.hoverClass); optHolder.css({ left: -9999, top: -9999 }) }, 200) }); optHolder.hover(function () { if (optTimer) clearTimeout(optTimer) }, function () { optTimer = setTimeout(function () { replaced.removeClass(options.hoverClass); optHolder.css({ left: -9999, top: -9999 }) }, 200) }); if (options.select.maxHeight && optHolder.children().height() > options.select.maxHeight) optHolder.children().css({ height: options.select.maxHeight, overflow: "auto" }); if (options.mobile) $(document).on("touchstart.customForm", function (e) { if (!($(e.target).parents().index(optHolder) != -1 || $(e.target).index(optHolder) != -1)) { replaced.removeClass(options.hoverClass); optHolder.css({ left: -9999, top: -9999 }) } }); selectBtn.on('click', function () { if (optHolder.offset().left > 0) { replaced.removeClass(options.hoverClass); optHolder.css({ left: -9999, top: -9999 }) } else if (!(options.select.nativeDrop && options.mobile)) openDrop(); return false }); reset.on('click', function () { setTimeout(function () { select.find("option").each(function (i) { var selOpt = jQuery(this); if (selOpt.val() == select.val()) { selectText.html(selOpt.html()); optList.find("li").removeClass("selected"); optList.find("li").eq(i).addClass("selected") } }) }, 10) }); var openDrop = function () {
                    replaced.addClass(options.hoverClass); select.attr("style", "height: 0 !important;").removeClass("outtaHere"); optHolder.css({ width: select.outerWidth(), top: -9999 }); select.addClass("outtaHere").removeAttr("style"); if (options.select.maxHeight && optHolder.children().height() > options.select.maxHeight) optHolder.children().css({ height: options.select.maxHeight, overflow: "auto" }); if ($(window).height() +
                        $(window).scrollTop() > optHolder.outerHeight(true) + replaced.offset().top + replaced.outerHeight()) { optHolder.removeClass(options.select.topClass).css({ top: replaced.offset().top + replaced.outerHeight(), left: replaced.offset().left }); replaced.removeClass(options.select.topClass) } else { optHolder.addClass(options.select.topClass).css({ top: replaced.offset().top - optHolder.outerHeight(true), left: replaced.offset().left }); replaced.addClass(options.select.topClass) }
                    select.focus(); changeSelect()
                }; var changeSelect = function (e) {
                    e = e ? e : {}; select.find("option").each(function (i) { var selOpt = jQuery(this); if (selOpt.val() == select.val()) { selectText.html(selOpt.html()); selectText.removeClass().addClass(selOpt.attr("class") ? selOpt.attr("class") : ""); optList.find("li").removeClass("selected"); optList.find("li").eq(i).addClass("selected") } }); if (optList.css("overflow") != "hidden") {
                        if (optList.scrollTop() > optList.find("li.selected").position().top + optList.scrollTop()) optList.scrollTop(optList.find("li.selected").position().top +
                            optList.scrollTop()); if (optList.scrollTop() + optList.height() < optList.find("li.selected").position().top + optList.find("li.selected").outerHeight() + optList.scrollTop()) optList.scrollTop(optList.find("li.selected").position().top + optList.scrollTop() - optList.height() + optList.find("li.selected").outerHeight())
                    }
                    if ((e.keyCode == 13 || e.keyCode == 27) && replaced.hasClass(options.hoverClass)) { replaced.removeClass(options.hoverClass); optHolder.css({ left: -9999, top: -9999 }) } else if (e.keyCode == 13 && !replaced.hasClass(options.hoverClass)) openDrop()
                }; select.on("change.customForm", changeSelect); select.get(0).onkeypress = changeSelect; select.on("focus.customForm", function () { replaced.addClass("focus"); select.attr("size", 4) }).on("blur.customForm", function () { replaced.removeClass("focus"); select.removeAttr("size") }); select.data("customForm", { "resizeElement": function () { if (time) clearTimeout(time); time = setTimeout(function () { var w = 0; select.removeClass("outtaHere"); $("div.selectArea.customSelect").css({ display: "none" }); w = Math.floor(select.outerWidth()); select.addClass("outtaHere"); $("div.selectArea.customSelect").css({ display: "block" }); replaced.width(w) }, 300) }, "create": replaced.add(optHolder) }); $(window).on("resize.customForm", function () { if (select.data("customForm")["resizeElement"]) select.data("customForm").resizeElement() })
            }).addClass("outtaHere")
        }
        function initRadio(elements, form, reset) {
            elements.each(function () {
                var radio = $(this); if (!radio.hasClass("outtaHere") && radio.is(":radio")) {
                    radio.data("customRadio", { radio: radio, name: radio.attr("name"), label: $("label[for=" + radio.attr("id") + "]").length ? $("label[for=" + radio.attr("id") + "]") : radio.parents("label"), replaced: jQuery(options.radio.structure, { "class": radio.attr("class") }) }); radio.data("customRadio").replaced.addClass(radio.attr("class")); var data = radio.data("customRadio"); if (radio.is(":disabled")) { data.replaced.addClass(options.disabled); if (radio.is(":checked")) data.replaced.addClass("disabledChecked") } else if (radio.is(":checked")) { data.replaced.addClass(options.radio.checked); data.label.addClass("checked") } else { data.replaced.addClass(options.radio.defaultArea); data.label.removeClass("checked") }
                    data.replaced.on('click', function () { if (jQuery(this).hasClass(options.radio.defaultArea)) { radio.change(); radio.prop("checked", true); changeRadio(data) } }); reset.on('click', function () { setTimeout(function () { if (radio.is(":checked")) data.replaced.removeClass(options.radio.defaultArea + " " + options.radio.checked).addClass(options.radio.checked); else data.replaced.removeClass(options.radio.defaultArea + " " + options.radio.checked).addClass(options.radio.defaultArea) }, 10) }); radio.on("refresh", function () { if (radio.is(":checked")) { data.replaced.removeClass(options.radio.defaultArea + " " + options.radio.checked).addClass(options.radio.checked); data.label.addClass("checked") } else { data.replaced.removeClass(options.radio.defaultArea + " " + options.radio.checked).addClass(options.radio.defaultArea); data.label.removeClass("checked") } }); radio.on("click.customForm", function () { changeRadio(data) }); radio.on("focus.customForm", function () { data.replaced.addClass("focus") }).on("blur.customForm", function () { data.replaced.removeClass("focus") }); data.replaced.insertBefore(radio); radio.addClass("outtaHere"); radio.data("customForm", { "create": data.replaced })
                }
            })
        }
        function changeRadio(data) { jQuery('input:radio[name="' + data.name + '"]').not(data.radio).each(function () { var _data = $(this).data("customRadio"); if (_data.replaced && !jQuery(this).is(":disabled")) { _data.replaced.removeClass(options.radio.defaultArea + " " + options.radio.checked).addClass(options.radio.defaultArea); _data.label.removeClass("checked") } }); data.replaced.removeClass(options.radio.defaultArea + " " + options.radio.checked).addClass(options.radio.checked); data.label.addClass("checked"); data.radio.trigger("change") }
        function initCheckbox(elements, form, reset) {
            elements.each(function () {
                var checkbox = $(this); if (!checkbox.hasClass("outtaHere") && checkbox.is(":checkbox")) {
                    checkbox.data("customCheckbox", { checkbox: checkbox, label: $("label[for=" + checkbox.attr("id") + "]").length ? $("label[for=" + checkbox.attr("id") + "]") : checkbox.parents("label"), replaced: jQuery(options.checkbox.structure, { "class": checkbox.attr("class") }) }); checkbox.data("customCheckbox").replaced.addClass(checkbox.attr("class")); var data = checkbox.data("customCheckbox"); if (checkbox.is(":disabled")) { data.replaced.addClass(options.disabled); if (checkbox.is(":checked")) data.replaced.addClass("disabledChecked") } else if (checkbox.is(":checked")) { data.replaced.addClass(options.checkbox.checked); data.label.addClass("checked") } else { data.replaced.addClass(options.checkbox.defaultArea); data.label.removeClass("checked") }
                    data.replaced.on('click', function () { if (!data.replaced.hasClass("disabled") && !data.replaced.parents("label").length) { if (checkbox.is(":checked")) checkbox.prop("checked", false); else checkbox.prop("checked", true); changeCheckbox(data) } }); reset.on('click', function () { setTimeout(function () { changeCheckbox(data) }, 10) }); checkbox.on("refresh", function () { if (checkbox.is(":checked")) { data.replaced.removeClass(options.checkbox.defaultArea + " " + options.checkbox.defaultArea).addClass(options.checkbox.checked); data.label.addClass("checked") } else { data.replaced.removeClass(options.checkbox.defaultArea + " " + options.checkbox.checked).addClass(options.checkbox.defaultArea); data.label.removeClass("checked") } }); checkbox.on("click.customForm", function () { changeCheckbox(data) }); checkbox.on("focus.customForm", function () { data.replaced.addClass("focus") }).on("blur.customForm", function () { data.replaced.removeClass("focus") }); data.replaced.insertBefore(checkbox); checkbox.addClass("outtaHere"); checkbox.data("customForm", { "create": data.replaced, "events": data.replaced.parents("label") })
                }
            })
        }
        function changeCheckbox(data) {
            if (data.checkbox.is(":checked")) { data.replaced.removeClass(options.checkbox.defaultArea + " " + options.checkbox.defaultArea).addClass(options.checkbox.checked); data.label.addClass("checked") } else { data.replaced.removeClass(options.checkbox.defaultArea + " " + options.checkbox.checked).addClass(options.checkbox.defaultArea); data.label.removeClass("checked") }
            data.checkbox.trigger("change")
        }
    };; (function ($) {
        var _condition = function (id, options) { if ($.simplebox.modal) { var data = $.simplebox.modal.data("simplebox"); data.onClose($.simplebox.modal); $.simplebox.modal.fadeOut(data.duration, function () { $.simplebox.modal.css({ left: "-9999px", top: "-9999px" }).show(); data.afterClose($.simplebox.modal); $.simplebox.modal.removeData("simplebox"); $.simplebox.modal = false; _toPrepare(id, options) }) } else _toPrepare(id, options) }, _calcWinWidth = function () { return $(document).width() > $("body").width() ? $(document).width() : jQuery("body").width() }, _toPrepare = function (id, options) { $.simplebox.modal = $(id); $.simplebox.modal.data("simplebox", options); var data = $.simplebox.modal.data("simplebox"); data.btnClose = $.simplebox.modal.find(data.linkClose); var popupTop = $(window).scrollTop() + $(window).height() / 2 - $.simplebox.modal.outerHeight(true) / 2; if ($(window).scrollTop() > popupTop) popupTop = $(window).scrollTop(); if (popupTop + $.simplebox.modal.outerHeight(true) > $(document).height()) popupTop = $(document).height() - $.simplebox.modal.outerHeight(true); if (popupTop < 0) popupTop = 0; if (!data.positionFrom) $.simplebox.modal.css({ zIndex: 1E3, top: data.fixed ? 0 : popupTop, left: data.fixed ? 0 : _calcWinWidth() / 2 - $.simplebox.modal.outerWidth(true) / 2 }).hide(); else $.simplebox.modal.css({ zIndex: 1E3, top: $(data.positionFrom).offset().top + $(data.positionFrom).outerHeight(true), left: $(data.positionFrom).offset().left }).hide(); _initAnimate(data); _closeEvent(data, data.btnClose); if (data.overlay.closeClick) _closeEvent(data, $.simplebox.overlay) }, _initAnimate = function (data) { data.onOpen($.simplebox.modal); if (data.overlay) $.simplebox.overlay.html(data.overlay.content).css({ background: data.overlay.color, opacity: data.overlay.opacity }).fadeIn(data.duration, function () { $.simplebox.modal.fadeIn(data.duration, function () { $.simplebox.busy = false; data.afterOpen($.simplebox.modal); if ($(window).scrollTop() > $.simplebox.modal.offset().top && !data.fixed) $("html, body").animate({ scrollTop: $.simplebox.modal.offset().top }, 500) }) }); else { $.simplebox.overlay.fadeOut(data.duration); $.simplebox.modal.fadeIn(data.duration, function () { $.simplebox.busy = false; data.afterOpen($.simplebox.modal); if ($(window).scrollTop() > $.simplebox.modal.offset().top) $("html, body").animate({ scrollTop: $.simplebox.modal.offset().top }, 500) }) } }, _closeEvent = function (data, element) {
            element.off("click.simplebox").on("click.simplebox", function () {
                if (!$.simplebox.busy) { $.simplebox.busy = true; data.onClose($.simplebox.modal); $.simplebox.modal.fadeOut(data.duration, function () { $.simplebox.modal.css({ left: "-9999px", top: "-9999px" }).show(); $.simplebox.overlay.fadeOut(data.duration, function () { data.afterClose($.simplebox.modal); $.simplebox.modal.removeData("simplebox"); $.simplebox.modal = false; $.simplebox.busy = false }) }) }
                return false
            })
        }, _error = function (text) { if (typeof console == "object") console.warn(text) }, methods = {
            init: function (options) {
                $(this).off("click.simplebox").on("click.simplebox", function () {
                    var data = $(this).data("simplebox"); var id = $(this).attr("href") ? $(this).attr("href") : $(this).data("href"); if ($(id).length == 0) { _error('ID "' + id + '" does not exist on document'); return false }
                    if (!$(this).hasClass(defaults.disableClass) && !$.simplebox.busy) { $.simplebox.busy = true; _condition(id, jQuery.extend(true, {}, defaults, options)) }
                    return false
                }); return this
            }, option: function (name, set) { if (set) return this.each(function () { var data = $(this).data("simplebox"); if (data) data[name] = set }); else { var ar = []; this.each(function () { var data = $(this).data("simplebox"); if (data) ar.push(data[name]) }); if (ar.length > 1) return ar; else return ar[0] } }
        }, defaults = { duration: 300, linkClose: ".close, .btn-close", disableClass: "disabled", overlay: { box: "simplebox-overlay", color: "black", closeClick: true, opacity: .3, content: "" }, positionFrom: false, fixed: false, onOpen: function () { }, afterOpen: function () { }, onClose: function () { }, afterClose: function () { } }; $.fn.simplebox = function (method) { if (methods[method]) return methods[method].apply(this, Array.prototype.slice.call(arguments, 1)); else if (typeof method === "object" || !method) return methods.init.apply(this, arguments); else _error("Method " + method + " does not exist on jQuery.simplebox") }; $.simplebox = function (id, options) { if (!$.simplebox.busy) { $.simplebox.busy = true; _condition(id, jQuery.extend(true, {}, defaults, options)) } }; $.simplebox.init = function () {
            if (!$.simplebox.overlay) { $.simplebox.overlay = jQuery('<div class="' + defaults.overlay.box + '"></div>'); jQuery("body").append($.simplebox.overlay); $.simplebox.overlay.css({ position: "fixed", zIndex: 999, left: 0, top: 0, width: "100%", height: "100%", background: defaults.overlay.color, opacity: defaults.overlay.opacity }).hide() }
            $(document).off("keypress.simplebox").on("keypress.simplebox", function (e) { if ($.simplebox.modal && $.simplebox.modal.is(":visible") && e.keyCode == 27) $.simplebox.close() }); $(window).on("resize.simplebox", function () { if ($.simplebox.modal && $.simplebox.modal.is(":visible")) { var data = $.simplebox.modal.data("simplebox"); if (!data.positionFrom) $.simplebox.modal.animate({ left: _calcWinWidth() / 2 - $.simplebox.modal.outerWidth(true) / 2 }, { queue: false, duration: $.simplebox.modal.data("simplebox").duration }); else $.simplebox.modal.animate({ top: $(data.positionFrom).offset().top + $(data.positionFrom).outerHeight(true), left: $(data.positionFrom).offset().left }, { queue: false, duration: $.simplebox.modal.data("simplebox").duration }) } })
        }; $.simplebox.close = function () { if ($.simplebox.modal && !$.simplebox.busy) { var data = $.simplebox.modal.data("simplebox"); $.simplebox.busy = true; data.onClose($.simplebox.modal); $.simplebox.modal.fadeOut(data.duration, function () { $.simplebox.modal.css({ left: "-9999px", top: "-9999px" }).show(); if ($.simplebox.overlay) $.simplebox.overlay.fadeOut(data.duration, function () { data.afterClose($.simplebox.modal); $.simplebox.modal.removeData("simplebox"); $.simplebox.modal = false; $.simplebox.busy = false }); else { data.afterClose($.simplebox.modal); $.simplebox.modal.removeData("simplebox"); $.simplebox.modal = false; $.simplebox.busy = false } }) } }; $(document).ready(function () { $.simplebox.init() })
    })(jQuery); jQuery(document).ready(function () {
        setTimeout(() => { const currentUrl = window.location.href; const xobmenId = parseInt(currentUrl.split('xobmen=')[1]?.split('#')[0]); if (xobmenId) $('.select-box_item-box').find('div[data-id="' + xobmenId + '"]').click(); }, 1); $('#choice_name .select-box_label').attr('autocomplete', 'off'); $("#choice_name .select-box_label").on('focus', function () { $(".select-box_item-box").slideDown(); $(".suggestions_btn").prop('disabled', true); $("#choice_name .select-box_label").removeClass('wpcf7-not-valid'); }); $("#choice_name .select-box_label").on('blur', function () { $(".select-box_item-box").delay(100).slideUp(); $(".suggestions_btn").prop('disabled', false); $("#choice_name .select-box_label").addClass('wpcf7-not-valid'); var value = $(this).val().toLowerCase(); $("#choice_name .select-box_item-box_item").each(function () { if ($(this).text().toLowerCase() == value) { $("#choice_name .select-box_label").removeClass('wpcf7-not-valid'); } }); }); $("#choice_name .select-box_item-box_item").on('click', function () { $text = $(this).text(); $('#choice_name .select-box_label').val($text); $('#selected-exchanger').text($text); $(".suggestions_btn").prop('disabled', false); $("#choice_name .select-box_label").removeClass('wpcf7-not-valid'); $('.xobmen_id').val($(this).data("id")); $("#choice_name .select-box_label").trigger('selectExchanger.cashback'); }); $("#choice_name .select-box_label").on('keyup click', function () {
            var value = $(this).val().toLowerCase(); var index = 0; $("#choice_name .select-box_item-box_item").each(function () {
                if ($(this).text().toLowerCase().search(value) > -1) {
                    $(this).show(); if (!$(this).find('span').hasClass('is_cashback')) { $(this).hasClass('not_cashback') ? $(this).append('<span class="is_cashback">кэшбек не поддерживается</span>') : null; }
                    index++;
                } else { $(this).hide(); }
            }); if (index == 0) { element = $('.info_cash').length; if (!element) { $('.select-box_item-box').append('<div class="info_cash">Обменник не найден. Попробуйте поискать название обменника на странице <a href="/exchanger/"><strong>"Обменники"</strong></a>.</div>'); $("#choice_name .select-box_label").addClass('wpcf7-not-valid'); $("#choice_name .select-box_item-box").addClass('error'); $(".suggestions_btn").prop('disabled', true); } } else { $("div.info_cash").remove(); $("#choice_name .select-box_label").removeClass('wpcf7-not-valid'); $("#choice_name .select-box_item-box").removeClass('error'); $(".suggestions_btn").prop('disabled', false); }
        }); if ($("input").is(".data_in")) { $('.data_in').mask('99/99/9999 99:99'); }
        OpenBox({ wrap: '.user-menu ', link: '.btn-user', box: '.dropdown', openClass: 'open-drop' }); OpenBox({ wrap: '.wrap-tooltip ', link: '.btn-info', box: '.tooltip', openClass: 'open' }); OpenBox({ wrap: '#nav ', link: '.toogle-menu, .nav-overlay ', box: '.menu-holder', openClass: 'open-menu' }); $('.aside-tabs, .tabs-area').tabs(); openClose(); openItem(); $('.gallery-news').gallery({ flexible: true, disableBtn: 'disabled', switcher: "ul.switcher > li" }); jQuery('form').customForm(); function isMobile() {
            if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(navigator.userAgent)) { return true; } else if (navigator.userAgent.toLowerCase().match(/(ipad|iphone)/)) { return true; }
            return false;
        }
        if (isMobile()) { $('#exchangesTable .tooltip-small').click(function (e) { e.stopPropagation(); }); }
        var tools = $('#exchangesTable .tooltip-small:not(.tooltipstered)'); if ($(tools).length) { $(tools).tooltipster({ theme: 'tooltipster-light', maxWidth: '330', onlyOne: true, trigger: isMobile() ? 'click' : 'hover', contentAsHTML: true, }); }
        var tools2 = $('.tooltip-small:not(.tooltipstered)'); if ($(tools2).length > 0) { $(tools2).tooltipster({ theme: 'tooltipster-light', maxWidth: '330', contentAsHTML: true, }); }
        $('.simplebox').simplebox({ overlay: { color: 'black', opacity: 0.4 } }); openComment();
    }); jQuery(document).ready(function () { }); $(".exchanger_tab").on('click', function () {
        $(".exchanger_tab").removeClass('active'); if ($(this).hasClass('active')) { $(this).removeClass('active'); } else { $(this).addClass('active'); }
        $index_tab = $(this).index(); if ($index_tab == 0) { $('.wrap-review').css('display', 'block'); $('#create-reviews').css('display', 'block'); $('.resrv_box').css('display', 'none'); $('.add_review').show(); $('#add_review_form').css('display', 'none'); } else { $('.wrap-review').css('display', 'none'); $('#create-reviews').css('display', 'none'); $('.resrv_box').css('display', 'block'); $('#add_review_form').css('display', 'none'); }
    }); $(".add_review").on('click', function () { $(this).hide(); $('#add_review_form').slideDown(); }); if ($("input").is(".date_sel")) { setTimeout(function () { var is_safari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); if (is_safari) { $('.date_sel').mask('99.99.9999'); } else { $('.date_sel').attr('type', 'date'); } }, 400); }
    $(".tabset-nav li").on('click', function () { if ($(this).index() == 1) { $('.tab_click').css('display', 'block') } else { $('.tab_click').css('display', 'none') } }); $(".text_suggestions").on('focus', function () { $('.capxh_box').css('height', '78px'); }); $(".text_suggestions").on('focusout', function () { $('.capxh_box').css('height', '78px'); if ($(".text_suggestions").val()) { $('.capxh_box').css('height', '78px'); } else { $('.capxh_box').css('height', '0'); } }); function windowSize() { if ($(window).width() <= '950') { $('#sidebar .wrap-open').addClass("open"); $('#sidebar ul.bar-data.left-table.box-open').css('display', 'block'); $("#sidebar .desc .exchange-btn input").on('input keyup', function (e) { $('#sidebar ul.bar-data-table').animate({ scrollTop: 0 }, 300); }); $(document).mouseup(function (e) { var div = $("#sidebar .desc .exchange-btn input"); if (!div.is(e.target) && div.has(e.target).length === 0) { if (e.target.dataset['vlt'] || e.target.classList.contains('clickMoveAllCategory')) return; $('.container-exchange.desc').css('display', 'none'); $(".min_close").removeClass('active'); $("#sidebar .exchange-btn").removeClass('fixed'); $('#sidebar .bar-data-table>li').removeClass('active_ib'); $('html, body').removeClass('stopscroll'); } }); setTimeout(function () { var first = $('.first input').attr('placeholder'); var change = $('.change input').attr('placeholder'); $('.change_ib').text(change); $('.first_ib').text(first); }, 300); $(".changeValute").on('click', function () { var name = $(this).find('.data-name').text(); $('.change_ib').text(name); }); $(".firstValute").on('click', function () { var name = $(this).find('.data-name').text(); $('.first_ib').text(name); }); $("#sidebar .mob .exchange-btn").on('click', function () { $('#sidebar .bar-data-table>li').removeClass('active_ib'); var type = $(this).is('.first') ? 'first' : ($(this).is('.change') ? 'change' : false); if (false !== type) { var in_this = $("#sidebar .desc .exchange-btn." + type + " input").eq(0); $('.container-exchange.desc').css('display', 'block'); in_this.parent().addClass('fixed'); in_this.parent().find('.min_close').addClass('active'); $('#sidebar .bar-data-table>li.' + type + '-valute').addClass('active_ib'); $('html, body').animate({ scrollTop: 0 }, 300); $('html, body').addClass('stopscroll'); } }); $('#sidebar .bar-data li[data-hide="true"]').css("display", "list-item"); } }
    $(document).on('touchmove', false); $(window).on('load', windowSize); $(window).on('resize', windowSize); function OpenBox(obj) {
        $(obj.wrap).each(function () {
            var hold = $(this); var link = hold.find(obj.link); var box = hold.find(obj.box); var close = hold.find(obj.close); link.on('click', function () {
                if (!hold.hasClass(obj.openClass)) { hold.addClass(obj.openClass); } else { hold.removeClass(obj.openClass); }
                $(hold).trigger('OpenBox:click'); return false;
            }); jQuery(document).on('touchstart mousedown', function (e) { if (!(jQuery(e.target).parents().index(hold) != -1 || jQuery(e.target).index(hold) != -1)) { hold.removeClass(obj.openClass); $(hold).trigger('OpenBox:touchstart'); } }); close.on('click', function () { hold.removeClass(obj.openClass); $(hold).trigger('OpenBox:close'); return false; });
        });
    }
    function openItem() {
        $('.review-item , .item-question').each(function () {
            var boxed = $(this); var link = boxed.find('.btn-open , .head-question'); var boxOpen = boxed.find('.box-open'); if (!(boxOpen.css('display') == 'block')) boxOpen.css('display', 'none'); link.off('click'); link.on('click', function () {
                var checkerClass = $(this).attr('class'); if (checkerClass.split(' ')[1]) { checkerClass = checkerClass.split(' ')[checkerClass.split(' ').length - 1]; }
                $('.' + checkerClass).each(function () { if ($(this).parent().hasClass('open')) { $(this).parent().find('.box-open').slideUp(300, function () { $(this).parent().removeClass('open'); }); } }); if (!boxed.hasClass('open')) { boxed.addClass('open'); boxOpen.slideDown(300); } else { boxOpen.slideUp(300, function () { boxed.removeClass('open'); }); }
                return false;
            });
        });
    }
    function openComment() {
        $('.box-review , .review-section').each(function () {
            var boxed = $(this); var link = boxed.find('.link-comment'); var boxOpen = boxed.find('.form-open'); if (!(boxOpen.css('display') == 'block')) boxOpen.css('display', 'none'); link.off('click'); link.on('click', function () {
                var checkerClass = $(this).attr('class'); if (checkerClass.split(' ')[1]) { checkerClass = checkerClass.split(' ')[checkerClass.split(' ').length - 1]; }
                $('.' + checkerClass).each(function () { if ($(this).parent().hasClass('open-comment')) { $(this).parent().find('.form-open').slideUp(300, function () { $(this).parent().removeClass('open-comment'); }); } }); if (!boxed.hasClass('open-comment')) { boxed.addClass('open-comment'); boxOpen.slideDown(300); } else { boxOpen.slideUp(300, function () { boxed.removeClass('open-comment'); }); }
                return false;
            });
        });
    }
    function openClose() { if (typeof startUploadGroupsBlock === 'function') { startUploadGroupsBlock(); } else { console.log('Function `startUploadGroupsBlock` did not found.'); } }
    (function () {
        $(".close_head-banner").on('click', function (e) { var index = $(e.target).closest('.head-banner').addClass('close').hasClass('blue'); localStorage['banner' + $(e.target).data('index')] = 1; }); var arr_banners = []; if (!localStorage['banner1']) { arr_banners.push([0]); }
        if (!localStorage['banner2']) { arr_banners.push([1]); }
        if (!localStorage['banner3']) { arr_banners.push([2]); }
        var index = arr_banners[Math.floor(Math.random() * arr_banners.length)]; $('.head-banner').addClass('close').eq(index).removeClass('close');
    })(); function getPasteEvent() { var e = document.createElement("input"), t = "onpaste"; return e.setAttribute(t, ""), "function" == typeof e[t] ? "paste" : "input" }
    var caretTimeoutId, pasteEventName = getPasteEvent() + ".mask", ua = navigator.userAgent, iPhone = /iphone/i.test(ua), android = /android/i.test(ua); $.mask = { definitions: { 9: "[0-9]", a: "[A-Za-z]", "*": "[A-Za-z0-9]" }, dataName: "rawMaskFn", placeholder: "_" }, $.fn.extend({
        caret: function (e, t) { var n; if (0 !== this.length && !this.is(":hidden")) return "number" == typeof e ? (t = "number" == typeof t ? t : e, this.each(function () { this.setSelectionRange ? this.setSelectionRange(e, t) : this.createTextRange && ((n = this.createTextRange()).collapse(!0), n.moveEnd("character", t), n.moveStart("character", e), n.select()) })) : (this[0].setSelectionRange ? (e = this[0].selectionStart, t = this[0].selectionEnd) : document.selection && document.selection.createRange && (n = document.selection.createRange(), e = 0 - n.duplicate().moveStart("character", -1e5), t = e + n.text.length), { begin: e, end: t }) }, unmask: function () { return this.trigger("unmask") }, mask: function (t, h) {
            var n, m, p, v, g; return !t && 0 < this.length ? $(this[0]).data($.mask.dataName)() : (h = $.extend({ placeholder: $.mask.placeholder, completed: null }, h), n = $.mask.definitions, m = [], p = g = t.length, v = null, $.each(t.split(""), function (e, t) { "?" == t ? (g--, p = e) : n[t] ? (m.push(new RegExp(n[t])), null === v && (v = m.length - 1)) : m.push(null) }), this.trigger("unmask").each(function () {
                var o = $(this), c = $.map(t.split(""), function (e, t) { if ("?" != e) return n[e] ? h.placeholder : e }), i = o.val(); function l(e) { for (; ++e < g && !m[e];); return e }
                function s(e, t) {
                    var n, a; if (!(e < 0)) {
                        for (n = e, a = l(t); n < g; n++)if (m[n]) { if (!(a < g && m[n].test(c[a]))) break; c[n] = c[a], c[a] = h.placeholder, a = l(a) }
                        d(), o.caret(Math.max(v, e))
                    }
                }
                function u(e, t) { var n; for (n = e; n < t && n < g; n++)m[n] && (c[n] = h.placeholder) }
                function d() { o.val(c.join("")) }
                function f(e) {
                    var t, n, a = o.val(), r = -1; for (t = 0, pos = 0; t < g; t++)if (m[t]) {
                        for (c[t] = h.placeholder; pos++ < a.length;)if (n = a.charAt(pos - 1), m[t].test(n)) { c[t] = n, r = t; break }
                        if (pos > a.length) break
                    } else c[t] === a.charAt(pos) && t !== p && (pos++, r = t); return e ? d() : r + 1 < p ? (o.val(""), u(0, g)) : (d(), o.val(o.val().substring(0, r + 1))), p ? t : v
                }
                o.data($.mask.dataName, function () { return $.map(c, function (e, t) { return m[t] && e != h.placeholder ? e : null }).join("") }), o.attr("readonly") || o.one("unmask", function () { o.off(".mask").removeData($.mask.dataName) }).on("focus.mask", function () { var e; clearTimeout(caretTimeoutId), i = o.val(), e = f(), caretTimeoutId = setTimeout(function () { d(), e == t.length ? o.caret(0, e) : o.caret(e) }, 10) }).on("blur.mask", function () { f(), o.val() != i && o.change() }).on("keydown.mask", function (e) { var t, n, a, r = e.which; 8 === r || 46 === r || iPhone && 127 === r ? (n = (t = o.caret()).begin, (a = t.end) - n == 0 && (n = 46 !== r ? function (e) { for (; 0 <= --e && !m[e];); return e }(n) : a = l(n - 1), a = 46 === r ? l(a) : a), u(n, a), s(n, a - 1), e.preventDefault()) : 27 == r && (o.val(i), o.caret(0, f()), e.preventDefault()) }).on("keypress.mask", function (e) { var t, n, a, r = e.which, i = o.caret(); e.ctrlKey || e.altKey || e.metaKey || r < 32 || r && (i.end - i.begin != 0 && (u(i.begin, i.end), s(i.begin, i.end - 1)), (t = l(i.begin - 1)) < g && (n = String.fromCharCode(r), m[t].test(n) && (function (e) { var t, n, a, r; for (t = e, n = h.placeholder; t < g; t++)if (m[t]) { if (a = l(t), r = c[t], c[t] = n, !(a < g && m[a].test(r))) break; n = r } }(t), c[t] = n, d(), a = l(t), android ? setTimeout($.proxy($.fn.caret, o, a), 0) : o.caret(a), h.completed && g <= a && h.completed.call(o))), e.preventDefault()) }).on(pasteEventName, function () { setTimeout(function () { var e = f(!0); o.caret(e), h.completed && e == o.val().length && h.completed.call(o) }, 0) }), f()
            }))
        }
    }); let inputSearch = document.getElementById('filterDataExchange'); if (inputSearch) {
        inputSearch.addEventListener('input', function (e) {
            if (e.target.value) {
                let checkValue = e.target.value.toLowerCase().trim(); let td_elements = [].concat(...document.querySelectorAll('.em-ratings-table tr')); for (let i = 1; i < td_elements.length; i++) {
                    let tr = td_elements[i]; let td_text = tr._text; if (!td_text) { tr._text = td_text = tr.querySelector('.name-table').innerHTML.toLowerCase(); }
                    td_text.search(checkValue) === -1 ? tr.classList.add('d-none') : tr.classList.remove('d-none'); noticeNotObmenik();
                }
            } else { document.querySelectorAll('.em-ratings-table tr.d-none').forEach(e => e.classList.remove('d-none')); }
        }, false);
    }
    function noticeNotObmenik() { const blockInputSearch = document.querySelector('.exchangers-page-table .input_block'); const getAllTableTr = Array.from(document.querySelectorAll('.em-ratings-table tbody tr')); let checkObmenTr = getAllTableTr.every(e => e.classList.contains('d-none')); const tableExchanger = document.querySelector('#exchangersTable'); if (checkObmenTr) { if (!blockInputSearch.parentNode.querySelector('div.notice-search')) { blockInputSearch.insertAdjacentHTML('afterend', '<div class="notice-search text-center mb-16">Указанный обменник не найден</div>'); tableExchanger.classList.add('d-none'); } } else { const noticeSearchElement = document.querySelector('.notice-search'); noticeSearchElement && noticeSearchElement.remove(); tableExchanger.classList.remove('d-none'); } }
    let iframe = [].concat(...document.querySelectorAll('iframe')); let count = 0; iframe.forEach(e => {
        if (undefined == e.getAttribute('src') || !(e.getAttribute('src').indexOf('youtube') > 0)) { return; }
        let codeVideo = e.getAttribute('src').replace('https://www.youtube.com/embed/', '').replace('?feature=oembed', ''); if (!(codeVideo.indexOf('http') === 0)) { let urlImg = `https://img.youtube.com/vi/${codeVideo}/mqdefault.jpg`; let blockImage = `<div class="block-youtube"><div class="youtube_play"></div><img class="img-yt" data-yt="${codeVideo}" src="${urlImg}" style="cursor:pointer" width="500"/></div>`; e.parentNode.insertAdjacentHTML('afterbegin', blockImage); e.remove(); }
    }); document.addEventListener('click', function (e) { if (e.target.className === 'img-yt') { let code = e.target.src.replace('https://img.youtube.com/vi/', '').replace('/mqdefault.jpg', ''); e.target.classList.add('d-none'); e.target.previousSibling.classList.add('d-none'); replaceImgToVideo(e, code); } }); function replaceImgToVideo(e, code) { let youtube = document.createElement('iframe'); youtube.setAttribute('src', 'https://youtube.com/embed/' + code + '?rel=0&modestbranding=1&mute=1&autoplay=1'); youtube.setAttribute('frameborder', '0'); youtube.setAttribute('width', '500'); youtube.setAttribute('height', '300'); youtube.setAttribute('allow', 'accelerometer; autoplay; fullscreen; clipboard-write; encrypted-media; gyroscope; picture-in-picture'); e.target.parentNode.insertBefore(youtube, e.target); }
    let contentPage = document.getElementById('content'); setTimeout(() => { contentPage.style.scrollMarginTop = '55px'; const isWidgetProfile = document.querySelector('.widget.left-block'); if (isMobile() && isWidgetProfile) contentPage.scrollIntoView({ behavior: 'smooth' }) }, 300); (function () { const statusReserve = document.querySelector('#content .in-proposal'); const checkStatusProposal = (statusReserve && statusReserve.outerText === "В заявках") ? true : false; if (checkStatusProposal) { const textReserve = document.querySelectorAll('#content .data-about'); textReserve.forEach((item) => { if (item.querySelector('.data-about dt').textContent === 'Сумма резервов:') { item.classList.add('d-none'); } }); const tabReserve = document.querySelectorAll('.exchanger_tab'); tabReserve.forEach((item) => { if (item.outerText === "Резервы") { item.classList.add('d-none'); } }); } })(document);
} catch (e) { }
try {
    if (undefined === window.isOtherExotherPagesScript) { window.isOtherExotherPagesScript = false; }
    function prepareNumber(num, PRECISION) { var fixed = parseFloat(num); PRECISION = PRECISION || 0; var isFixed = Math.round(fixed) == fixed; fixed = isFixed ? +parseInt(fixed) : +fixed; var mif = fixed == 1 ? 0 : (100 <= fixed ? PRECISION : precision); var maf = fixed < .001 ? mif + 3 : mif; return fixed.toLocaleString('ru-RU', { maximumFractionDigits: maf, minimumFractionDigits: mif }).replace(',', '.'); }
    function calcCommission(giveVal, getVal, tableData, isGive) {
        tableData.fromfee = tableData.fromfee.replace('%', ' %').replace('  ', ' '); tableData.tofee = tableData.tofee.replace('%', ' %').replace('  ', ' '); var fromfee = tableData.fromfee.split(' '); var tofee = tableData.tofee.split(' '); var koef = tableData.get / tableData.give; var fromCom = 0; var toCom = 0; if (fromfee[0]) { fromCom = fromfee[1] && '%' === fromfee[1] ? +fromfee[0] * giveVal / 100 : +fromfee[0]; }
        if (tofee[0]) { toCom = tofee[1] && '%' === tofee[1] ? +tofee[0] * getVal / 100 : +tofee[0]; }
        if (isGive) { getVal = (giveVal - fromCom) * koef - toCom; } else { giveVal += +fromCom + toCom / koef; }
        return [giveVal < 0 ? 0 : giveVal, getVal < 0 ? 0 : getVal];
    }
    function setValues(give, get, isGive) {
        var commissions = +$('#calcCommissions').prop('checked'); var topCommissions = +$('#calcTopCommissions').prop('checked'); var visibleCount = 0; var $doubleRows = jQuery('#doubleTable .item-double'); var $singleRows = jQuery('table#exchangesTable tr:not(.titles)'); var isInputSet = true; $doubleRows.each(function (idx, r) {
            var sRow = jQuery(r); var isTopRow = 0 === idx; idx = +sRow.data('id'); var eRow = sRow.next(); var sCells = sRow.children(); var eCells = eRow.children(); var sKoef = tableDataDouble[idx].middle / tableDataDouble[idx].start; var eKoef = tableDataDouble[idx].end / tableDataDouble[idx].middle; var sVal = 0; var mVal = 0; var eVal = 0; var sVlt = valutes[tableDataDouble[idx].svlt]; var mVlt = valutes[tableDataDouble[idx].mvlt]; var eVlt = valutes[tableDataDouble[idx].evlt]; var sysFeeX = commissions ? 1 - tableDataDouble[idx].sysFeeX / 100 : 1; var sysFeeY = commissions ? 1 - tableDataDouble[idx].sysFeeY / 100 : 1; if (isTopRow) { jQuery(isGive ? 'input#giveVal' : 'input#getVal').attr('placeholder', isGive ? tableDataDouble[idx].start : tableDataDouble[idx].middle * sysFeeX * eKoef * sysFeeY); }
            if (isGive ? give > 0 : get > 0) { if (isGive) { sVal = +give * sysFeeX; mVal = give * sysFeeY * sKoef; eVal = mVal * eKoef; } else { eVal = +get; mVal = +get / (eKoef * sysFeeY); sVal = mVal / (sKoef * sysFeeX); } } else { sVal = tableDataDouble[idx].start; mVal = tableDataDouble[idx].middle; mVal = mVal * sysFeeX; eVal = mVal * eKoef * sysFeeY; }
            if (commissions && $('#tab04').hasClass('visible')) { if (!isGive) { var dataIdx = { minfee: tableDataDouble[idx].minfeeY, fromfee: tableDataDouble[idx].fromfeeY, tofee: tableDataDouble[idx].tofeeY, get: tableDataDouble[idx].middle, give: tableDataDouble[idx].end, }; var coms = calcCommission(eVal, mVal, dataIdx); eVal = coms[0]; mVal = coms[1]; dataIdx = { minfee: tableDataDouble[idx].minfeeX, fromfee: tableDataDouble[idx].fromfeeX, tofee: tableDataDouble[idx].tofeeX, get: tableDataDouble[idx].start, give: tableDataDouble[idx].middle, }; coms = calcCommission(mVal, sVal, dataIdx); mVal = coms[0]; sVal = coms[1]; } else { var dataIdx = { minfee: tableDataDouble[idx].minfeeX, fromfee: tableDataDouble[idx].fromfeeX, tofee: tableDataDouble[idx].tofeeX, get: tableDataDouble[idx].start, give: tableDataDouble[idx].middle, }; var coms = calcCommission(mVal, sVal, dataIdx, isGive); mVal = coms[0]; sVal = coms[1]; dataIdx = { minfee: tableDataDouble[idx].minfeeY, fromfee: tableDataDouble[idx].fromfeeY, tofee: tableDataDouble[idx].tofeeY, get: tableDataDouble[idx].middle, give: tableDataDouble[idx].end, }; coms = calcCommission(eVal, mVal, dataIdx, isGive); eVal = coms[0]; mVal = coms[1]; } }
            $('.val', sCells[0]).html(prepareNumber(sVal, 4)); $('.val', sCells[1]).html(prepareNumber(mVal, 4)); $('.val', sCells[2]).html(prepareNumber(eVal, 4)); $(eRow).prev().find('.mx.kurs').html(prepareNumber(eVal / sVal, 4)); $('.start-val', eCells).html(prepareNumber(sVal, 4)); $('.middle-val', eCells).html(prepareNumber(mVal, 4)); $('.end-val', eCells).html(prepareNumber(eVal, 4)); if ((mVal > tableDataDouble[idx].rezerv_start || eVal > tableDataDouble[idx].rezerv_end) && give !== -1) { jQuery('.doubleItem' + idx).addClass('hideAnyway').hide(); } else { jQuery('.doubleItem' + idx).removeClass('hideAnyway').show(); visibleCount++; }
        }); $singleRows.each(function (idx, r) {
            if ($(r).is('.titles')) { return }
            var isTopRow = idx === 0; var row = jQuery(r); idx = +$(r).attr('data-open').match(/go=\d+/gi)[0].replace(/go=/g, ''); var tableItem = tableData[idx]; var cells = row.children(); var koef = tableItem.get / tableItem.give; var giveVal = 0; var getVal = 0; var sysFee = commissions ? 1 - tableItem.commission / 100 : 1; var minGiveGetVal = 0; if (isTopRow) { jQuery('input#giveVal').attr('placeholder', 1 === +tableItem.give ? 1 : ''); jQuery('input#getVal').attr('placeholder', 1 === +tableItem.get ? 1 : ''); }
            if (isGive ? give > 0 : get > 0) { isInputSet = true; if (isGive) { giveVal = +give * sysFee; getVal = give * sysFee * koef; } else { giveVal = get / (koef * sysFee); getVal = +get; } } else { isInputSet = false; giveVal = isGive ? +tableItem.give * sysFee : +tableItem.give / sysFee; getVal = isGive ? giveVal * koef : +tableItem.get; }
            if (topCommissions || commissions && $('#tab02').hasClass('visible')) { var coms = calcCommission(giveVal, getVal, tableData[idx], isGive); giveVal = coms[0]; getVal = coms[1]; }
            $('var', cells[1]).html(prepareNumber(giveVal, 4)); $('var', cells[2]).html(prepareNumber(getVal, 4)); row.removeClass('disabled'); if (jQuery('#tab02').hasClass('visible')) {
                if (isInputSet && +giveVal < +tableItem.minamount) { row.addClass('disabled'); }
                minGiveGetVal = +tableItem.minamount * koef * sysFee; if (giveVal !== -1 && +tableItem.rezerv < (!isInputSet ? minGiveGetVal : +getVal)) { row.addClass('disabled'); }
            }
            visibleCount++;
        }); if ($singleRows.length > 1) { $(document).trigger('tableSort'); }
        if ($singleRows.length > 0) { jQuery('#exchangesTableValueToBig').remove(); if (jQuery('table#exchangesTable tbody tr:not(.disabled)').length < 1) { jQuery('table#exchangesTable').after('<div id="exchangesTableValueToBig" style="text-align: center; padding: 10px;">К сожалению вы не можете сразу обменять такую сумму, но вы можете сделать это дробно, попробуйте уменьшить сумму</div>'); } } else { jQuery('#exchangesTableValueToBig').remove(); }
        if ($doubleRows && $('#tab04').hasClass('visible')) { jQuery('#exchangesTableValueToBig').remove(); if (jQuery('table#doubleTable tbody tr:not(.hideAnyway)').length <= 1) { jQuery('table#doubleTable').after('<div id="exchangesTableValueToBig" style="text-align: center; padding: 10px;">К сожалению вы не можете сразу обменять такую сумму, но вы можете сделать это дробно, попробуйте уменьшить сумму</div>'); } } else { jQuery('#exchangesTableValueToBig').remove(); }
    }
    jQuery(function () {
        if (!window.isOtherPages) return false; if (window.isOtherExotherPagesScript) return false; function toggleDoubleInfo(e) {
            var $item = $('.item-double-info.' + $(this).attr('id')); $('#doubleTable .active').removeClass('active').hide(100); if ($item.is('.active')) { return false; }
            $item.addClass('active').show(100);
        }
        function giveGet() { var isVisible = $(this).is('#giveRadio:checked'), methods = ['hide', 'show']; $('#getBlock')[methods[+!isVisible]](); $('#giveBlock')[methods[+isVisible]](); }
        function callRefresh() { setValues(jQuery('input#giveVal').val().replace(',', '.'), jQuery('input#getVal').val().replace(',', '.'), jQuery('#giveBlock').css('display') !== 'none'); }
        function addNotification(e) {
            var isValid = $('#action-notification input[required]').toArray().every(function (i) { return i.checkValidity(); }); e.preventDefault(); e.stopPropagation(); if (!isValid) { alert("Не все поля заполнены"); return false; }
            $.post(notificationsUrl, { 'q': 'step2', 'z': 'complete', 'first': $('#nFormFirst').val(), 'change': $('#nFormChange').val(), 'need': $('#nFormNeed').val(), 'rezerv': $('#nFormRezerv').val(), 'method': $('input[name=method]').val(), 'srok': $('#nFormSrok').val(), 'pin': $('#nFormPin').val(), 'account': $('#nFormAccount').val(), 'px': $('#nFormPX').val(), 'type': 'ajax' }).done(function (data) { $('#successfullNotification img')[['show', 'hide'][+data.err]](); $('#successfullNotification').show().find('span').text(data.mess); setTimeout(function () { $('#successfullNotification').hide(); }, 10000); });
        }
        $(document).on('click', '#doubleTable .item-double', toggleDoubleInfo); $('#giveRadio,#getRadio').on('change', giveGet).on('change', callRefresh); $('#giveVal,#getVal').on('blur input change', callRefresh); $('#updateTableButton').on('click', callRefresh); $('#calcCommissions,#calcTopCommissions').on('change', callRefresh); $('#addNotificationButton').on('click', addNotification);
    }); jQuery(function () {
        var ajaxUrl = '/wp-content/plugins/exchangers-monitor/exchange-ajax.php'; var ajax_loader = []; function initAjax(container) {
            container = $(container).get(0); container.ajaxLoader = container.ajaxLoader || ajaxLoader; if (undefined === container.autoReload) { container.autoReload = autoReload; container.timeout_id = false; }
            return container;
        }
        function autoReload(start) {
            var container = this; var url = $(container).attr('data-href'); var waitTime = $(container).attr('data-timeout'); if (!!start) {
                if (container.timeout_id) { clearTimeout(container.timeout_id); container.timeout_id = false; }
                container.ajaxLoader();
            }
            if (container.timeout_id || undefined === waitTime) { return; }
            container.timeout_id = setTimeout(function () { container.autoReload(true); }, waitTime);
        }
        function ajaxLoader() {
            var container = this; var isMonitor = !!window.isMainPage || !!window.fromPage || !!window.toPage; if (undefined !== $(container).attr('data-load') && (true == $(container).attr('data-load'))) { return; }
            if (undefined === $(container).attr('data-href')) { return; }
            var url = $(container).attr('data-href'); ajax_loader[url] = container; var a = $(container).attr('data-a'); $(container).addClass('update'); $(container).attr({ 'data-load': true }); var data = { 'url': url, 'action': isMonitor ? 'monitor_action' : 'exchange_action', 'first': window.firstVlt, 'change': window.changeVlt, 'a': a, 't': ((new Date()).getTime() / 10000 << 1) * 5000 }; $.ajax({
                type: 'POST', url: ajaxUrl, data: data, beforeSend: function () { if ($(container).find('.icon-preloader').is('.icon-preloader')) { $(container).find('.icon-preloader').show(); } else if (isMonitor) { $('tbody tr:first-child th:first-child', container).prepend('<span class="icon-preloader" style="display: block;"></span>'); } else { $(container).html('Загрузка...'); } }, success: function (data) {
                    $(container).html(data); if ($(container).find('.icon-preloader').is('.icon-preloader')) { $(container).find('.icon-preloader').hide(); }
                    $("#exchangesTable .tooltip-small").tooltipster({ theme: 'tooltipster-light', maxWidth: 330, contentAsHTML: true, functionBefore: function (instance, helper) { var content = $(helper.origin).attr('title'); instance.content(content); } }); if ($('#tab02').hasClass('visible')) { setValues(jQuery('input#giveVal').val().replace(',', '.'), jQuery('input#getVal').val().replace(',', '.'), jQuery('#giveBlock').css('display') !== 'none'); }
                }, error: function (data) { console.error('error ajax load url'); },
            }).done(function (data) { $(container).attr({ 'data-load': false }); $(container).removeClass('update'); container.ajaxDone(); $(document).trigger('exchangetable.exSumo'); }); return false;
        }
        if ($('table#exchange-table') || $('#exchange-table-block').is('div')) {
            function startLoadExchange(container_id, start) { $(container_id).each(function (i, el) { var container = this; var url = $(container).find('.table-courses').attr('data-href'); if (container && undefined !== url) { $(document).trigger('reinitialize.exSumo'); if (undefined == container.ajaxDone) { container.ajaxDone = function () { if (jQuery('input#giveVal').val() || jQuery('input#getVal').val()) { setValues(jQuery('input#giveVal').val().replace(',', '.'), jQuery('input#getVal').val().replace(',', '.'), (jQuery('#giveBlock').css('display') != 'none')); } } }; initAjax(container); container.autoReload(start); } }); }
            if ($('#exchangesTable').is('#exchangesTable')) {
                var hashes = location.hash.split('-'); if (hashes[0]) { $('.tabset li[data-tab] a[href$="' + hashes[0] + '"]').parent().click(); }
                if (hashes[1] && !isNaN(+hashes[1]) && 0 < +hashes[1]) { $('[name="val_give"]').val(+hashes[1]).trigger('blur'); }
                if (hashes[2] && !isNaN(+hashes[2]) && 0 < +hashes[2]) { $('[name="val_get"]').val(+hashes[2]).trigger('blur'); setTimeout(function () { $('#getRadio').click(); }, 0); }
                var $container = $('#tab-table,#action-exchange'); if (!!window.isMainPage || !!window.fromPage || !!window.toPage) { $container = $('.hold-table.table-courses').eq(0); }
                $container.find('.icon-preloader').hide(); startLoadExchange($container, false);
            }
            $(window).on('popstate', function (e) { var $target = $('.tabset li[data-tab] a[href="' + location.pathname + location.hash + '"]'); $target.parent().click(); $target.length && e.preventDefault && e.preventDefault(); }); $('.tabset li[data-tab] a').on('click', function () { $(this).parent().click(); history.pushState(null, '', $(this).attr('href')); return false; }); $('.tabset li[data-tab]').on('click', function () { startLoadExchange($(this).attr('data-tab'), true); return true; });
        }
    }); "use strict"; (function ($, doc) {
        new function Sorter() {
            var _this = this; this.targetNode = '#exchangesTable,#exchangersTable'; this.index = null; this.dir = 0; this.create = function () {
                if (!$('.sortArrows').length) { $('tr.titles th', _this.targetNode).append('<span class="sortArrows"><span class="sortArrow"></span><span class="sortArrow"></span></span>'); }
                if (_this.index !== null && _this.dir !== null) { $('tr.titles th', _this.targetNode).eq(_this.index).find('.sortArrow').addClass('sortArrow_no_actine').eq(_this.dir).addClass('sortArrowActive').removeClass('sortArrow_no_actine'); }
                _this.sort();
            }; this.choice = function (e) {
                var active = $('.sortArrowActive').removeClass('sortArrowActive'); $('.sortArrow').removeClass('sortArrow_no_actine'); var active_index = active.closest('th').index(); var target = $(e.target); _this.index = target.closest('th').index(); if (active_index === _this.index) { _this.dir = +!_this.dir; }
                target.find('.sortArrow').addClass('sortArrow_no_actine'); target.find('.sortArrow').eq(_this.dir).addClass('sortArrowActive'); _this.sort();
            }; this.getCellValue = function (row, index) {
                var $c, $row = $(row).children('td'), $cell = $row.eq(index); if (0 === $cell.length) return 0; var value = $cell.text().replace(/\s/g, '').replace(',', '.'); if (!index && ($c = $cell.find('.name-table'))) value = '_' + ($cell = $c).text(); if ($cell.data('value')) value = '' + $cell.data('value'); if ('string' === $cell.data('compare')) return '_' + value; if (-1 !== value.indexOf('/') && $row.length - 2 <= index)
                    value = value.split('/')[this.dir] * 1000000 + +value.split('/')[+!this.dir]; if (!isNaN(parseFloat(value))) value = parseFloat(value); return value;
            }; this.sort = function () {
                if (null === _this.index || null === _this.dir) return; var table = $('tbody', _this.targetNode); var rows = table.find('tr:not(.titles)'); rows = rows.toArray().sort(function (a, b) {
                    var valA = _this.getCellValue(a, _this.index), valB = _this.getCellValue(b, _this.index); if ($.isNumeric(valA) && $.isNumeric(valB) && 0 === valA - valB) { valA = valA / (+_this.getCellValue(a, _this.index + 1) || 1); valB = valB / (+_this.getCellValue(b, _this.index + 1) || 1); }
                    return $.isNumeric(valA) && $.isNumeric(valB) || !valA.localeCompare ? valA - valB : valA.localeCompare(valB);
                }); _this.dir && (rows = rows.reverse()); rows.forEach(function (row) { return table.append(row); }); _this.addBanner();
            }; this.addBanner = function () { if (null === _this.index || null === _this.dir) return; var table = $('tbody', _this.targetNode); var bannerRow = table.find('tr.banner-row')[0]; $('tr.banner-row').remove(); if ($(table).find('tr').length > 10) { $(bannerRow).insertAfter($(table).find('tr:nth-child(6)')); } }; this.defaults = function (e) {
                if ('getRadio' === e.target.id && (_this.index === 2 || _this.index === null)) { _this.dir = 0; $('tr.titles th', _this.targetNode).eq(1).click(); }
                if ('giveRadio' === e.target.id && (_this.index === 1 || _this.index === null)) { _this.dir = 1; $('tr.titles th', _this.targetNode).eq(2).click(); }
            }; $(doc).ajaxStop(this.create); $(document).on('tableSort', this.create); $(document).on('load', this.create); $(this.create); $(document).on('click', _this.targetNode.split(',').map(function (a) { return a + ' thead tr.titles th' }).join(','), this.choice); $('#giveRadio,#getRadio').on('click', this.defaults);
        }();
    })(jQuery, document); (function ($) { $('code').on('click', function (e) { var text = e.target.innerText; var el = document.createElement('textarea'); el.value = text; document.body.appendChild(el); el.select(); document.execCommand('copy') && alert('Cкопировано в буфер...'); document.body.removeChild(el); }); })(jQuery); (function ($) { $('#copy_link').click(function (e) { var el = document.createElement('textarea'); el.value = $('.default_field_nickname[data-name="partner_link"]')[0].innerText; document.body.appendChild(el); el.select(); document.execCommand('copy') && console.log('Cкопировано в буфер...'); document.body.removeChild(el); }); })(jQuery); jQuery(function () { if (window.hasOwnProperty('tableData')) { var keys = Object.keys(tableData); var data = tableData[keys[keys.length / 2 << 1 >> 1]]; if (!data || location.hash !== 'calc') return; var coef = data.give / data.get; $(1 > coef ? '#giveRadio' : '#getRadio').trigger('click'); } }); (function ($) {
        function checkFieldValidity(e, callback) { var $field = $(e.target).closest('input,textarea,select'); var isValid = $field[0].checkValidity(); isValid && $field.removeClass('invalid'); }
        function checkRequired(r, i) { var $i = $(i).prop('title', i.validationMessage); var isValid = i.checkValidity() && !!$i.val(); isValid || addAlerts($i, 'Не заполнены обязательные поля', 'required'); return r && isValid; }
        function checkPatterns(r, i) { var $i = $(i).closest('input,select,textarea').prop('title', i.validationMessage); var isValid = i.checkValidity(); isValid || addAlerts($i, 'Проверьте правильность заполнения полей', 'pattern'); return r && isValid || !$i.val(); }
        function addAlerts($i, message, mode) {
            var $r = $('.response-output'); message = '<div class="response-' + mode + '">' + message + '</div>'; var notify = '<div class="response-output validation-errors">' + message + '</div>'; $i.addClass('invalid').eq(0).parent()[0].scrollIntoView({ alignToTop: true, behavior: "smooth", scrollIntoViewOptions: { block: "start", inline: "nearest" } }); window.scrollTo({ top: 150, behavior: "smooth" }); if ($('.response-output .response-' + mode).length) return; if (!$r.length) { $i.closest('form').parent().prepend(notify); }
            $r.append(message);
        }
        function checkChanges(i) {
            var $i = $(i); var value = $i.val(); if ('SELECT' === $i[0].tagName && value) { return true; }
            $i.prop('initialize') || $i.prop('initial', value); var initial = $i.prop('initialize', 1).prop('initial'); return initial !== value;
        }
        function reInitialize(i) { var $i = $(i); $i.prop('initial', $i.val()); }
        function checkFormValidity(e, callback) {
            var $form = $(e.target).closest('form'); $('.response-output .response-required,.response-output .response-pattern').remove(); var isValid = $('[required],[aria-required="true"]', $form).not('[id*="-switcher"]:not(:checked) ~ [hide-cancel-required] *').toArray().reverse().reduce(checkRequired, true); isValid = isValid && $('[pattern]', $form).toArray().reverse().reduce(checkPatterns, true); var hasChanges = $('input,textarea,select', $form).toArray().some(checkChanges); isValid && $form.trigger('isValid.exSumo'); if (hasChanges ? !isValid : true) { e.preventDefault(); e.stopPropagation(); return; }
            $('input,textarea,select', $form).toArray().map(reInitialize);
        }
        $('#content').on('input change select', '[required].invalid,[aria-required="true"].invalid,[pattern].invalid', checkFieldValidity).on('click', '[type="submit"]', checkFormValidity); $(function () { setTimeout(function () { $('#content form [type="password"]').prop('pattern', '[^<>]{6,32}'); $('input,textarea,select', '#content form').toArray().map(checkChanges); }, 100); });
    })(jQuery); (function ($) { if (window.isOtherExotherPagesScript) return false; undefined !== localStorage.legend && $('#legend-arrow_check').prop('checked', !!+localStorage.legend ? true : null); $(document).on('change', '#legend-arrow_check', function () { var date = new Date(new Date().getTime() + 6 * 30 * 24 * 60 * 60 * 1000); setCookie('tooltip-legend', localStorage.legend = $('#legend-arrow_check:checked').length, date.toUTCString(), "/") }); })(jQuery);
} catch (e) { }
try { ; (function ($) { if ($('#header #nav').is('#nav')) { $('#header #nav').on('OpenBox:click OpenBox:touchstart OpenBox:close', function (e) { if ($('#nav.open-menu').is('#nav') && (!$('#header').is('.header-open-menu'))) { $('#header').addClass("header-open-menu"); } else { setTimeout(function () { if (!$('#nav.open-menu').is('#nav')) { $('#header').removeClass("header-open-menu"); } }, 3000); } }); $('#header .user-menu').on('OpenBox:click OpenBox:touchstart OpenBox:close', function (e) { if ($('#header div.open-drop').is('div') && (!$('#header').is('.header-open-panel'))) { $('#header').addClass("header-open-panel"); } else { setTimeout(function () { if (!$('#header div.open-drop').is('div')) { $('#header').removeClass("header-open-panel"); } }, 100); } }); } })(jQuery); } catch (e) { }
try {
    (function ($) {
        function callSelectExchanger(event) {
            var exchangeName = $('.exSumo-form .select-box_label').val(); exchangeName = (undefined == exchangeName) ? '' : exchangeName.toLowerCase(); var $exchange = false; var fullForm = false; if (exchangeName) { $('.exSumo-form #choice_name .select-box_label').addClass('wpcf7-not-valid'); $('.exSumo-form #choice_name .select-box_item-box_item').each(function () { if ($(this).text().toLowerCase().trim() == exchangeName.trim()) { $('#choice_name .select-box_label').removeClass('wpcf7-not-valid'); $exchange = $(this); } }); if ($exchange && '1' == $($exchange).attr('data-full_form')) { fullForm = true; } }
            console.log('exchange', $exchange); if (fullForm) { console.log('fullForm=true'); $('.exSumo-form .flex-row_item.noactive').addClass('active'); $('.exSumo-form .flex-row_item.noactive.active input').attr('aria-required', 'true'); } else { console.log('fullForm=false'); $('.exSumo-form .flex-row_item.noactive.active').removeClass('active'); $('.exSumo-form .flex-row_item.noactive input').attr('aria-required', ''); }
        }
        if ($('.exSumo-form #do_cashback').is('button')) { $(document).on('selectExchanger.cashback', callSelectExchanger); $(document).trigger('selectExchanger.cashback'); }
    })(jQuery);
} catch (e) { }
try {
    function LastCurrensyClick(e) {
        if ($(".wrap-link", e).length === 0) {
            if ($(e).css('display') === 'none') { }
            var response = ''; $.ajax({
                type: "POST", url: '/wp-content/plugins/vw-lastprivatevaluteslist/lpvvl-ajax.php', data: { 'block_id': $(e).attr('id'), 'pagename': $(location).attr('href'), 'action': 'ex_lastprivatevaluteslist_action', 't': ((new Date()).getTime() / 10000 << 1) * 5000 }, async: true, success: function (text) { response = text; $(e).html($(response).html()); }
            });
        }
    }
    $(document).ready(function () { if ($('#tab-history').is('#tab-history')) { setTimeout(function () { LastCurrensyClick($('#tab-history')); }, 1); } });
} catch (e) { }
try {
    var onClickReCaptchaV3, onStartLocationHref; $(document).ready(function () {
        function centerBox() {
            var boxWidth = 750; var boxHeight = 500; if ($('.login .popup-window .no-mobile').is('.no-mobile') && $('.login .popup-window .no-mobile').css('display') === 'none') { boxWidth = $(window).width() * 0.95; $('.login .popup-content').css({ 'width': boxWidth + 'px', 'height': boxHeight + 'px' }); }
            var winWidth = $(window).width(); var winHeight = $(window).height(); if ($('.login .popup-window .autoresize').is('.autoresize')) {
                boxHeight = 60 + $('.login .popup-window .autoresize').height(); boxWidth = 60 + $('.login .popup-window .autoresize').width(); if (winWidth < 450) { boxHeight = 30 + $('.login .popup-window .autoresize').height(); boxWidth = 20 + $('.login .popup-window .autoresize').width(); }
                console.log(boxHeight, boxWidth); $('.login .popup-content').css({ 'width': boxWidth + 'px', 'height': boxHeight + 'px' });
            }
            var disWidth = (winWidth - boxWidth) / 2; var disHeight = (winHeight - boxHeight) / 2; if (disHeight < 0) { disHeight = 0; }
            $('.login .popup-window').css({ 'left': disWidth + 'px', 'top': disHeight + 'px' }); return false;
        }
        $(function () {
            var ajax_login_start = false; function PopupLoginClick(e, ajax_action, params) {
                if (ajax_login_start) { return false; }
                if ($("body.logged-in").is('.logged-in')) { return true; }
                if (undefined === params) { params = {}; }
                ajax_login_start = true; $('.login.overlay_popup').show(); $(".login .popup-window").show(); $('#popup-login-wrap .popup-content').html('...'); if ($("#popup-login-wrap .popup-login-content-wrap").length === 0) {
                    var elem = $(e.target).closest("a"); var url_redirect = $(elem).attr('href'); if (url_redirect == "#login_popub" || undefined == url_redirect) { url_redirect = ''; }
                    if (onStartLocationHref === true) { url_redirect = $(location).attr('href'); }
                    params = (params) ? params : { 'param': params }; params['redirect_to'] = (!!params['redirect_to']) ? params['redirect_to'] : url_redirect; params['pagename'] = $(location).attr('href'); params['ajax_action'] = 'ex_' + ajax_action + '_popup'; params['t'] = ((new Date()).getTime() / 10000 << 1) * 5000; start_send_web_vitals(e, ajax_action, params); var response = $.ajax({
                        type: "POST", url: '/wp-content/plugins/vw-login/start-ajax.php', data: params, async: false, success: function (text) {
                            $('#popup-login-wrap .popup-content').html(text); centerBox(); if (!$('action-redirect', text).is('.action-redirect')) { reLoad($('#popup-login-wrap .popup-content')); }
                            ajax_login_start = false;
                        }, error: function (text) { $('#popup-login-wrap .popup-content').html('Ошибка в ответе сервера. Попробуйте позже.'); centerBox(); ajax_login_start = false; }
                    });
                }
                return false;
            }
            function start_send_web_vitals(e, ajax_action, params) {
                if (typeof sendGA4 !== 'function') { return; }
                if (ajax_action === 'registration') { sendGA4('form_tracking', 'UX', 'submit', 'registration_form'); } else if (ajax_action === 'login') { if ($('[name=vwlp_login]', e.target).val() === 'step2') { sendGA4('form_tracking', 'UX', 'submit', 'login_form'); } }
            }
            function PopupFormSubmit(e, ajax_action) {
                var params = {}; if ($(e.target).find('div.errors').is('.errors')) { return false; }
                $(e.target).find('input, textearea, select').each(function () { params[this.name] = $(this).val(); }); if (hasRecaptcha() && typeof (onClickReCaptchaV3) === 'function') { onClickReCaptchaV3(e, ajax_action, function (e, token) { params['g-recaptcha-token'] = token; return PopupLoginClick(e, ajax_action, params); }); } else { PopupLoginClick(e, ajax_action, params); }
                return false;
            }
            function hasRecaptcha() {
                if ($(".action-login .login_form_content form").is('form')) { return true; }
                if ($(".action-register form").is('form')) { return true; }
                return false;
            }
            function reLoad(element) {
                if ($(".action-login .login_form_content form", element).is('form')) { $(".action-login .login_form_content form", element).on('submit', function (e) { PopupFormSubmit(e, 'login'); return false; }); }
                if ($(".action-login .register_form_step1_content form", element).is('form')) { console.log('login'); $(".action-login .register_form_step1_content form", element).on('submit', function (e) { PopupFormSubmit(e, 'login'); return false; }); }
                if ($(".action-register form", element).is('form')) { $(".action-register form", element).on('submit', function (e) { PopupFormSubmit(e, 'registration'); return false; }); }
                if ($(".action-lostpassword form", element).is('form')) { $(".action-lostpassword form", element).on('submit', function (e) { PopupFormSubmit(e, 'lostpassword'); return false; }); }
                if ($("[href*='#login_popup']", element).is('a')) { $("[href*='#login_popup']", element).click(function (e) { return PopupLoginClick(e, 'login'); }); }
                if ($(location).attr('href').indexOf('login_popup') !== -1) { onStartLocationHref = true; $("[href*='#login_popup']", element).click(); }
                if ($("[href*='lostpassword']", element).is('a')) { $("[href*='lostpassword']", element).click(function (e) { return PopupLoginClick(e, 'lostpassword'); }); }
                startOnKeyOnToLabel(element); startOnEyeToPassword(element); validate(element);
            }
            function startOnKeyOnToLabel(element) {
                if (document === element) { element = $('#popup-login-wrap'); }
                if (!$('form input', element).is('input')) { return; }
                $('form input', element).on('keyup', function (ev) { if ($(this).val() !== '' && !$('label', $(this).parent()).is('.active')) { $('label', $(this).parent()).addClass('active').removeClass('hidden'); } else if ('' === $(this).val() && $('label', $(this).parent()).is('.active')) { $('label', $(this).parent()).addClass('hidden').removeClass('active'); } }); if ($('form input', element).is('.input')) { $('form input.input', element).each(function () { if ($(this).val() !== '') { $(this).parent().find('label').removeClass('hidden').addClass('active'); } }); };
            }
            function startOnEyeToPassword(element) {
                if (document === element) { element = $('#popup-login-wrap'); }
                if (!$('form .field-password .eye', element).is('.eye')) { return; }
                $('form .field-password .eye', element).on('click', function (ev) { if ($(this).parent().find('input').attr('type') === 'password') { $(this).parent().find('input').attr('type', 'text'); $(this).removeClass('eye-close').addClass('eye-open'); } else if ($(this).parent().find('input').attr('type') === 'text') { $(this).parent().find('input').attr('type', 'password'); $(this).removeClass('eye-open').addClass('eye-close'); } });
            }
            function validate(element) {
                if ($('form input[data-filter=email]', element).attr('data-validate') !== true) {
                    $('form input[data-filter=email]', element).attr('data-validate', true); $('form input[data-filter=email]', element).on('change', function (ev) {
                        if ($(this).val() === '') { addError(this, 'Заполните Email.'); return; } else if ((/[A-Z]/.test($(this).val()))) { addError(this, 'В Email только малые буквы.'); return; }
                        else if (!(/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/.test($(this).val()))) { addError(this, 'Неверный формат Email.'); return; }
                        addError(this, false);
                    });
                } else { $('form input[data-filter=email]', element).change(); }
                if ($('form input[data-filter=password]', element).attr('data-validate') !== true) {
                    $('form input[data-filter=password]', element).attr('data-validate', true); $('form input[data-filter=password]', element).on('change', function (ev) {
                        if ($(this).val() === '') { addError(this, 'Заполните Пароль.'); return; } else if ($(this).val().length < 6) { addError(this, 'Короткий пароль.'); return; }
                        addError(this, false); $('form input[data-filter=password2]', element).change();
                    });
                } else { $('form input[data-filter=password]', element).change(); }
                if ($('form input[data-filter=password2]', element).attr('data-validate') !== true) {
                    $('form input[data-filter=password2]', element).attr('data-validate', true); $('form input[data-filter=password2]', element).on('change', function (ev) {
                        console.log('password=' + $('form input[data-filter=password]', element).val(), 'password2=' + $('form input[data-filter=password2]', element).val()); if ($(this).val() === '') { addError(this, 'Заполните Пароль.'); return; } else if ($(this).val().length < 6) { addError(this, 'Короткий пароль.'); return; } else if ($(this).val() !== $('form input[data-filter=password]', element).val()) { addError(this, 'Пароли не совпадают.'); return; }
                        addError(this, false);
                    });
                } else { $('form input[data-filter=password2]', element).change(); }
                if ($('form input[data-filter=nickname]', element).attr('data-validate') !== true) {
                    $('form input[data-filter=nickname]', element).attr('data-validate', true); $('form input[data-filter=nickname]', element).on('change', function (ev) {
                        if ($(this).val() === '') { addError(this, 'Заполните Никнайм.'); return; } else if (!(/^[a-zA-Z0-9!#$%&'*+=?^_{|}~-]+$/.test($(this).val()))) { addError(this, 'Введите ник на латиннице.'); return; }
                        addError(this, false);
                    });
                } else { $('form input[data-filter=nickname]', element).change(); }
            }
            function addError(el, message) { if ($(el).is('input')) { if (message === false) { $(el).parent().find('.error-message').html(''); $(el).parent().removeClass('errors'); } else { $(el).parent().find('.error-message').html(message); $(el).parent().addClass('errors'); } } }
            reLoad(document); $('body').on('click', '#popup-login-wrap form .current-email-wrap .email-edit-icon', function (e) { $('#popup-login-wrap form .current-email-wrap').hide(); $('#popup-login-wrap form .register-useremail').show(); }); $('body').on('click', '.login.overlay_popup, .login .popup-window .close', function (e) { $('.login.overlay_popup, .login .popup-window').hide(); if ($('.grecaptcha-badge').is('.grecaptcha-badge')) { $('.grecaptcha-badge').parent().remove(); } });
        });
    }); $(document).ready(function () {
        var ajax_balance_start = false; function userReLoadBalances(params) {
            if (ajax_balance_start) { return false; }
            if (!$("body.logged-in").is('.logged-in')) { return true; }
            if (!$("#cashback-balance .icon-preloader").is('.icon-preloader')) { return true; }
            ajax_balance_start = true; params = (params) ? params : { 'param': params }; params['ajax_action'] = 'ex_user_balances'; params['t'] = ((new Date()).getTime() / 10000 << 1) * 5000; var response = $.ajax({
                type: "POST", url: '/wp-content/plugins/vw-login/start-ajax.php', data: params, async: true, success: function (jsn) {
                    if ($("#cashback-balance").is('#cashback-balance')) { $("#cashback-balance").html(jsn.cashback_balance); }
                    if ($("#partner-balance").is('#partner-balance')) { $("#partner-balance").html(jsn.partner_balance); }
                    ajax_balance_start = false;
                }, error: function (text) { console.error('Error load ex_user_balances', text); ajax_balance_start = false; }
            });
        }; if ($("#header .btn-user").is('.btn-user')) { $('#header .btn-user').on('click', function (e) { const funStar = setTimeout(userReLoadBalances, 1); }); }
    });
} catch (e) { }
try {
    var onPbClickReCaptchaV3, onPbStartLocationHref; var vwpb = { ajax_form_upload: false }; vwpb.DEBUG = true; vwpb.autoCenterBox = function () {
        var boxWidth = 750; var boxHeight = 500; if ($('.vwpb .popup-window .no-mobile').is('.no-mobile') && $('.vwpb .popup-window .no-mobile').css('display') === 'none') { boxWidth = $(window).width() * 0.95; $('.vwpb .popup-content').css({ 'width': boxWidth + 'px', 'height': boxHeight + 'px' }); }
        var winWidth = $(window).width(); var winHeight = $(window).height(); if ($('.vwpb .popup-window .autoresize').is('.autoresize')) {
            boxHeight = 60 + $('.vwpb .popup-window .autoresize').height(); boxWidth = 60 + $('.vwpb .popup-window .autoresize').width(); if (winWidth < 450) { boxHeight = 40 + $('.vwpb .popup-window .autoresize').height(); boxWidth = 20 + $('.vwpb .popup-window .autoresize').width(); }
            $('.vwpb .popup-content').css({ 'width': boxWidth + 'px', 'height': boxHeight + 'px' });
        }
        var disWidth = (winWidth - boxWidth) / 2; var disHeight = (winHeight - boxHeight) / 2; if (disHeight < 0) { disHeight = 0; }
        $('.vwpb .popup-window').css({ 'left': disWidth + 'px', 'top': disHeight + 'px' }); return false;
    }; vwpb.beforePopupStartAjax = function (ajax_el, ajax_action, ajax_params) { var resultEvent = 1; $el = $('#vwpb_popup_wrap .popup-content'); $el.attr('beforeResultEvent', resultEvent); var $res = $el.trigger('beforePopupStartAjax', [ajax_el, ajax_action, ajax_params]); resultEvent = (1 == $res.attr('beforeResultEvent')); (vwpb.DEBUG) && console.log('vwpb.beforePopupStartAjax', (1 == resultEvent), $res, $el); return (1 == resultEvent); }; vwpb.afterPopupStartAjax = function (ajax_el, ajax_caled, ajax_text, ajax_action, ajax_params) {
        var resultEvent = 1; $el = $('#vwpb_popup_wrap .popup-content'); $el.attr('afterResultEvent', resultEvent)
        var $res = $el.trigger('afterPopupStartAjax', [ajax_el, ajax_caled, ajax_text, ajax_action, ajax_params]); resultEvent = (1 == $res.attr('afterResultEvent')); (vwpb.DEBUG) && console.log('vwpb.afterPopupStartAjax', (1 == resultEvent), $res, $el); return resultEvent;
    }; vwpb.PopupFormClick = function (e, ajax_action, params) {
        (vwpb.DEBUG) && console.log('vwpb.PopupFormClick', e, ajax_action, params); if (vwpb.ajax_form_upload) { return false; }
        if (undefined === params) { params = {}; }
        vwpb.ajax_form_upload = true; $('.vwpb.overlay-popup').show(); $(".vwpb .popup-window").show(); $('#vwpb_popup_wrap').addClass('loading'); var elem = $(e.target).closest("a"); var url_redirect = $(elem).attr('href'); if (onPbStartLocationHref === true) { url_redirect = $(location).attr('href'); }
        params = (params) ? params : { 'param': params }; params['redirect_to'] = (!!params['redirect_to']) ? params['redirect_to'] : url_redirect; params['pagename'] = $(location).attr('href'); params['ajax_action'] = 'ex_' + ajax_action + '_popup'; params['t'] = ((new Date()).getTime() / 10000 << 1) * 5000; setTimeout(function () { vwpb.StartSendWebVitals(e, ajax_action, params); }, 250); if (vwpb.beforePopupStartAjax(e, ajax_action, params)) {
            (vwpb.DEBUG) && console.log('vwpb.popupStartAjax', e, ajax_action, params); var response = $.ajax({
                type: "POST", url: '/wp-content/plugins/vw-popup-block/start-ajax.php', data: params, async: false, success: function (text) {
                    $('#vwpb_popup_wrap .popup-content').html(text); vwpb.autoCenterBox(); if (!$('action-redirect', text).is('.action-redirect')) { vwpb.reLoad($('#vwpb_popup_wrap .popup-content')); }
                    $('#vwpb_popup_wrap').removeClass('loading'); vwpb.afterPopupStartAjax(e, 'success', text, ajax_action, params)
                    vwpb.ajax_form_upload = false;
                }, error: function (text) {
                    $('#vwpb_popup_wrap .popup-content').html('Ошибка в ответе сервера. Попробуйте позже.'); vwpb.autoCenterBox(); $('#vwpb_popup_wrap').removeClass('loading'); vwpb.afterPopupStartAjax(e, 'error', text, ajax_action, params)
                    vwpb.ajax_form_upload = false;
                }
            });
        } else { vwpb.autoCenterBox(); $('#vwpb_popup_wrap').removeClass('loading'); vwpb.ajax_form_upload = false; }
        return false;
    }; vwpb.PopupFormClose = function (e) {
        $('.vwpb.overlay-popup, .vwpb .popup-window').hide(); $('#vwpb_popup_wrap .popup-content').trigger('popupFormClose'); if ($('.grecaptcha-badge').is('.grecaptcha-badge')) { $('.grecaptcha-badge').parent().remove(); }
        return false;
    }
    vwpb.StartSendWebVitals = function (e, ajax_action, params) {
        if (typeof sendGA4 !== 'function') { return; }
        if (ajax_action === 'complaint') { sendGA4('popup_tracking', 'UX', 'submit_attempt', 'complaint_form'); } else if (ajax_action === 'help') { sendGA4('popup_tracking', 'UX', 'submit_attempt', 'help_form'); } else { sendGA4('popup_tracking', 'UX', 'click_attempt', ajax_action); }
    }; vwpb.FinishSendWebVitals = function (e, ajax_action, params) {
        if (typeof sendGA4 !== 'function') { return; }
        if (ajax_action === 'complaint') { sendGA4('popup_tracking', 'UX', 'submit', 'complaint_form'); } else if (ajax_action === 'help') { sendGA4('popup_tracking', 'UX', 'submit', 'help_form'); } else { sendGA4('popup_tracking', 'UX', 'click', ajax_action); }
    }; vwpb.PopupFormSubmit = function (e, ajax_action) {
        var params = {}; if ($(e.target).find('div.errors').is('.errors')) { return false; }
        $(e.target).find('input,textarea,select').each(function () { params[this.name] = $(this).val(); }); if (vwpb.hasRecaptcha() && typeof (onPbClickReCaptchaV3) === 'function') { onPbClickReCaptchaV3(e, ajax_action, function (e, token) { params['g-recaptcha-token'] = token; return vwpb.PopupFormClick(e, ajax_action, params); }); } else { vwpb.PopupFormClick(e, ajax_action, params); }
        return false;
    }; vwpb.hasRecaptcha = function () {
        if ($("#vwpb_popup_wrap form").is('form')) { return true; }
        return false;
    }; vwpb.startOnKeyOnToLabel = function (element) {
        if (document === element) { element = $('#vwpb_popup_wrap'); }
        if (!$('form input', element).is('input')) { return; }
        $('form input', element).on('keyup', function (ev) { if ($(this).val() !== '' && !$('label', $(this).parent()).is('.active')) { $('label', $(this).parent()).addClass('active').removeClass('hidden'); } else if ('' === $(this).val() && $('label', $(this).parent()).is('.active')) { $('label', $(this).parent()).addClass('hidden').removeClass('active'); } }); if ($('form input', element).is('.input')) { $('form input.input', element).each(function () { if ($(this).val() !== '') { $(this).parent().find('label').removeClass('hidden').addClass('active'); } }); };
    }; vwpb.startValidate = function (element) {
        if ($('form input[data-filter=email]', element).is('input')) { vwpb.addValidateEmail(element); }
        if ($('form [data-filter=message]', element).is('textarea')) { vwpb.addValidateMessage(element); }
        if ($('form input[data-filter=xobmen]', element).is('input')) { vwpb.addValidateXobmen(element); }
    }; vwpb.addValidateEmail = function (element) {
        if ($('form input[data-filter=email]', element).attr('data-validate') !== true) {
            $('form input[data-filter=email]', element).attr('data-validate', true); $('form input[data-filter=email]', element).on('change', function (ev) {
                if ($(this).val() === '') { vwpb.addError(this, 'Заполните Email.'); return; } else if ((/[A-Z]/.test($(this).val()))) { vwpb.addError(this, 'В Email только малые буквы.'); return; } else if (!(/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/.test($(this).val()))) { vwpb.addError(this, 'Неверный формат Email.'); return; }
                vwpb.addError(this, false);
            });
        } else { $('form input[data-filter=email]', element).change(); }
    }; vwpb.addValidateMessage = function (element) {
        if ($('form [data-filter=message]', element).attr('data-validate') !== true) {
            $('form [data-filter=message]', element).attr('data-validate', true); $('form [data-filter=message]', element).on('change', function (ev) {
                if ($(this).val() === '') { vwpb.addError(this, 'Заполните жалобу.'); return; }
                vwpb.addError(this, false);
            });
        } else { $('form [data-filter=message]', element).change(); }
    }; vwpb.addValidateXobmen = function (element) {
        if ($('form input[data-filter=xobmen]', element).attr('data-validate') !== true) {
            $('form input[data-filter=xobmen]', element).attr('data-validate', true); $('form input[data-filter=xobmen]', element).on('change', function (ev) {
                if ($(this).val() === '') { vwpb.addError(this, 'Заполните Название обменника.'); return; }
                vwpb.addError(this, false);
            });
        } else { $('form input[data-filter=xobmen]', element).change(); }
    }; vwpb.addError = function (el, message) { if ($(el).is('input,textarea,select')) { if (message === false) { $(el).parent().find('.error-message').html(''); $(el).parent().removeClass('errors'); } else { $(el).parent().find('.error-message').html(message); $(el).parent().addClass('errors'); } } }; vwpb.init = function () { $('body').on('click', '.vwpb.overlay-popup, .vwpb .popup-window .close', function (e) { e.preventDefault(); return vwpb.PopupFormClose(e); }); vwpb.reLoad(document); }; vwpb.reLoad = function (element) {
        if ($("[href*='#complaint']", element).attr('data-click') !== true) { $("[href*='#complaint']", element).attr('data-click', true); $("[href*='#complaint']", element).click(function (e) { return vwpb.PopupFormClick(e, 'complaint'); }); }
        if ($(location).attr('href').indexOf('#complaint') !== -1) { onPbStartLocationHref = true; $("[href*='#complaint']", element).click(); }
        if ($("[href*='#help']", element).attr('data-click') !== true) { $("[href*='#help']", element).attr('data-click', true); $("[href*='#help']", element).click(function (e) { return vwpb.PopupFormClick(e, 'help'); }); }
        if ($(location).attr('href').indexOf('#help') !== -1) { onPbStartLocationHref = true; $("[href*='#help']", element).click(); }
        if ($("[href*='#videoguide']", element).attr('data-click') !== true) { $("[href*='#videoguide']", element).attr('data-click', true); $("[href*='#videoguide']", element).click(function (e) { return vwpb.PopupFormClick(e, 'videoguide'); }); }
        if ($(location).attr('href').indexOf('#videoguide') !== -1) { onPbStartLocationHref = true; $("[href*='#videoguide']", element).click(); }
        if ($("[href*='#alert']", element).attr('data-click') !== true) { $("[href*='#alert']", element).attr('data-click', true); $("[href*='#alert']", element).click(function (e) { $('html').animate({ scrollTop: $('#tab03').parent().offset().top - $('#tab-nav01').height() - 10 }, 200); }); }
        if ($(location).attr('href').indexOf('#alert') !== -1) { onPbStartLocationHref = true; $("[href*='#alert']", element).click(); }
        if ($("[href*='#calc']", element).attr('data-click') !== true) { $("[href*='#calc']", element).attr('data-click', true); $("[href*='#calc']", element).click(function (e) { $('html').animate({ scrollTop: $('#tab02').parent().offset().top - $('#tab-nav01').height() - 10 }, 200); }); }
        if ($(location).attr('href').indexOf('#calc') !== -1) { onPbStartLocationHref = true; $("[href*='#calc']", element).click(); }
        vwpb.startOnKeyOnToLabel(element); vwpb.startValidate(element);
    }; $(document).ready(function () { vwpb.init(); });
} catch (e) { }
try {
    var logger; var partnerId, getPartnerId, loadPartnerId; (function ($) {
        function OutboundClickExchangersForSendEvent(e) {
            const ev = { "role": "conversion", "place": "exchanger", "value": 0, "xname": '', "partner_id": '', "go": '' }; if ($('#exchanger-card').is('#exchanger-card')) { const exch = $('#exchanger-card'); ev.go = $(exch).attr('data-xobmen'); ev.xname = $(exch).attr('data-statname'); ev.value = Math.max(20, 1 * $(exch).attr('data-xv')); } else { ev.go = $(this).attr('data-xobmen'); }
            ev.d = $(e.target).attr('data-click'); ev.partner_id = getPartnerId(); (!!logger) && logger.console(ev); const evGa4 = { "event": "ga4_interaction", "action": "outbound_click", "parameters": ev }; window.dataLayer = window.dataLayer || []; window.dataLayer.push(evGa4);
        }
        if ($('.exchanger-template').find('.about-col').is('div')) { $(document).on('open_link.go_to.exSumo', '.exchanger-template .about-col[data-open]', OutboundClickExchangersForSendEvent); setTimeout(loadPartnerId, 1); }
    })(jQuery);
} catch (e) { }